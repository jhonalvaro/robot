

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jun 18 06:51:57 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F16Q41
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK5,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK6,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,delta=1
    76                           	psect	text58,global,reloc=2,class=CODE,delta=1
    77                           	psect	text59,global,reloc=2,class=CODE,delta=1
    78                           	psect	text60,global,reloc=2,class=CODE,delta=1
    79                           	psect	text61,global,reloc=2,class=CODE,delta=1
    80                           	psect	text62,global,reloc=2,class=CODE,delta=1
    81                           	psect	text63,global,reloc=2,class=CODE,delta=1
    82                           	psect	text64,global,reloc=2,class=CODE,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   110                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   111   000000                     
   112                           ; Generated 18/12/2023 GMT
   113                           ; 
   114                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution. Publication is not required when
   128                           ;        this file is used in an embedded application.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC18F16Q41 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146   000000                     
   147 ;; Function _PWM3_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
   148   000000                     
   149 ;; Function _PWM3_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
   150   000000                     
   151 ;; Function _PWM3_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
   152   000000                     
   153 ;; Function _PWM2_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
   154   000000                     
   155 ;; Function _PWM2_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
   156   000000                     
   157 ;; Function _PWM2_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
   158   000000                     
   159 ;; Function _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
   160   000000                     
   161 ;; Function _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
   162   000000                     
   163 ;; Function _PWM1_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
   164   000000                     
   165 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   166   000000                     
   167 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   168   000000                     
   169 ;; Function _TMR0_DefaultOverflowCallback is unused but had its address taken
   170   000000                     
   171 ;; Function _TMR0_Tasks is unused but had its address taken
   172   000000                     
   173 ;; Function _dummyHandler is unused but had its address taken
   174   000000                     
   175 ;; Function _timeout_isr is unused but had its address taken
   176   000000                     
   177 ;; Function _UART1_Deinitialize is unused but had its address taken
   178   000000                     
   179 ;; Function _UART1_TransmitEnable is unused but had its address taken
   180   000000                     
   181 ;; Function _UART1_TransmitDisable is unused but had its address taken
   182   000000                     
   183 ;; Function _UART1_AutoBaudSet is unused but had its address taken
   184   000000                     
   185 ;; Function _UART1_AutoBaudQuery is unused but had its address taken
   186   000000                     
   187 ;; Function _UART1_IsRxReady is unused but had its address taken
   188   000000                     
   189 ;; Function _UART1_IsTxDone is unused but had its address taken
   190   000000                     
   191 ;; Function _UART1_ErrorGet is unused but had its address taken
   192   000000                     
   193 ;; Function _UART1_Read is unused but had its address taken
   194   000000                     
   195 ;; Function _UART1_DefaultFramingErrorCallback is unused but had its address taken
   196   000000                     
   197 ;; Function _UART1_DefaultOverrunErrorCallback is unused but had its address taken
   198   000000                     
   199 ;; Function _UART1_DefaultParityErrorCallback is unused but had its address taken
   200   000000                     
   201                           	psect	idataBANK5
   202   00523A                     __pidataBANK5:
   203                           	callstack 0
   204                           
   205                           ;initializer for _theta2
   206   00523A  0000               	dw	0
   207   00523C  42B4               	dw	17076
   208                           
   209                           ;initializer for _theta1
   210   00523E  0000               	dw	0
   211   005240  42B4               	dw	17076
   212                           
   213                           ;initializer for _theta0
   214   005242  0000               	dw	0
   215   005244  42B4               	dw	17076
   216                           
   217                           	psect	idataBANK6
   218   005252                     __pidataBANK6:
   219                           	callstack 0
   220                           
   221                           ;initializer for _dummy_exec
   222   005252  00                 	db	0
   223   005253  00                 	db	0
   224   005254  00                 	db	0
   225   005255  00                 	db	0
   226   005256  00                 	db	0
   227   005257  00                 	db	0
   228   005258  00                 	db	0
   229   005259  00                 	db	0
   230   00525A  00                 	db	0
   231   00525B  00                 	db	0
   232                           
   233                           	psect	smallconst
   234   001500                     __psmallconst:
   235                           	callstack 0
   236   001500  00                 	db	0
   237   001501                     _UART1:
   238                           	callstack 0
   239   001501  AA                 	db	low _UART1_Initialize
   240   001502  49                 	db	high _UART1_Initialize
   241   001503  00                 	db	0
   242   001504  00                 	db	0
   243   001505  00                 	db	0
   244   001506  00                 	db	0
   245   001507  1A                 	db	low _UART1_Write
   246   001508  53                 	db	high _UART1_Write
   247   001509  00                 	db	0
   248   00150A  00                 	db	0
   249   00150B  76                 	db	low _UART1_IsTxReady
   250   00150C  50                 	db	high _UART1_IsTxReady
   251   00150D  00                 	db	0
   252   00150E  00                 	db	0
   253   00150F  00                 	db	0
   254   001510  00                 	db	0
   255   001511  00                 	db	0
   256   001512  00                 	db	0
   257   001513  00                 	db	0
   258   001514  00                 	db	0
   259   001515  00                 	db	0
   260   001516  00                 	db	0
   261   001517  00                 	db	0
   262   001518  00                 	db	0
   263   001519  00                 	db	0
   264   00151A  00                 	db	0
   265   00151B  00                 	db	0
   266   00151C  00                 	db	0
   267   00151D  00                 	db	0
   268   00151E  00                 	db	0
   269   00151F  00                 	db	0
   270   001520  00                 	db	0
   271   001521  00                 	db	0
   272   001522  00                 	db	0
   273   001523  00                 	db	0
   274   001524  00                 	db	0
   275   001525  00                 	db	0
   276   001526  00                 	db	0
   277   001527  00                 	db	0
   278   001528  00                 	db	0
   279   001529  02                 	db	low _UART1_FramingErrorCallbackRegister
   280   00152A  52                 	db	high _UART1_FramingErrorCallbackRegister
   281   00152B  E6                 	db	low _UART1_OverrunErrorCallbackRegister
   282   00152C  51                 	db	high _UART1_OverrunErrorCallbackRegister
   283   00152D  CA                 	db	low _UART1_ParityErrorCallbackRegister
   284   00152E  51                 	db	high _UART1_ParityErrorCallbackRegister
   285   00152F  00                 	db	0
   286   001530  00                 	db	0
   287   001531                     __end_of_UART1:
   288                           	callstack 0
   289   001531                     _Timer0:
   290                           	callstack 0
   291   001531  E4                 	db	low _TMR0_Initialize
   292   001532  4F                 	db	high _TMR0_Initialize
   293   001533  38                 	db	low _TMR0_Start
   294   001534  53                 	db	high _TMR0_Start
   295   001535  32                 	db	low _TMR0_Stop
   296   001536  53                 	db	high _TMR0_Stop
   297   001537  46                 	db	low _TMR0_Write
   298   001538  52                 	db	high _TMR0_Write
   299   001539  98                 	db	low _TMR0_OverflowCallbackRegister
   300   00153A  52                 	db	high _TMR0_OverflowCallbackRegister
   301   00153B  00                 	db	0
   302   00153C  00                 	db	0
   303   00153D                     __end_of_Timer0:
   304                           	callstack 0
   305   000000                     _T0CON0	set	794
   306   000000                     _T0CON1	set	795
   307   000000                     _PIR6bits	set	1209
   308   000000                     _IOCBF	set	1039
   309   000000                     _IOCBN	set	1038
   310   000000                     _IOCBP	set	1037
   311   000000                     _IOCAF	set	1031
   312   000000                     _IOCAN	set	1030
   313   000000                     _IOCAP	set	1029
   314   000000                     _INLVLB	set	1036
   315   000000                     _INLVLA	set	1028
   316   000000                     _SLRCONB	set	1035
   317   000000                     _SLRCONA	set	1027
   318   000000                     _ODCONB	set	1034
   319   000000                     _ODCONA	set	1026
   320   000000                     _WPUB	set	1033
   321   000000                     _WPUA	set	1025
   322   000000                     _ANSELC	set	1040
   323   000000                     _ANSELB	set	1032
   324   000000                     _OSCTUNE	set	176
   325   000000                     _OSCFRQ	set	177
   326   000000                     _OSCEN	set	179
   327   000000                     _PWM1CON	set	1129
   328   000000                     _PWM1S1P2H	set	1134
   329   000000                     _PWM1S1P2L	set	1133
   330   000000                     _PWM1S1P1H	set	1132
   331   000000                     _PWM1S1P1L	set	1131
   332   000000                     _PWM1S1CFG	set	1130
   333   000000                     _PWM1GIE	set	1128
   334   000000                     _PWM1GIR	set	1127
   335   000000                     _PWM1PIPOS	set	1126
   336   000000                     _PWM1CPRE	set	1125
   337   000000                     _PWM1PRH	set	1124
   338   000000                     _PWM1PRL	set	1123
   339   000000                     _PWM1LDS	set	1122
   340   000000                     _PWM1CLK	set	1121
   341   000000                     _PWM2CON	set	1144
   342   000000                     _PWM2S1P2H	set	1149
   343   000000                     _PWM2S1P2L	set	1148
   344   000000                     _PWM2S1P1H	set	1147
   345   000000                     _PWM2S1P1L	set	1146
   346   000000                     _PWM2S1CFG	set	1145
   347   000000                     _PWM2GIE	set	1143
   348   000000                     _PWM2GIR	set	1142
   349   000000                     _PWM2PIPOS	set	1141
   350   000000                     _PWM2CPRE	set	1140
   351   000000                     _PWM2PRH	set	1139
   352   000000                     _PWM2PRL	set	1138
   353   000000                     _PWM2LDS	set	1137
   354   000000                     _PWM2CLK	set	1136
   355   000000                     _PWM3CON	set	1159
   356   000000                     _PWM3S1CFG	set	1160
   357   000000                     _PWM3GIE	set	1158
   358   000000                     _PWM3GIR	set	1157
   359   000000                     _PWM3PIPOS	set	1156
   360   000000                     _PWM3CPRE	set	1155
   361   000000                     _PWM3PRH	set	1154
   362   000000                     _PWM3PRL	set	1153
   363   000000                     _PWM3LDS	set	1152
   364   000000                     _PWM3CLK	set	1151
   365   00153D                     STR_3:
   366   00153D  25                 	db	37
   367   00153E  63                 	db	99	;'c'
   368   00153F  3A                 	db	58	;':'
   369   001540  25                 	db	37
   370   001541  2E                 	db	46
   371   001542  31                 	db	49	;'1'
   372   001543  66                 	db	102	;'f'
   373   001544  2C                 	db	44
   374   001545  25                 	db	37
   375   001546  2E                 	db	46
   376   001547  31                 	db	49	;'1'
   377   001548  66                 	db	102	;'f'
   378   001549  2C                 	db	44
   379   00154A  25                 	db	37
   380   00154B  2E                 	db	46
   381   00154C  31                 	db	49	;'1'
   382   00154D  66                 	db	102	;'f'
   383   00154E  0A                 	db	10
   384   00154F  00                 	db	0
   385   001550  25                 	db	37
   386   001551  6C                 	db	108	;'l'
   387   001552  64                 	db	100	;'d'
   388   001553  20                 	db	32
   389   001554  2D                 	db	45
   390   001555  3E                 	db	62	;'>'
   391   001556  20                 	db	32
   392   001557  00                 	db	0
   393   001558  4E                 	db	78	;'N'
   394   001559  55                 	db	85	;'U'
   395   00155A  4C                 	db	76	;'L'
   396   00155B  4C                 	db	76	;'L'
   397   00155C  0A                 	db	10
   398   00155D  00                 	db	0
   399   00155E                     STR_8:
   400   00155E  69                 	db	105	;'i'
   401   00155F  6E                 	db	110	;'n'
   402   001560  66                 	db	102	;'f'
   403   001561  00                 	db	0
   404   001562                     STR_11:
   405   001562  6E                 	db	110	;'n'
   406   001563  61                 	db	97	;'a'
   407   001564  6E                 	db	110	;'n'
   408   001565  00                 	db	0
   409   001566  00                 	db	0	; dummy byte at the end
   410   000000                     
   411                           	psect	nvBANK6
   412   00066C                     __pnvBANK6:
   413                           	callstack 0
   414   00066C                     _TMR0_OverflowCallback:
   415                           	callstack 0
   416   00066C                     	ds	2
   417   00066E                     _PWM1_16BIT_Period_InterruptHandler:
   418                           	callstack 0
   419   00066E                     	ds	2
   420   000670                     _PWM1_16BIT_Slice1Output2_InterruptHandler:
   421                           	callstack 0
   422   000670                     	ds	2
   423   000672                     _PWM1_16BIT_Slice1Output1_InterruptHandler:
   424                           	callstack 0
   425   000672                     	ds	2
   426   000674                     _PWM2_16BIT_Period_InterruptHandler:
   427                           	callstack 0
   428   000674                     	ds	2
   429   000676                     _PWM2_16BIT_Slice1Output2_InterruptHandler:
   430                           	callstack 0
   431   000676                     	ds	2
   432   000678                     _PWM2_16BIT_Slice1Output1_InterruptHandler:
   433                           	callstack 0
   434   000678                     	ds	2
   435   00067A                     _PWM3_16BIT_Period_InterruptHandler:
   436                           	callstack 0
   437   00067A                     	ds	2
   438   00067C                     _PWM3_16BIT_Slice1Output2_InterruptHandler:
   439                           	callstack 0
   440   00067C                     	ds	2
   441   00067E                     _PWM3_16BIT_Slice1Output1_InterruptHandler:
   442                           	callstack 0
   443   00067E                     	ds	2
   444   000000                     _U1FIFObits	set	688
   445   000000                     _U1ERRIRbits	set	690
   446   000000                     _U1UIRbits	set	689
   447   000000                     _U1CON0bits	set	683
   448   000000                     _U1CON1bits	set	684
   449   000000                     _T0CON0bits	set	794
   450   000000                     _LATCbits	set	1216
   451   000000                     _PWM1GIEbits	set	1128
   452   000000                     _PWM1CONbits	set	1129
   453   000000                     _PWM1GIRbits	set	1127
   454   000000                     _PWM2GIEbits	set	1143
   455   000000                     _PWM2CONbits	set	1144
   456   000000                     _PWM2GIRbits	set	1142
   457   000000                     _PWM3GIEbits	set	1158
   458   000000                     _PWM3CONbits	set	1159
   459   000000                     _PWM3GIRbits	set	1157
   460   000000                     _ACTCON	set	172
   461   000000                     _OSCCON1	set	173
   462   000000                     _PWM1ERS	set	1120
   463   000000                     _PWM2ERS	set	1135
   464   000000                     _PWM3ERS	set	1150
   465   000000                     _PIE1bits	set	1193
   466   000000                     _PIE4bits	set	1196
   467   000000                     _PIE5bits	set	1197
   468   000000                     _PIE7bits	set	1199
   469   000000                     _PIR7bits	set	1210
   470   000000                     _PWM3S1P2H	set	1164
   471   000000                     _PWM3S1P2L	set	1163
   472   000000                     _PWM3S1P1H	set	1162
   473   000000                     _PWM3S1P1L	set	1161
   474   000000                     _PIR10bits	set	1213
   475   000000                     _LATA	set	1214
   476   000000                     _PIR1bits	set	1204
   477   000000                     _PIR4bits	set	1207
   478   000000                     _PIR5bits	set	1208
   479   000000                     _OSCCON3	set	175
   480   000000                     _RB4PPS	set	525
   481   000000                     _RB7PPS	set	528
   482   000000                     _INT0PPS	set	574
   483   000000                     _U1RXPPS	set	626
   484   000000                     _RB6I2C	set	646
   485   000000                     _RB4I2C	set	647
   486   000000                     _ANSELA	set	1024
   487   000000                     _TRISA	set	1222
   488   000000                     _LATC	set	1216
   489   000000                     _LATB	set	1215
   490   000000                     _INTCON0bits	set	1238
   491   000000                     _TRISC	set	1224
   492   000000                     _TRISB	set	1223
   493   000000                     _IOCCF	set	1047
   494   000000                     _IOCCN	set	1046
   495   000000                     _IOCCP	set	1045
   496   000000                     _INLVLC	set	1044
   497   000000                     _SLRCONC	set	1043
   498   000000                     _ODCONC	set	1042
   499   000000                     _WPUC	set	1041
   500   000000                     _U1RXB	set	673
   501   000000                     _TMR0L	set	792
   502   000000                     _TMR0H	set	793
   503   000000                     _RC4PPS	set	533
   504   000000                     _RC5PPS	set	534
   505   000000                     _RC6PPS	set	535
   506   000000                     _RC7PPS	set	536
   507   000000                     _RB6PPS	set	527
   508   000000                     _PIR3bits	set	1206
   509   000000                     _PIE3bits	set	1195
   510   000000                     _U1ERRIE	set	691
   511   000000                     _U1ERRIR	set	690
   512   000000                     _U1UIR	set	689
   513   000000                     _U1FIFO	set	688
   514   000000                     _U1BRGH	set	687
   515   000000                     _U1BRGL	set	686
   516   000000                     _U1CON2	set	685
   517   000000                     _U1CON1	set	684
   518   000000                     _U1CON0	set	683
   519   000000                     _U1P3H	set	682
   520   000000                     _U1P3L	set	681
   521   000000                     _U1P2H	set	680
   522   000000                     _U1P2L	set	679
   523   000000                     _U1P1H	set	678
   524   000000                     _U1P1L	set	677
   525   000000                     _U1TXCHK	set	676
   526   000000                     _U1TXB	set	675
   527   000000                     _U1RXCHK	set	674
   528                           
   529                           ; #config settings
   530                           
   531                           	psect	cinit
   532   004A28                     __pcinit:
   533                           	callstack 0
   534   004A28                     start_initialization:
   535                           	callstack 0
   536   004A28                     __initialization:
   537                           	callstack 0
   538                           
   539                           ; Initialize objects allocated to BANK6 (10 bytes)
   540                           ; load TBLPTR registers with __pidataBANK6
   541   004A28  0E52               	movlw	low __pidataBANK6
   542   004A2A  6EF6               	movwf	tblptrl,c
   543   004A2C  0E52               	movlw	high __pidataBANK6
   544   004A2E  6EF7               	movwf	tblptrh,c
   545   004A30  0E00               	movlw	low (__pidataBANK6 shr (0+16))
   546   004A32  6EF8               	movwf	tblptru,c
   547   004A34  EE01  F280         	lfsr	0,__pdataBANK6
   548   004A38  EE10 F00A          	lfsr	1,10
   549   004A3C                     copy_data0:
   550   004A3C  0009               	tblrd		*+
   551   004A3E  C4F5 F4EE          	movff	tablat,postinc0
   552   004A42  50E5               	movf	postdec1,w,c
   553   004A44  50E1               	movf	fsr1l,w,c
   554   004A46  E1FA               	bnz	copy_data0
   555                           
   556                           ; Initialize objects allocated to BANK5 (12 bytes)
   557                           ; load TBLPTR registers with __pidataBANK5
   558   004A48  0E3A               	movlw	low __pidataBANK5
   559   004A4A  6EF6               	movwf	tblptrl,c
   560   004A4C  0E52               	movlw	high __pidataBANK5
   561   004A4E  6EF7               	movwf	tblptrh,c
   562   004A50  0E00               	movlw	low (__pidataBANK5 shr (0+16))
   563   004A52  6EF8               	movwf	tblptru,c
   564   004A54  EE01  F1F3         	lfsr	0,__pdataBANK5
   565   004A58  EE10 F00C          	lfsr	1,12
   566   004A5C                     copy_data1:
   567   004A5C  0009               	tblrd		*+
   568   004A5E  C4F5 F4EE          	movff	tablat,postinc0
   569   004A62  50E5               	movf	postdec1,w,c
   570   004A64  50E1               	movf	fsr1l,w,c
   571   004A66  E1FA               	bnz	copy_data1
   572                           
   573                           ; Clear objects allocated to BANK6 (108 bytes)
   574   004A68  EE01  F200         	lfsr	0,__pbssBANK6
   575   004A6C  0E6C               	movlw	108
   576   004A6E                     clear_0:
   577   004A6E  6AEE               	clrf	postinc0,c
   578   004A70  06E8               	decf	wreg,f,c
   579   004A72  E1FD               	bnz	clear_0
   580                           
   581                           ; Clear objects allocated to BANK5 (30 bytes)
   582   004A74  EE01  F1D5         	lfsr	0,__pbssBANK5
   583   004A78  0E1E               	movlw	30
   584   004A7A                     clear_1:
   585   004A7A  6AEE               	clrf	postinc0,c
   586   004A7C  06E8               	decf	wreg,f,c
   587   004A7E  E1FD               	bnz	clear_1
   588                           
   589                           ; Clear objects allocated to COMRAM (2 bytes)
   590   004A80  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   591   004A82  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   592                           
   593                           ;
   594                           ; Setup IVTBASE
   595                           ;
   596   004A84  0104               	movlb	4
   597   004A86  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   598   004A88  6F5D               	movwf	93,b
   599   004A8A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   600   004A8C  6F5E               	movwf	94,b
   601   004A8E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   602   004A90  6F5F               	movwf	95,b
   603   004A92                     end_of_initialization:
   604                           	callstack 0
   605   004A92                     __end_of__initialization:
   606                           	callstack 0
   607   004A92  0100               	movlb	0
   608   004A94  EF85  F027         	goto	_main	;jump to C main() function
   609                           
   610                           	psect	bssCOMRAM
   611   00055C                     __pbssCOMRAM:
   612                           	callstack 0
   613   00055C                     _executeQueueHead:
   614                           	callstack 0
   615   00055C                     	ds	2
   616                           
   617                           	psect	bssBANK5
   618   0005D5                     __pbssBANK5:
   619                           	callstack 0
   620   0005D5                     _theta3:
   621                           	callstack 0
   622   0005D5                     	ds	4
   623   0005D9                     _lastTimerLoad:
   624                           	callstack 0
   625   0005D9                     	ds	4
   626   0005DD                     _absoluteTimeofLastTimeout:
   627                           	callstack 0
   628   0005DD                     	ds	4
   629   0005E1                     _prec:
   630                           	callstack 0
   631   0005E1                     	ds	2
   632   0005E3                     _UART1_FramingErrorHandler:
   633                           	callstack 0
   634   0005E3                     	ds	2
   635   0005E5                     _timerTMR0ReloadVal16bit:
   636                           	callstack 0
   637   0005E5                     	ds	2
   638   0005E7                     _INT2_InterruptHandler:
   639                           	callstack 0
   640   0005E7                     	ds	2
   641   0005E9                     _INT1_InterruptHandler:
   642                           	callstack 0
   643   0005E9                     	ds	2
   644   0005EB                     _INT0_InterruptHandler:
   645                           	callstack 0
   646   0005EB                     	ds	2
   647   0005ED                     _flags:
   648                           	callstack 0
   649   0005ED                     	ds	1
   650   0005EE                     _detener:
   651                           	callstack 0
   652   0005EE                     	ds	1
   653   0005EF                     _modo_funcionamiento:
   654                           	callstack 0
   655   0005EF                     	ds	1
   656   0005F0                     _isRunning:
   657                           	callstack 0
   658   0005F0                     	ds	1
   659   0005F1                     _listHead:
   660                           	callstack 0
   661   0005F1                     	ds	2
   662                           
   663                           	psect	dataBANK5
   664   0005F3                     __pdataBANK5:
   665                           	callstack 0
   666   0005F3                     _theta2:
   667                           	callstack 0
   668   0005F3                     	ds	4
   669   0005F7                     _theta1:
   670                           	callstack 0
   671   0005F7                     	ds	4
   672   0005FB                     _theta0:
   673                           	callstack 0
   674   0005FB                     	ds	4
   675                           
   676                           	psect	bssBANK6
   677   000600                     __pbssBANK6:
   678                           	callstack 0
   679   000600                     floorf@F521:
   680                           	callstack 0
   681   000600                     	ds	4
   682   000604                     ___fpclassifyf@F465:
   683                           	callstack 0
   684   000604                     	ds	4
   685   000608                     _width:
   686                           	callstack 0
   687   000608                     	ds	2
   688   00060A                     _modoActual:
   689                           	callstack 0
   690   00060A                     	ds	2
   691   00060C                     _UART1_ParityErrorHandler:
   692                           	callstack 0
   693   00060C                     	ds	2
   694   00060E                     _UART1_OverrunErrorHandler:
   695                           	callstack 0
   696   00060E                     	ds	2
   697   000610                     _uart1RxLastError:
   698                           	callstack 0
   699   000610                     	ds	2
   700   000612                     _dbuf:
   701                           	callstack 0
   702   000612                     	ds	80
   703   000662                     _dummy:
   704                           	callstack 0
   705   000662                     	ds	10
   706                           
   707                           	psect	dataBANK6
   708   000680                     __pdataBANK6:
   709                           	callstack 0
   710   000680                     _dummy_exec:
   711                           	callstack 0
   712   000680                     	ds	10
   713                           
   714                           	psect	cstackBANK6
   715   00068A                     __pcstackBANK6:
   716                           	callstack 0
   717   00068A                     ??_evaluarModoActual:
   718                           
   719                           ; 1 bytes @ 0x0
   720   00068A                     	ds	2
   721                           
   722                           	psect	cstackBANK5
   723   000560                     __pcstackBANK5:
   724                           	callstack 0
   725   000560                     ___flge@ff1:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x0
   729   000560                     	ds	4
   730   000564                     ___flge@ff2:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x4
   734   000564                     	ds	4
   735   000568                     ??___flge:
   736                           
   737                           ; 1 bytes @ 0x8
   738   000568                     	ds	4
   739   00056C                     efgtoa@fp:
   740                           	callstack 0
   741   00056C                     set3@theta3_desired:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0xC
   745   00056C                     	ds	2
   746   00056E                     efgtoa@f:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0xE
   750   00056E                     	ds	4
   751   000572                     efgtoa@c:
   752                           	callstack 0
   753                           
   754                           ; 1 bytes @ 0x12
   755   000572                     	ds	1
   756   000573                     efgtoa@ne:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x13
   760   000573                     	ds	2
   761   000575                     efgtoa@p:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x15
   765   000575                     	ds	2
   766   000577                     efgtoa@t:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x17
   770   000577                     	ds	2
   771   000579                     _efgtoa$2680:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x19
   775   000579                     	ds	2
   776   00057B                     efgtoa@pp:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x1B
   780   00057B                     	ds	1
   781   00057C                     efgtoa@mode:
   782                           	callstack 0
   783                           
   784                           ; 1 bytes @ 0x1C
   785   00057C                     	ds	1
   786   00057D                     efgtoa@nmode:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x1D
   790   00057D                     	ds	1
   791   00057E                     efgtoa@d:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x1E
   795   00057E                     	ds	2
   796   000580                     efgtoa@m:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x20
   800   000580                     	ds	2
   801   000582                     efgtoa@e:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x22
   805   000582                     	ds	2
   806   000584                     efgtoa@w:
   807                           	callstack 0
   808                           
   809                           ; 2 bytes @ 0x24
   810   000584                     	ds	2
   811   000586                     efgtoa@ou:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x26
   815   000586                     	ds	4
   816   00058A                     efgtoa@i:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x2A
   820   00058A                     	ds	2
   821   00058C                     efgtoa@h:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x2C
   825   00058C                     	ds	4
   826   000590                     efgtoa@l:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x30
   830   000590                     	ds	4
   831   000594                     efgtoa@sign:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x34
   835   000594                     	ds	1
   836   000595                     efgtoa@g:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x35
   840   000595                     	ds	4
   841   000599                     efgtoa@n:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x39
   845   000599                     	ds	2
   846   00059B                     efgtoa@u:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x3B
   850   00059B                     	ds	4
   851   00059F                     vfpfcnvrt@fp:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x3F
   855   00059F                     	ds	2
   856   0005A1                     vfpfcnvrt@fmt:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x41
   860   0005A1                     	ds	2
   861   0005A3                     vfpfcnvrt@ap:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x43
   865   0005A3                     	ds	2
   866   0005A5                     ??_vfpfcnvrt:
   867                           
   868                           ; 1 bytes @ 0x45
   869   0005A5                     	ds	2
   870   0005A7                     vfpfcnvrt@convarg:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x47
   874   0005A7                     	ds	4
   875   0005AB                     vfpfcnvrt@c:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x4B
   879   0005AB                     	ds	1
   880   0005AC                     vfpfcnvrt@cp:
   881                           	callstack 0
   882                           
   883                           ; 1 bytes @ 0x4C
   884   0005AC                     	ds	1
   885   0005AD                     ?_vfprintf:
   886                           	callstack 0
   887   0005AD                     vfprintf@fp:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x4D
   891   0005AD                     	ds	2
   892   0005AF                     vfprintf@fmt:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x4F
   896   0005AF                     	ds	1
   897   0005B0                     vfprintf@ap:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x50
   901   0005B0                     	ds	2
   902   0005B2                     ?_printf:
   903                           	callstack 0
   904   0005B2                     printf@fmt:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x52
   908   0005B2                     	ds	15
   909   0005C1                     printf@ap:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x61
   913   0005C1                     	ds	2
   914   0005C3                     set0@theta0_desired:
   915                           	callstack 0
   916   0005C3                     set1@theta1_desired:
   917                           	callstack 0
   918   0005C3                     set2@theta2_desired:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x63
   922   0005C3                     	ds	4
   923   0005C7                     ??_set0:
   924   0005C7                     ??_set1:
   925   0005C7                     ??_set2:
   926                           
   927                           ; 1 bytes @ 0x67
   928   0005C7                     	ds	2
   929   0005C9                     goto_servo@theta0_desired:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x69
   933   0005C9                     	ds	4
   934   0005CD                     goto_servo@theta1_desired:
   935                           	callstack 0
   936                           
   937                           ; 4 bytes @ 0x6D
   938   0005CD                     	ds	4
   939   0005D1                     goto_servo@theta2_desired:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x71
   943   0005D1                     	ds	4
   944                           
   945                           	psect	cstackCOMRAM
   946   000501                     __pcstackCOMRAM:
   947                           	callstack 0
   948   000501                     ??_INTERRUPT_InterruptManager:
   949   000501                     
   950                           ; 1 bytes @ 0x0
   951   000501                     	ds	2
   952   000503                     ?___fpclassifyf:
   953                           	callstack 0
   954   000503                     ?___wmul:
   955                           	callstack 0
   956   000503                     ?___fladd:
   957                           	callstack 0
   958   000503                     ?___fldiv:
   959                           	callstack 0
   960   000503                     ?_labs:
   961                           	callstack 0
   962   000503                     ?___aldiv:
   963                           	callstack 0
   964   000503                     ?___almod:
   965                           	callstack 0
   966   000503                     ?___flneg:
   967                           	callstack 0
   968   000503                     _UART1_IsTxReady$1897:
   969                           	callstack 0
   970   000503                     UART1_Write@txData:
   971                           	callstack 0
   972   000503                     PWM3_16BIT_SetSlice1Output1DutyCycleRegister@registerValue:
   973                           	callstack 0
   974   000503                     PWM3_16BIT_SetSlice1Output2DutyCycleRegister@registerValue:
   975                           	callstack 0
   976   000503                     PWM3_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   977                           	callstack 0
   978   000503                     PWM3_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   979                           	callstack 0
   980   000503                     PWM3_16BIT_Period_SetInterruptHandler@InterruptHandler:
   981                           	callstack 0
   982   000503                     PWM2_16BIT_SetSlice1Output1DutyCycleRegister@registerValue:
   983                           	callstack 0
   984   000503                     PWM2_16BIT_SetSlice1Output2DutyCycleRegister@registerValue:
   985                           	callstack 0
   986   000503                     PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   987                           	callstack 0
   988   000503                     PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   989                           	callstack 0
   990   000503                     PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler:
   991                           	callstack 0
   992   000503                     PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue:
   993                           	callstack 0
   994   000503                     PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue:
   995                           	callstack 0
   996   000503                     PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   997                           	callstack 0
   998   000503                     PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   999                           	callstack 0
  1000   000503                     PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler:
  1001                           	callstack 0
  1002   000503                     INT0_SetInterruptHandler@InterruptHandler:
  1003                           	callstack 0
  1004   000503                     INT1_SetInterruptHandler@InterruptHandler:
  1005                           	callstack 0
  1006   000503                     INT2_SetInterruptHandler@InterruptHandler:
  1007                           	callstack 0
  1008   000503                     TMR0_Write@timerVal:
  1009                           	callstack 0
  1010   000503                     TMR0_OverflowCallbackRegister@CallbackHandler:
  1011                           	callstack 0
  1012   000503                     UART1_FramingErrorCallbackRegister@callbackHandler:
  1013                           	callstack 0
  1014   000503                     UART1_OverrunErrorCallbackRegister@callbackHandler:
  1015                           	callstack 0
  1016   000503                     UART1_ParityErrorCallbackRegister@callbackHandler:
  1017                           	callstack 0
  1018   000503                     ___wmul@multiplier:
  1019                           	callstack 0
  1020   000503                     memcpy@d1:
  1021                           	callstack 0
  1022   000503                     strcpy@dest:
  1023                           	callstack 0
  1024   000503                     ___aldiv@dividend:
  1025                           	callstack 0
  1026   000503                     ___almod@dividend:
  1027                           	callstack 0
  1028   000503                     ___fleq@ff1:
  1029                           	callstack 0
  1030   000503                     ___flneg@f1:
  1031                           	callstack 0
  1032   000503                     ___fladd@b:
  1033                           	callstack 0
  1034   000503                     ___fldiv@b:
  1035                           	callstack 0
  1036   000503                     ___fpclassifyf@x:
  1037                           	callstack 0
  1038   000503                     labs@a:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x2
  1042   000503                     	ds	1
  1043   000504                     putch@txData:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x3
  1047   000504                     	ds	1
  1048   000505                     ??_TMR0_Initialize:
  1049   000505                     strcpy@src:
  1050                           	callstack 0
  1051   000505                     ___wmul@multiplicand:
  1052                           	callstack 0
  1053   000505                     memcpy@s1:
  1054                           	callstack 0
  1055   000505                     fputc@c:
  1056                           	callstack 0
  1057                           
  1058                           ; 2 bytes @ 0x4
  1059   000505                     	ds	1
  1060   000506                     ??_strcpy:
  1061                           
  1062                           ; 1 bytes @ 0x5
  1063   000506                     	ds	1
  1064   000507                     ??___fpclassifyf:
  1065   000507                     ??_labs:
  1066   000507                     ___wmul@product:
  1067                           	callstack 0
  1068   000507                     memcpy@n:
  1069                           	callstack 0
  1070   000507                     fputc@fp:
  1071                           	callstack 0
  1072   000507                     strcpy@d:
  1073                           	callstack 0
  1074   000507                     ___aldiv@divisor:
  1075                           	callstack 0
  1076   000507                     ___almod@divisor:
  1077                           	callstack 0
  1078   000507                     ___fleq@ff2:
  1079                           	callstack 0
  1080   000507                     ___fladd@a:
  1081                           	callstack 0
  1082   000507                     ___fldiv@a:
  1083                           	callstack 0
  1084                           
  1085                           ; 4 bytes @ 0x6
  1086   000507                     	ds	2
  1087   000509                     ??_fputc:
  1088   000509                     ?_read_prec_or_width:
  1089                           	callstack 0
  1090   000509                     read_prec_or_width@fmt:
  1091                           	callstack 0
  1092   000509                     memcpy@d:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x8
  1096   000509                     	ds	2
  1097   00050B                     ??___fladd:
  1098   00050B                     ??___fldiv:
  1099   00050B                     ??___fleq:
  1100   00050B                     ___aldiv@counter:
  1101                           	callstack 0
  1102   00050B                     ___almod@counter:
  1103                           	callstack 0
  1104   00050B                     read_prec_or_width@ap:
  1105                           	callstack 0
  1106   00050B                     ___fpclassifyf@e:
  1107                           	callstack 0
  1108   00050B                     memcpy@s:
  1109                           	callstack 0
  1110                           
  1111                           ; 2 bytes @ 0xA
  1112   00050B                     	ds	1
  1113   00050C                     ___aldiv@sign:
  1114                           	callstack 0
  1115   00050C                     ___almod@sign:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0xB
  1119   00050C                     	ds	1
  1120   00050D                     ??_read_prec_or_width:
  1121   00050D                     memcpy@tmp:
  1122                           	callstack 0
  1123   00050D                     ___aldiv@quotient:
  1124                           	callstack 0
  1125   00050D                     ___fpclassifyf@u:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0xC
  1129   00050D                     	ds	1
  1130   00050E                     fputs@s:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0xD
  1134   00050E                     	ds	1
  1135   00050F                     ___fladd@signs:
  1136                           	callstack 0
  1137   00050F                     read_prec_or_width@c:
  1138                           	callstack 0
  1139   00050F                     ___fldiv@rem:
  1140                           	callstack 0
  1141                           
  1142                           ; 4 bytes @ 0xE
  1143   00050F                     	ds	1
  1144   000510                     ___fladd@aexp:
  1145                           	callstack 0
  1146   000510                     read_prec_or_width@n:
  1147                           	callstack 0
  1148   000510                     fputs@fp:
  1149                           	callstack 0
  1150                           
  1151                           ; 2 bytes @ 0xF
  1152   000510                     	ds	1
  1153   000511                     ___fladd@bexp:
  1154                           	callstack 0
  1155                           
  1156                           ; 1 bytes @ 0x10
  1157   000511                     	ds	1
  1158   000512                     ___fladd@grs:
  1159                           	callstack 0
  1160   000512                     fputs@c:
  1161                           	callstack 0
  1162                           
  1163                           ; 1 bytes @ 0x11
  1164   000512                     	ds	1
  1165   000513                     ___fldiv@sign:
  1166                           	callstack 0
  1167   000513                     fputs@i:
  1168                           	callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x12
  1171   000513                     	ds	1
  1172   000514                     ___fldiv@new_exp:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x13
  1176   000514                     	ds	1
  1177   000515                     pad@fp:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x14
  1181   000515                     	ds	1
  1182   000516                     ___fldiv@grs:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x15
  1186   000516                     	ds	1
  1187   000517                     pad@buf:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x16
  1191   000517                     	ds	2
  1192   000519                     pad@p:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x18
  1196   000519                     	ds	1
  1197   00051A                     ___fldiv@bexp:
  1198                           	callstack 0
  1199                           
  1200                           ; 1 bytes @ 0x19
  1201   00051A                     	ds	1
  1202   00051B                     ??_pad:
  1203   00051B                     ___fldiv@aexp:
  1204                           	callstack 0
  1205                           
  1206                           ; 1 bytes @ 0x1A
  1207   00051B                     	ds	1
  1208   00051C                     ?___flmul:
  1209                           	callstack 0
  1210   00051C                     ?_floorf:
  1211                           	callstack 0
  1212   00051C                     pad@i:
  1213                           	callstack 0
  1214   00051C                     ___flmul@b:
  1215                           	callstack 0
  1216   00051C                     floorf@x:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x1B
  1220   00051C                     	ds	4
  1221   000520                     ??_floorf:
  1222   000520                     ___flmul@a:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x1F
  1226   000520                     	ds	4
  1227   000524                     ??___flmul:
  1228                           
  1229                           ; 1 bytes @ 0x23
  1230   000524                     	ds	2
  1231   000526                     floorf@m:
  1232                           	callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x25
  1235   000526                     	ds	2
  1236   000528                     ___flmul@sign:
  1237                           	callstack 0
  1238                           
  1239                           ; 1 bytes @ 0x27
  1240   000528                     	ds	1
  1241   000529                     ___flmul@grs:
  1242                           	callstack 0
  1243                           
  1244                           ; 4 bytes @ 0x28
  1245   000529                     	ds	1
  1246   00052A                     floorf@e:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x29
  1250   00052A                     	ds	2
  1251   00052C                     floorf@u:
  1252                           	callstack 0
  1253                           
  1254                           ; 4 bytes @ 0x2B
  1255   00052C                     	ds	1
  1256   00052D                     ___flmul@aexp:
  1257                           	callstack 0
  1258                           
  1259                           ; 1 bytes @ 0x2C
  1260   00052D                     	ds	1
  1261   00052E                     ___flmul@bexp:
  1262                           	callstack 0
  1263                           
  1264                           ; 1 bytes @ 0x2D
  1265   00052E                     	ds	1
  1266   00052F                     ___flmul@prod:
  1267                           	callstack 0
  1268                           
  1269                           ; 4 bytes @ 0x2E
  1270   00052F                     	ds	4
  1271   000533                     ___flmul@temp:
  1272                           	callstack 0
  1273                           
  1274                           ; 2 bytes @ 0x32
  1275   000533                     	ds	2
  1276   000535                     ?___flsub:
  1277                           	callstack 0
  1278   000535                     ___flsub@b:
  1279                           	callstack 0
  1280                           
  1281                           ; 4 bytes @ 0x34
  1282   000535                     	ds	4
  1283   000539                     ___flsub@a:
  1284                           	callstack 0
  1285                           
  1286                           ; 4 bytes @ 0x38
  1287   000539                     	ds	4
  1288   00053D                     ?___fltol:
  1289                           	callstack 0
  1290   00053D                     ___fltol@f1:
  1291                           	callstack 0
  1292                           
  1293                           ; 4 bytes @ 0x3C
  1294   00053D                     	ds	4
  1295   000541                     ??___fltol:
  1296                           
  1297                           ; 1 bytes @ 0x40
  1298   000541                     	ds	4
  1299   000545                     ___fltol@sign1:
  1300                           	callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x44
  1303   000545                     	ds	1
  1304   000546                     ___fltol@exp1:
  1305                           	callstack 0
  1306                           
  1307                           ; 1 bytes @ 0x45
  1308   000546                     	ds	1
  1309   000547                     ?_abs:
  1310                           	callstack 0
  1311   000547                     abs@a:
  1312                           	callstack 0
  1313   000547                     setServoAngle@angulo:
  1314                           	callstack 0
  1315                           
  1316                           ; 4 bytes @ 0x46
  1317   000547                     	ds	2
  1318   000549                     ??_abs:
  1319                           
  1320                           ; 1 bytes @ 0x48
  1321   000549                     	ds	2
  1322   00054B                     ?___xxtofl:
  1323                           	callstack 0
  1324   00054B                     setServoAngle@servo:
  1325                           	callstack 0
  1326   00054B                     dtoa@fp:
  1327                           	callstack 0
  1328   00054B                     ___xxtofl@val:
  1329                           	callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x4A
  1332   00054B                     	ds	1
  1333   00054C                     setServoAngle@pwmValue:
  1334                           	callstack 0
  1335                           
  1336                           ; 2 bytes @ 0x4B
  1337   00054C                     	ds	1
  1338   00054D                     dtoa@d:
  1339                           	callstack 0
  1340                           
  1341                           ; 4 bytes @ 0x4C
  1342   00054D                     	ds	1
  1343   00054E                     ??_openGate:
  1344   00054E                     
  1345                           ; 1 bytes @ 0x4D
  1346   00054E                     	ds	1
  1347   00054F                     ??___xxtofl:
  1348                           
  1349                           ; 1 bytes @ 0x4E
  1350   00054F                     	ds	2
  1351   000551                     _dtoa$2649:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x50
  1355   000551                     	ds	2
  1356   000553                     ___xxtofl@sign:
  1357                           	callstack 0
  1358   000553                     dtoa@w:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x52
  1362   000553                     	ds	1
  1363   000554                     ___xxtofl@exp:
  1364                           	callstack 0
  1365                           
  1366                           ; 1 bytes @ 0x53
  1367   000554                     	ds	1
  1368   000555                     dtoa@p:
  1369                           	callstack 0
  1370   000555                     ___xxtofl@arg:
  1371                           	callstack 0
  1372                           
  1373                           ; 4 bytes @ 0x54
  1374   000555                     	ds	2
  1375   000557                     dtoa@s:
  1376                           	callstack 0
  1377                           
  1378                           ; 1 bytes @ 0x56
  1379   000557                     	ds	1
  1380   000558                     dtoa@i:
  1381                           	callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x57
  1384   000558                     	ds	1
  1385   000559                     ??_set3:
  1386   000559                     ??_efgtoa:
  1387                           
  1388                           ; 1 bytes @ 0x58
  1389   000559                     	ds	2
  1390   00055B                     vfprintf@cfmt:
  1391                           	callstack 0
  1392                           
  1393                           ; 1 bytes @ 0x5A
  1394   00055B                     	ds	1
  1395   00055C                     
  1396                           ; 1 bytes @ 0x5B
  1397 ;;
  1398 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1399 ;;
  1400 ;; *************** function _main *****************
  1401 ;; Defined at:
  1402 ;;		line 70 in file "main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  theta2_str      5    0        unsigned char [5]
  1407 ;;  theta1_str      5    0        unsigned char [5]
  1408 ;;  theta0_str      5    0        unsigned char [5]
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;Total ram usage:        0 bytes
  1423 ;; Hardware stack levels required when called: 18
  1424 ;; This function calls:
  1425 ;;		_INT0_SetInterruptHandler
  1426 ;;		_PWM1_16BIT_Initialize
  1427 ;;		_PWM2_16BIT_Initialize
  1428 ;;		_PWM3_16BIT_Initialize
  1429 ;;		_SYSTEM_Initialize
  1430 ;;		_UART1_Initialize
  1431 ;;		_evaluarModoActual
  1432 ;; This function is called by:
  1433 ;;		Startup code after reset
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text0
  1438   004F0A                     __ptext0:
  1439                           	callstack 0
  1440   004F0A                     _main:
  1441                           	callstack 109
  1442   004F0A                     
  1443                           ;main.c: 74:     SYSTEM_Initialize();
  1444   004F0A  ECA0  F028         	call	_SYSTEM_Initialize	;wreg free
  1445                           
  1446                           ;main.c: 76:     INT0_SetInterruptHandler(ISR_Boton);
  1447   004F0E  0E3E               	movlw	low _ISR_Boton
  1448   004F10  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
  1449   004F12  0E53               	movlw	high _ISR_Boton
  1450   004F14  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  1451   004F16  EC88  F029         	call	_INT0_SetInterruptHandler	;wreg free
  1452   004F1A                     
  1453                           ;main.c: 78:     (INTCON0bits.GIE = 1);
  1454   004F1A  8ED6               	bsf	214,7,c	;volatile
  1455                           
  1456                           ;main.c: 80:     PWM1_16BIT_Initialize();
  1457   004F1C  ECEF  F025         	call	_PWM1_16BIT_Initialize	;wreg free
  1458                           
  1459                           ;main.c: 81:     PWM2_16BIT_Initialize();
  1460   004F20  ECB9  F025         	call	_PWM2_16BIT_Initialize	;wreg free
  1461                           
  1462                           ;main.c: 82:     PWM3_16BIT_Initialize();
  1463   004F24  EC83  F025         	call	_PWM3_16BIT_Initialize	;wreg free
  1464                           
  1465                           ;main.c: 84:     UART1_Initialize();
  1466   004F28  ECD5  F024         	call	_UART1_Initialize	;wreg free
  1467   004F2C                     
  1468                           ;main.c: 90:     char theta0_str[5], theta1_str[5], theta2_str[5];;main.c: 91:     modoA
      +                          ctual=1;
  1469   004F2C  0E00               	movlw	0
  1470   004F2E  0106               	movlb	6	; () banked
  1471   004F30  6F0B               	movwf	(_modoActual+1)& (0+255),b
  1472   004F32  0E01               	movlw	1
  1473   004F34  6F0A               	movwf	_modoActual& (0+255),b
  1474   004F36                     l6969:
  1475                           
  1476                           ;main.c: 92:     evaluarModoActual();
  1477   004F36  EC8D  F024         	call	_evaluarModoActual	;wreg free
  1478   004F3A  EF9B  F027         	goto	l6969
  1479   004F3E  EF0D  F000         	goto	start
  1480   004F42                     __end_of_main:
  1481                           	callstack 0
  1482                           
  1483 ;; *************** function _evaluarModoActual *****************
  1484 ;; Defined at:
  1485 ;;		line 106 in file "main.c"
  1486 ;; Parameters:    Size  Location     Type
  1487 ;;		None
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1502 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1503 ;;Total ram usage:        2 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 17
  1506 ;; This function calls:
  1507 ;;		_ejecutarModoAutomatico
  1508 ;;		_ejecutarModoManual
  1509 ;;		_ejecutarModoUART
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;;		_cambiarModo
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text1
  1517   00491A                     __ptext1:
  1518                           	callstack 0
  1519   00491A                     _evaluarModoActual:
  1520                           	callstack 109
  1521   00491A  82C0               	bsf	192,1,c	;volatile
  1522   00491C  EFAB  F024         	goto	l6945
  1523   004920                     l6929:
  1524                           
  1525                           ; BSR set to: 6
  1526                           ;main.c: 113:                 modo_funcionamiento='m';
  1527   004920  0E6D               	movlw	109
  1528   004922  0105               	movlb	5	; () banked
  1529   004924  6FEF               	movwf	_modo_funcionamiento& (0+255),b
  1530   004926                     
  1531                           ; BSR set to: 5
  1532                           ;main.c: 114:                 ejecutarModoManual();
  1533   004926  EC06  F027         	call	_ejecutarModoManual	;wreg free
  1534                           
  1535                           ;main.c: 115:                 break;
  1536   00492A  EFC6  F024         	goto	l1019
  1537   00492E                     l6933:
  1538                           
  1539                           ; BSR set to: 6
  1540                           ;main.c: 117:                 modo_funcionamiento='a';
  1541   00492E  0E61               	movlw	97
  1542   004930  0105               	movlb	5	; () banked
  1543   004932  6FEF               	movwf	_modo_funcionamiento& (0+255),b
  1544   004934                     
  1545                           ; BSR set to: 5
  1546                           ;main.c: 118:                 ejecutarModoAutomatico();
  1547   004934  EC69  F01D         	call	_ejecutarModoAutomatico	;wreg free
  1548                           
  1549                           ;main.c: 119:                 break;
  1550   004938  EFC6  F024         	goto	l1019
  1551   00493C                     l6937:
  1552                           
  1553                           ; BSR set to: 6
  1554                           ;main.c: 121:                 modo_funcionamiento='u';
  1555   00493C  0E75               	movlw	117
  1556   00493E  0105               	movlb	5	; () banked
  1557   004940  6FEF               	movwf	_modo_funcionamiento& (0+255),b
  1558   004942                     
  1559                           ; BSR set to: 5
  1560                           ;main.c: 122:                 ejecutarModoUART();
  1561   004942  ECE5  F026         	call	_ejecutarModoUART	;wreg free
  1562                           
  1563                           ;main.c: 123:                 break;
  1564   004946  EFC6  F024         	goto	l1019
  1565   00494A                     l6941:
  1566                           
  1567                           ; BSR set to: 6
  1568                           ;main.c: 126:                 modoActual = 0;
  1569   00494A  0E00               	movlw	0
  1570   00494C  6F0B               	movwf	(_modoActual+1)& (0+255),b
  1571   00494E  0E00               	movlw	0
  1572   004950  6F0A               	movwf	_modoActual& (0+255),b
  1573                           
  1574                           ;main.c: 127:                 break;
  1575   004952  EFC6  F024         	goto	l1019
  1576   004956                     l6945:
  1577   004956  C60A  F68A         	movff	_modoActual,??_evaluarModoActual
  1578   00495A  C60B  F68B         	movff	_modoActual+1,??_evaluarModoActual+1
  1579                           
  1580                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1581                           ; Switch size 1, requested type "simple"
  1582                           ; Number of cases is 1, Range of values is 0 to 0
  1583                           ; switch strategies available:
  1584                           ; Name         Instructions Cycles
  1585                           ; simple_byte            4     3 (average)
  1586                           ;	Chosen strategy is simple_byte
  1587   00495E  0106               	movlb	6	; () banked
  1588   004960  518B               	movf	(??_evaluarModoActual+1)& (0+255),w,b
  1589   004962  0A00               	xorlw	0	; case 0
  1590   004964  B4D8               	btfsc	status,2,c
  1591   004966  EFB7  F024         	goto	l6997
  1592   00496A  EFA5  F024         	goto	l6941
  1593   00496E                     l6997:
  1594                           
  1595                           ; BSR set to: 6
  1596                           ; Switch size 1, requested type "simple"
  1597                           ; Number of cases is 3, Range of values is 0 to 2
  1598                           ; switch strategies available:
  1599                           ; Name         Instructions Cycles
  1600                           ; simple_byte           10     6 (average)
  1601                           ;	Chosen strategy is simple_byte
  1602   00496E  518A               	movf	??_evaluarModoActual& (0+255),w,b
  1603   004970  0A00               	xorlw	0	; case 0
  1604   004972  B4D8               	btfsc	status,2,c
  1605   004974  EF90  F024         	goto	l6929
  1606   004978  0A01               	xorlw	1	; case 1
  1607   00497A  B4D8               	btfsc	status,2,c
  1608   00497C  EF97  F024         	goto	l6933
  1609   004980  0A03               	xorlw	3	; case 2
  1610   004982  B4D8               	btfsc	status,2,c
  1611   004984  EF9E  F024         	goto	l6937
  1612   004988  EFA5  F024         	goto	l6941
  1613   00498C                     l1019:
  1614   00498C  92C0               	bcf	192,1,c	;volatile
  1615   00498E                     
  1616                           ;main.c: 130:     _delay((unsigned long)((100)*(64000000/4000.0)));
  1617   00498E  0E09               	movlw	9
  1618   004990  0106               	movlb	6	; () banked
  1619   004992  6F8B               	movwf	(??_evaluarModoActual+1)& (0+255),b
  1620   004994  0E1E               	movlw	30
  1621   004996  6F8A               	movwf	??_evaluarModoActual& (0+255),b
  1622   004998  0EE4               	movlw	228
  1623   00499A                     u6987:
  1624   00499A  2EE8               	decfsz	wreg,f,c
  1625   00499C  D7FE               	bra	u6987
  1626   00499E  2F8A               	decfsz	??_evaluarModoActual& (0+255),f,b
  1627   0049A0  D7FC               	bra	u6987
  1628   0049A2  2F8B               	decfsz	(??_evaluarModoActual+1)& (0+255),f,b
  1629   0049A4  D7FA               	bra	u6987
  1630   0049A6  0000               	nop	
  1631   0049A8  0012               	return		;funcret
  1632   0049AA                     __end_of_evaluarModoActual:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _ejecutarModoUART *****************
  1636 ;; Defined at:
  1637 ;;		line 172 in file "main.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;Total ram usage:        0 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 14
  1658 ;; This function calls:
  1659 ;;		_printf
  1660 ;; This function is called by:
  1661 ;;		_evaluarModoActual
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text2
  1666   004DCA                     __ptext2:
  1667                           	callstack 0
  1668   004DCA                     _ejecutarModoUART:
  1669                           	callstack 111
  1670   004DCA                     
  1671                           ;main.c: 173:     printf("%c:%.1f,%.1f,%.1f\n", modo_funcionamiento, theta0, theta1, the
      +                          ta2);
  1672   004DCA  0E3D               	movlw	low STR_3
  1673   004DCC  0105               	movlb	5	; () banked
  1674   004DCE  6FB2               	movwf	printf@fmt& (0+255),b
  1675   004DD0  C5EF  F5B3         	movff	_modo_funcionamiento,?_printf+1
  1676   004DD4  6BB4               	clrf	(?_printf+2)& (0+255),b
  1677   004DD6  C5FB  F5B5         	movff	_theta0,?_printf+3
  1678   004DDA  C5FC  F5B6         	movff	_theta0+1,?_printf+4
  1679   004DDE  C5FD  F5B7         	movff	_theta0+2,?_printf+5
  1680   004DE2  C5FE  F5B8         	movff	_theta0+3,?_printf+6
  1681   004DE6  C5F7  F5B9         	movff	_theta1,?_printf+7
  1682   004DEA  C5F8  F5BA         	movff	_theta1+1,?_printf+8
  1683   004DEE  C5F9  F5BB         	movff	_theta1+2,?_printf+9
  1684   004DF2  C5FA  F5BC         	movff	_theta1+3,?_printf+10
  1685   004DF6  C5F3  F5BD         	movff	_theta2,?_printf+11
  1686   004DFA  C5F4  F5BE         	movff	_theta2+1,?_printf+12
  1687   004DFE  C5F5  F5BF         	movff	_theta2+2,?_printf+13
  1688   004E02  C5F6  F5C0         	movff	_theta2+3,?_printf+14
  1689   004E06  ECB3  F028         	call	_printf	;wreg free
  1690   004E0A  0012               	return		;funcret
  1691   004E0C                     __end_of_ejecutarModoUART:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function _ejecutarModoManual *****************
  1695 ;; Defined at:
  1696 ;;		line 138 in file "main.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels used: 1
  1716 ;; Hardware stack levels required when called: 14
  1717 ;; This function calls:
  1718 ;;		_printf
  1719 ;; This function is called by:
  1720 ;;		_evaluarModoActual
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text3
  1725   004E0C                     __ptext3:
  1726                           	callstack 0
  1727   004E0C                     _ejecutarModoManual:
  1728                           	callstack 111
  1729   004E0C                     
  1730                           ;main.c: 139:     printf("%c:%.1f,%.1f,%.1f\n", modo_funcionamiento, theta0, theta1, the
      +                          ta2);
  1731   004E0C  0E3D               	movlw	low STR_3
  1732   004E0E  0105               	movlb	5	; () banked
  1733   004E10  6FB2               	movwf	printf@fmt& (0+255),b
  1734   004E12  C5EF  F5B3         	movff	_modo_funcionamiento,?_printf+1
  1735   004E16  6BB4               	clrf	(?_printf+2)& (0+255),b
  1736   004E18  C5FB  F5B5         	movff	_theta0,?_printf+3
  1737   004E1C  C5FC  F5B6         	movff	_theta0+1,?_printf+4
  1738   004E20  C5FD  F5B7         	movff	_theta0+2,?_printf+5
  1739   004E24  C5FE  F5B8         	movff	_theta0+3,?_printf+6
  1740   004E28  C5F7  F5B9         	movff	_theta1,?_printf+7
  1741   004E2C  C5F8  F5BA         	movff	_theta1+1,?_printf+8
  1742   004E30  C5F9  F5BB         	movff	_theta1+2,?_printf+9
  1743   004E34  C5FA  F5BC         	movff	_theta1+3,?_printf+10
  1744   004E38  C5F3  F5BD         	movff	_theta2,?_printf+11
  1745   004E3C  C5F4  F5BE         	movff	_theta2+1,?_printf+12
  1746   004E40  C5F5  F5BF         	movff	_theta2+2,?_printf+13
  1747   004E44  C5F6  F5C0         	movff	_theta2+3,?_printf+14
  1748   004E48  ECB3  F028         	call	_printf	;wreg free
  1749   004E4C  0012               	return		;funcret
  1750   004E4E                     __end_of_ejecutarModoManual:
  1751                           	callstack 0
  1752                           
  1753 ;; *************** function _ejecutarModoAutomatico *****************
  1754 ;; Defined at:
  1755 ;;		line 143 in file "main.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;		None
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1773 ;;Total ram usage:        0 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 16
  1776 ;; This function calls:
  1777 ;;		_closeGate
  1778 ;;		_closeHand
  1779 ;;		_goto_servo
  1780 ;;		_openGate
  1781 ;;		_openHand
  1782 ;; This function is called by:
  1783 ;;		_evaluarModoActual
  1784 ;; This function uses a non-reentrant model
  1785 ;;
  1786                           
  1787                           	psect	text4
  1788   003AD2                     __ptext4:
  1789                           	callstack 0
  1790   003AD2                     _ejecutarModoAutomatico:
  1791                           	callstack 109
  1792   003AD2                     
  1793                           ;main.c: 149:     goto_servo(90.0,90.0,90.0);
  1794   003AD2  0E00               	movlw	0
  1795   003AD4  0105               	movlb	5	; () banked
  1796   003AD6  6FC9               	movwf	goto_servo@theta0_desired& (0+255),b
  1797   003AD8  0E00               	movlw	0
  1798   003ADA  6FCA               	movwf	(goto_servo@theta0_desired+1)& (0+255),b
  1799   003ADC  0EB4               	movlw	180
  1800   003ADE  6FCB               	movwf	(goto_servo@theta0_desired+2)& (0+255),b
  1801   003AE0  0E42               	movlw	66
  1802   003AE2  6FCC               	movwf	(goto_servo@theta0_desired+3)& (0+255),b
  1803   003AE4  0E00               	movlw	0
  1804   003AE6  6FCD               	movwf	goto_servo@theta1_desired& (0+255),b
  1805   003AE8  0E00               	movlw	0
  1806   003AEA  6FCE               	movwf	(goto_servo@theta1_desired+1)& (0+255),b
  1807   003AEC  0EB4               	movlw	180
  1808   003AEE  6FCF               	movwf	(goto_servo@theta1_desired+2)& (0+255),b
  1809   003AF0  0E42               	movlw	66
  1810   003AF2  6FD0               	movwf	(goto_servo@theta1_desired+3)& (0+255),b
  1811   003AF4  0E00               	movlw	0
  1812   003AF6  6FD1               	movwf	goto_servo@theta2_desired& (0+255),b
  1813   003AF8  0E00               	movlw	0
  1814   003AFA  6FD2               	movwf	(goto_servo@theta2_desired+1)& (0+255),b
  1815   003AFC  0EB4               	movlw	180
  1816   003AFE  6FD3               	movwf	(goto_servo@theta2_desired+2)& (0+255),b
  1817   003B00  0E42               	movlw	66
  1818   003B02  6FD4               	movwf	(goto_servo@theta2_desired+3)& (0+255),b
  1819   003B04  EC48  F027         	call	_goto_servo	;wreg free
  1820   003B08                     
  1821                           ;main.c: 150:     openHand();
  1822   003B08  EC65  F028         	call	_openHand	;wreg free
  1823   003B0C                     
  1824                           ;main.c: 152:     openGate();
  1825   003B0C  EC27  F027         	call	_openGate	;wreg free
  1826   003B10                     
  1827                           ;main.c: 153:     closeGate();
  1828   003B10  EC50  F028         	call	_closeGate	;wreg free
  1829   003B14                     
  1830                           ;main.c: 155:     goto_servo(117.0,120.0,30.0);
  1831   003B14  0E00               	movlw	0
  1832   003B16  0105               	movlb	5	; () banked
  1833   003B18  6FC9               	movwf	goto_servo@theta0_desired& (0+255),b
  1834   003B1A  0E00               	movlw	0
  1835   003B1C  6FCA               	movwf	(goto_servo@theta0_desired+1)& (0+255),b
  1836   003B1E  0EEA               	movlw	234
  1837   003B20  6FCB               	movwf	(goto_servo@theta0_desired+2)& (0+255),b
  1838   003B22  0E42               	movlw	66
  1839   003B24  6FCC               	movwf	(goto_servo@theta0_desired+3)& (0+255),b
  1840   003B26  0E00               	movlw	0
  1841   003B28  6FCD               	movwf	goto_servo@theta1_desired& (0+255),b
  1842   003B2A  0E00               	movlw	0
  1843   003B2C  6FCE               	movwf	(goto_servo@theta1_desired+1)& (0+255),b
  1844   003B2E  0EF0               	movlw	240
  1845   003B30  6FCF               	movwf	(goto_servo@theta1_desired+2)& (0+255),b
  1846   003B32  0E42               	movlw	66
  1847   003B34  6FD0               	movwf	(goto_servo@theta1_desired+3)& (0+255),b
  1848   003B36  0E00               	movlw	0
  1849   003B38  6FD1               	movwf	goto_servo@theta2_desired& (0+255),b
  1850   003B3A  0E00               	movlw	0
  1851   003B3C  6FD2               	movwf	(goto_servo@theta2_desired+1)& (0+255),b
  1852   003B3E  0EF0               	movlw	240
  1853   003B40  6FD3               	movwf	(goto_servo@theta2_desired+2)& (0+255),b
  1854   003B42  0E41               	movlw	65
  1855   003B44  6FD4               	movwf	(goto_servo@theta2_desired+3)& (0+255),b
  1856   003B46  EC48  F027         	call	_goto_servo	;wreg free
  1857   003B4A                     
  1858                           ;main.c: 156:     goto_servo(117.0,130.0,30.0);
  1859   003B4A  0E00               	movlw	0
  1860   003B4C  0105               	movlb	5	; () banked
  1861   003B4E  6FC9               	movwf	goto_servo@theta0_desired& (0+255),b
  1862   003B50  0E00               	movlw	0
  1863   003B52  6FCA               	movwf	(goto_servo@theta0_desired+1)& (0+255),b
  1864   003B54  0EEA               	movlw	234
  1865   003B56  6FCB               	movwf	(goto_servo@theta0_desired+2)& (0+255),b
  1866   003B58  0E42               	movlw	66
  1867   003B5A  6FCC               	movwf	(goto_servo@theta0_desired+3)& (0+255),b
  1868   003B5C  0E00               	movlw	0
  1869   003B5E  6FCD               	movwf	goto_servo@theta1_desired& (0+255),b
  1870   003B60  0E00               	movlw	0
  1871   003B62  6FCE               	movwf	(goto_servo@theta1_desired+1)& (0+255),b
  1872   003B64  0E02               	movlw	2
  1873   003B66  6FCF               	movwf	(goto_servo@theta1_desired+2)& (0+255),b
  1874   003B68  0E43               	movlw	67
  1875   003B6A  6FD0               	movwf	(goto_servo@theta1_desired+3)& (0+255),b
  1876   003B6C  0E00               	movlw	0
  1877   003B6E  6FD1               	movwf	goto_servo@theta2_desired& (0+255),b
  1878   003B70  0E00               	movlw	0
  1879   003B72  6FD2               	movwf	(goto_servo@theta2_desired+1)& (0+255),b
  1880   003B74  0EF0               	movlw	240
  1881   003B76  6FD3               	movwf	(goto_servo@theta2_desired+2)& (0+255),b
  1882   003B78  0E41               	movlw	65
  1883   003B7A  6FD4               	movwf	(goto_servo@theta2_desired+3)& (0+255),b
  1884   003B7C  EC48  F027         	call	_goto_servo	;wreg free
  1885   003B80                     
  1886                           ;main.c: 157:     goto_servo(117.0,131.0,37.0);
  1887   003B80  0E00               	movlw	0
  1888   003B82  0105               	movlb	5	; () banked
  1889   003B84  6FC9               	movwf	goto_servo@theta0_desired& (0+255),b
  1890   003B86  0E00               	movlw	0
  1891   003B88  6FCA               	movwf	(goto_servo@theta0_desired+1)& (0+255),b
  1892   003B8A  0EEA               	movlw	234
  1893   003B8C  6FCB               	movwf	(goto_servo@theta0_desired+2)& (0+255),b
  1894   003B8E  0E42               	movlw	66
  1895   003B90  6FCC               	movwf	(goto_servo@theta0_desired+3)& (0+255),b
  1896   003B92  0E00               	movlw	0
  1897   003B94  6FCD               	movwf	goto_servo@theta1_desired& (0+255),b
  1898   003B96  0E00               	movlw	0
  1899   003B98  6FCE               	movwf	(goto_servo@theta1_desired+1)& (0+255),b
  1900   003B9A  0E03               	movlw	3
  1901   003B9C  6FCF               	movwf	(goto_servo@theta1_desired+2)& (0+255),b
  1902   003B9E  0E43               	movlw	67
  1903   003BA0  6FD0               	movwf	(goto_servo@theta1_desired+3)& (0+255),b
  1904   003BA2  0E00               	movlw	0
  1905   003BA4  6FD1               	movwf	goto_servo@theta2_desired& (0+255),b
  1906   003BA6  0E00               	movlw	0
  1907   003BA8  6FD2               	movwf	(goto_servo@theta2_desired+1)& (0+255),b
  1908   003BAA  0E14               	movlw	20
  1909   003BAC  6FD3               	movwf	(goto_servo@theta2_desired+2)& (0+255),b
  1910   003BAE  0E42               	movlw	66
  1911   003BB0  6FD4               	movwf	(goto_servo@theta2_desired+3)& (0+255),b
  1912   003BB2  EC48  F027         	call	_goto_servo	;wreg free
  1913   003BB6                     
  1914                           ;main.c: 158:     goto_servo(117.0,132.0,37.0);
  1915   003BB6  0E00               	movlw	0
  1916   003BB8  0105               	movlb	5	; () banked
  1917   003BBA  6FC9               	movwf	goto_servo@theta0_desired& (0+255),b
  1918   003BBC  0E00               	movlw	0
  1919   003BBE  6FCA               	movwf	(goto_servo@theta0_desired+1)& (0+255),b
  1920   003BC0  0EEA               	movlw	234
  1921   003BC2  6FCB               	movwf	(goto_servo@theta0_desired+2)& (0+255),b
  1922   003BC4  0E42               	movlw	66
  1923   003BC6  6FCC               	movwf	(goto_servo@theta0_desired+3)& (0+255),b
  1924   003BC8  0E00               	movlw	0
  1925   003BCA  6FCD               	movwf	goto_servo@theta1_desired& (0+255),b
  1926   003BCC  0E00               	movlw	0
  1927   003BCE  6FCE               	movwf	(goto_servo@theta1_desired+1)& (0+255),b
  1928   003BD0  0E04               	movlw	4
  1929   003BD2  6FCF               	movwf	(goto_servo@theta1_desired+2)& (0+255),b
  1930   003BD4  0E43               	movlw	67
  1931   003BD6  6FD0               	movwf	(goto_servo@theta1_desired+3)& (0+255),b
  1932   003BD8  0E00               	movlw	0
  1933   003BDA  6FD1               	movwf	goto_servo@theta2_desired& (0+255),b
  1934   003BDC  0E00               	movlw	0
  1935   003BDE  6FD2               	movwf	(goto_servo@theta2_desired+1)& (0+255),b
  1936   003BE0  0E14               	movlw	20
  1937   003BE2  6FD3               	movwf	(goto_servo@theta2_desired+2)& (0+255),b
  1938   003BE4  0E42               	movlw	66
  1939   003BE6  6FD4               	movwf	(goto_servo@theta2_desired+3)& (0+255),b
  1940   003BE8  EC48  F027         	call	_goto_servo	;wreg free
  1941   003BEC                     
  1942                           ;main.c: 159:     closeHand();
  1943   003BEC  EC79  F028         	call	_closeHand	;wreg free
  1944                           
  1945                           ;main.c: 161:     goto_servo(117.0,130.0,39.0);
  1946   003BF0  0E00               	movlw	0
  1947   003BF2  0105               	movlb	5	; () banked
  1948   003BF4  6FC9               	movwf	goto_servo@theta0_desired& (0+255),b
  1949   003BF6  0E00               	movlw	0
  1950   003BF8  6FCA               	movwf	(goto_servo@theta0_desired+1)& (0+255),b
  1951   003BFA  0EEA               	movlw	234
  1952   003BFC  6FCB               	movwf	(goto_servo@theta0_desired+2)& (0+255),b
  1953   003BFE  0E42               	movlw	66
  1954   003C00  6FCC               	movwf	(goto_servo@theta0_desired+3)& (0+255),b
  1955   003C02  0E00               	movlw	0
  1956   003C04  6FCD               	movwf	goto_servo@theta1_desired& (0+255),b
  1957   003C06  0E00               	movlw	0
  1958   003C08  6FCE               	movwf	(goto_servo@theta1_desired+1)& (0+255),b
  1959   003C0A  0E02               	movlw	2
  1960   003C0C  6FCF               	movwf	(goto_servo@theta1_desired+2)& (0+255),b
  1961   003C0E  0E43               	movlw	67
  1962   003C10  6FD0               	movwf	(goto_servo@theta1_desired+3)& (0+255),b
  1963   003C12  0E00               	movlw	0
  1964   003C14  6FD1               	movwf	goto_servo@theta2_desired& (0+255),b
  1965   003C16  0E00               	movlw	0
  1966   003C18  6FD2               	movwf	(goto_servo@theta2_desired+1)& (0+255),b
  1967   003C1A  0E1C               	movlw	28
  1968   003C1C  6FD3               	movwf	(goto_servo@theta2_desired+2)& (0+255),b
  1969   003C1E  0E42               	movlw	66
  1970   003C20  6FD4               	movwf	(goto_servo@theta2_desired+3)& (0+255),b
  1971   003C22  EC48  F027         	call	_goto_servo	;wreg free
  1972                           
  1973                           ;main.c: 162:     goto_servo(117.0,130.0,50.0);
  1974   003C26  0E00               	movlw	0
  1975   003C28  0105               	movlb	5	; () banked
  1976   003C2A  6FC9               	movwf	goto_servo@theta0_desired& (0+255),b
  1977   003C2C  0E00               	movlw	0
  1978   003C2E  6FCA               	movwf	(goto_servo@theta0_desired+1)& (0+255),b
  1979   003C30  0EEA               	movlw	234
  1980   003C32  6FCB               	movwf	(goto_servo@theta0_desired+2)& (0+255),b
  1981   003C34  0E42               	movlw	66
  1982   003C36  6FCC               	movwf	(goto_servo@theta0_desired+3)& (0+255),b
  1983   003C38  0E00               	movlw	0
  1984   003C3A  6FCD               	movwf	goto_servo@theta1_desired& (0+255),b
  1985   003C3C  0E00               	movlw	0
  1986   003C3E  6FCE               	movwf	(goto_servo@theta1_desired+1)& (0+255),b
  1987   003C40  0E02               	movlw	2
  1988   003C42  6FCF               	movwf	(goto_servo@theta1_desired+2)& (0+255),b
  1989   003C44  0E43               	movlw	67
  1990   003C46  6FD0               	movwf	(goto_servo@theta1_desired+3)& (0+255),b
  1991   003C48  0E00               	movlw	0
  1992   003C4A  6FD1               	movwf	goto_servo@theta2_desired& (0+255),b
  1993   003C4C  0E00               	movlw	0
  1994   003C4E  6FD2               	movwf	(goto_servo@theta2_desired+1)& (0+255),b
  1995   003C50  0E48               	movlw	72
  1996   003C52  6FD3               	movwf	(goto_servo@theta2_desired+2)& (0+255),b
  1997   003C54  0E42               	movlw	66
  1998   003C56  6FD4               	movwf	(goto_servo@theta2_desired+3)& (0+255),b
  1999   003C58  EC48  F027         	call	_goto_servo	;wreg free
  2000                           
  2001                           ;main.c: 163:     goto_servo(73.0,90.0,130.0);
  2002   003C5C  0E00               	movlw	0
  2003   003C5E  0105               	movlb	5	; () banked
  2004   003C60  6FC9               	movwf	goto_servo@theta0_desired& (0+255),b
  2005   003C62  0E00               	movlw	0
  2006   003C64  6FCA               	movwf	(goto_servo@theta0_desired+1)& (0+255),b
  2007   003C66  0E92               	movlw	146
  2008   003C68  6FCB               	movwf	(goto_servo@theta0_desired+2)& (0+255),b
  2009   003C6A  0E42               	movlw	66
  2010   003C6C  6FCC               	movwf	(goto_servo@theta0_desired+3)& (0+255),b
  2011   003C6E  0E00               	movlw	0
  2012   003C70  6FCD               	movwf	goto_servo@theta1_desired& (0+255),b
  2013   003C72  0E00               	movlw	0
  2014   003C74  6FCE               	movwf	(goto_servo@theta1_desired+1)& (0+255),b
  2015   003C76  0EB4               	movlw	180
  2016   003C78  6FCF               	movwf	(goto_servo@theta1_desired+2)& (0+255),b
  2017   003C7A  0E42               	movlw	66
  2018   003C7C  6FD0               	movwf	(goto_servo@theta1_desired+3)& (0+255),b
  2019   003C7E  0E00               	movlw	0
  2020   003C80  6FD1               	movwf	goto_servo@theta2_desired& (0+255),b
  2021   003C82  0E00               	movlw	0
  2022   003C84  6FD2               	movwf	(goto_servo@theta2_desired+1)& (0+255),b
  2023   003C86  0E02               	movlw	2
  2024   003C88  6FD3               	movwf	(goto_servo@theta2_desired+2)& (0+255),b
  2025   003C8A  0E43               	movlw	67
  2026   003C8C  6FD4               	movwf	(goto_servo@theta2_desired+3)& (0+255),b
  2027   003C8E  EC48  F027         	call	_goto_servo	;wreg free
  2028                           
  2029                           ;main.c: 164:     goto_servo(73.0,135.0,130.0);
  2030   003C92  0E00               	movlw	0
  2031   003C94  0105               	movlb	5	; () banked
  2032   003C96  6FC9               	movwf	goto_servo@theta0_desired& (0+255),b
  2033   003C98  0E00               	movlw	0
  2034   003C9A  6FCA               	movwf	(goto_servo@theta0_desired+1)& (0+255),b
  2035   003C9C  0E92               	movlw	146
  2036   003C9E  6FCB               	movwf	(goto_servo@theta0_desired+2)& (0+255),b
  2037   003CA0  0E42               	movlw	66
  2038   003CA2  6FCC               	movwf	(goto_servo@theta0_desired+3)& (0+255),b
  2039   003CA4  0E00               	movlw	0
  2040   003CA6  6FCD               	movwf	goto_servo@theta1_desired& (0+255),b
  2041   003CA8  0E00               	movlw	0
  2042   003CAA  6FCE               	movwf	(goto_servo@theta1_desired+1)& (0+255),b
  2043   003CAC  0E07               	movlw	7
  2044   003CAE  6FCF               	movwf	(goto_servo@theta1_desired+2)& (0+255),b
  2045   003CB0  0E43               	movlw	67
  2046   003CB2  6FD0               	movwf	(goto_servo@theta1_desired+3)& (0+255),b
  2047   003CB4  0E00               	movlw	0
  2048   003CB6  6FD1               	movwf	goto_servo@theta2_desired& (0+255),b
  2049   003CB8  0E00               	movlw	0
  2050   003CBA  6FD2               	movwf	(goto_servo@theta2_desired+1)& (0+255),b
  2051   003CBC  0E02               	movlw	2
  2052   003CBE  6FD3               	movwf	(goto_servo@theta2_desired+2)& (0+255),b
  2053   003CC0  0E43               	movlw	67
  2054   003CC2  6FD4               	movwf	(goto_servo@theta2_desired+3)& (0+255),b
  2055   003CC4  EC48  F027         	call	_goto_servo	;wreg free
  2056   003CC8                     
  2057                           ;main.c: 165:     openHand();
  2058   003CC8  EC65  F028         	call	_openHand	;wreg free
  2059   003CCC  0012               	return		;funcret
  2060   003CCE                     __end_of_ejecutarModoAutomatico:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _openHand *****************
  2064 ;; Defined at:
  2065 ;;		line 173 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;		None
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;		None
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:        0 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; Hardware stack levels required when called: 8
  2086 ;; This function calls:
  2087 ;;		_set3
  2088 ;; This function is called by:
  2089 ;;		_ejecutarModoAutomatico
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text5
  2094   0050CA                     __ptext5:
  2095                           	callstack 0
  2096   0050CA                     _openHand:
  2097                           	callstack 116
  2098   0050CA                     
  2099                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 174:     if (!detener)
  2100   0050CA  0105               	movlb	5	; () banked
  2101   0050CC  51EE               	movf	_detener& (0+255),w,b	;volatile
  2102   0050CE  A4D8               	btfss	status,2,c
  2103   0050D0  EF6C  F028         	goto	u6951
  2104   0050D4  EF6E  F028         	goto	u6950
  2105   0050D8                     u6951:
  2106   0050D8  EF78  F028         	goto	l1158
  2107   0050DC                     u6950:
  2108   0050DC                     
  2109                           ; BSR set to: 5
  2110                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 175:     {;C:/Users/jhon-/MPLABXP
      +                          rojects/robot.X/ServoControl.c: 176:         set3(40.0);
  2111   0050DC  0E00               	movlw	0
  2112   0050DE  6F6C               	movwf	set3@theta3_desired& (0+255),b
  2113   0050E0  0E00               	movlw	0
  2114   0050E2  6F6D               	movwf	(set3@theta3_desired+1)& (0+255),b
  2115   0050E4  0E20               	movlw	32
  2116   0050E6  6F6E               	movwf	(set3@theta3_desired+2)& (0+255),b
  2117   0050E8  0E42               	movlw	66
  2118   0050EA  6F6F               	movwf	(set3@theta3_desired+3)& (0+255),b
  2119   0050EC  EC55  F01B         	call	_set3	;wreg free
  2120   0050F0                     l1158:
  2121   0050F0  0012               	return		;funcret
  2122   0050F2                     __end_of_openHand:
  2123                           	callstack 0
  2124                           
  2125 ;; *************** function _openGate *****************
  2126 ;; Defined at:
  2127 ;;		line 189 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;Total ram usage:        2 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; Hardware stack levels required when called: 7
  2148 ;; This function calls:
  2149 ;;		_setServoAngle
  2150 ;; This function is called by:
  2151 ;;		_ejecutarModoAutomatico
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text6
  2156   004E4E                     __ptext6:
  2157                           	callstack 0
  2158   004E4E                     _openGate:
  2159                           	callstack 117
  2160   004E4E                     
  2161                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 192:     if (!detener)
  2162   004E4E  0105               	movlb	5	; () banked
  2163   004E50  51EE               	movf	_detener& (0+255),w,b	;volatile
  2164   004E52  A4D8               	btfss	status,2,c
  2165   004E54  EF2E  F027         	goto	u5441
  2166   004E58  EF30  F027         	goto	u5440
  2167   004E5C                     u5441:
  2168   004E5C  EF47  F027         	goto	l1166
  2169   004E60                     u5440:
  2170   004E60                     
  2171                           ; BSR set to: 5
  2172                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 193:     {;C:/Users/jhon-/MPLABXP
      +                          rojects/robot.X/ServoControl.c: 194:           setServoAngle(4, 0.0);
  2173   004E60  0E00               	movlw	0
  2174   004E62  6E47               	movwf	setServoAngle@angulo^(0+1280),c
  2175   004E64  0E00               	movlw	0
  2176   004E66  6E48               	movwf	(setServoAngle@angulo+1)^(0+1280),c
  2177   004E68  0E00               	movlw	0
  2178   004E6A  6E49               	movwf	(setServoAngle@angulo+2)^(0+1280),c
  2179   004E6C  0E00               	movlw	0
  2180   004E6E  6E4A               	movwf	(setServoAngle@angulo+3)^(0+1280),c
  2181   004E70  0E04               	movlw	4
  2182   004E72  EC16  F020         	call	_setServoAngle
  2183   004E76                     
  2184                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 195:         _delay((unsigned lon
      +                          g)((500)*(64000000/4000.0)));
  2185   004E76  0E29               	movlw	41
  2186   004E78  6E4F               	movwf	(??_openGate+1)^(0+1280),c
  2187   004E7A  0E96               	movlw	150
  2188   004E7C  6E4E               	movwf	??_openGate^(0+1280),c
  2189   004E7E  0E7F               	movlw	127
  2190   004E80                     u6997:
  2191   004E80  2EE8               	decfsz	wreg,f,c
  2192   004E82  D7FE               	bra	u6997
  2193   004E84  2E4E               	decfsz	??_openGate^(0+1280),f,c
  2194   004E86  D7FC               	bra	u6997
  2195   004E88  2E4F               	decfsz	(??_openGate+1)^(0+1280),f,c
  2196   004E8A  D7FA               	bra	u6997
  2197   004E8C  0000               	nop	
  2198   004E8E                     l1166:
  2199   004E8E  0012               	return		;funcret
  2200   004E90                     __end_of_openGate:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _goto_servo *****************
  2204 ;; Defined at:
  2205 ;;		line 165 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  theta0_desir    4  105[BANK5 ] float 
  2208 ;;  theta1_desir    4  109[BANK5 ] float 
  2209 ;;  theta2_desir    4  113[BANK5 ] float 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;		None
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2221 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;Total ram usage:       12 bytes
  2226 ;; Hardware stack levels used: 1
  2227 ;; Hardware stack levels required when called: 15
  2228 ;; This function calls:
  2229 ;;		_set0
  2230 ;;		_set1
  2231 ;;		_set2
  2232 ;; This function is called by:
  2233 ;;		_ejecutarModoAutomatico
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           	psect	text7
  2238   004E90                     __ptext7:
  2239                           	callstack 0
  2240   004E90                     _goto_servo:
  2241                           	callstack 109
  2242   004E90                     
  2243                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 166:     set0(theta0_desired);
  2244   004E90  C5C9  F5C3         	movff	goto_servo@theta0_desired,set0@theta0_desired
  2245   004E94  C5CA  F5C4         	movff	goto_servo@theta0_desired+1,set0@theta0_desired+1
  2246   004E98  C5CB  F5C5         	movff	goto_servo@theta0_desired+2,set0@theta0_desired+2
  2247   004E9C  C5CC  F5C6         	movff	goto_servo@theta0_desired+3,set0@theta0_desired+3
  2248   004EA0  EC29  F01A         	call	_set0	;wreg free
  2249                           
  2250                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 167:     set1(theta1_desired);
  2251   004EA4  C5CD  F5C3         	movff	goto_servo@theta1_desired,set1@theta1_desired
  2252   004EA8  C5CE  F5C4         	movff	goto_servo@theta1_desired+1,set1@theta1_desired+1
  2253   004EAC  C5CF  F5C5         	movff	goto_servo@theta1_desired+2,set1@theta1_desired+2
  2254   004EB0  C5D0  F5C6         	movff	goto_servo@theta1_desired+3,set1@theta1_desired+3
  2255   004EB4  ECFD  F018         	call	_set1	;wreg free
  2256                           
  2257                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 168:     set2(theta2_desired);
  2258   004EB8  C5D1  F5C3         	movff	goto_servo@theta2_desired,set2@theta2_desired
  2259   004EBC  C5D2  F5C4         	movff	goto_servo@theta2_desired+1,set2@theta2_desired+1
  2260   004EC0  C5D3  F5C5         	movff	goto_servo@theta2_desired+2,set2@theta2_desired+2
  2261   004EC4  C5D4  F5C6         	movff	goto_servo@theta2_desired+3,set2@theta2_desired+3
  2262   004EC8  ECD1  F017         	call	_set2	;wreg free
  2263   004ECC  0012               	return		;funcret
  2264   004ECE                     __end_of_goto_servo:
  2265                           	callstack 0
  2266                           
  2267 ;; *************** function _set2 *****************
  2268 ;; Defined at:
  2269 ;;		line 129 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;  theta2_desir    4   99[BANK5 ] float 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2283 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;Total ram usage:        6 bytes
  2288 ;; Hardware stack levels used: 1
  2289 ;; Hardware stack levels required when called: 14
  2290 ;; This function calls:
  2291 ;;		___fladd
  2292 ;;		___flge
  2293 ;;		___flsub
  2294 ;;		___fltol
  2295 ;;		___xxtofl
  2296 ;;		_abs
  2297 ;;		_printf
  2298 ;;		_setServoAngle
  2299 ;; This function is called by:
  2300 ;;		_goto_servo
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text8
  2305   002FA2                     __ptext8:
  2306                           	callstack 0
  2307   002FA2                     _set2:
  2308                           	callstack 109
  2309   002FA2                     
  2310                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 130:     if (theta2_desired < 0.0
      +                          ) {
  2311   002FA2  0105               	movlb	5	; () banked
  2312   002FA4  BFC6               	btfsc	(set2@theta2_desired+3)& (0+255),7,b
  2313   002FA6  EFD9  F017         	goto	u6830
  2314   002FAA  EFD7  F017         	goto	u6831
  2315   002FAE                     u6831:
  2316   002FAE  EFE3  F017         	goto	l6845
  2317   002FB2                     u6830:
  2318   002FB2                     
  2319                           ; BSR set to: 5
  2320                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 131:     theta2_desired = 0.0;
  2321   002FB2  0E00               	movlw	0
  2322   002FB4  6FC3               	movwf	set2@theta2_desired& (0+255),b
  2323   002FB6  0E00               	movlw	0
  2324   002FB8  6FC4               	movwf	(set2@theta2_desired+1)& (0+255),b
  2325   002FBA  0E00               	movlw	0
  2326   002FBC  6FC5               	movwf	(set2@theta2_desired+2)& (0+255),b
  2327   002FBE  0E00               	movlw	0
  2328   002FC0  6FC6               	movwf	(set2@theta2_desired+3)& (0+255),b
  2329                           
  2330                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 132:     } else if (theta2_desire
      +                          d > 180.0) {
  2331   002FC2  EFA9  F018         	goto	l6863
  2332   002FC6                     l6845:
  2333                           
  2334                           ; BSR set to: 5
  2335   002FC6  0E00               	movlw	0
  2336   002FC8  6F60               	movwf	___flge@ff1& (0+255),b
  2337   002FCA  0E00               	movlw	0
  2338   002FCC  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2339   002FCE  0E34               	movlw	52
  2340   002FD0  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2341   002FD2  0E43               	movlw	67
  2342   002FD4  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2343   002FD6  C5C3  F564         	movff	set2@theta2_desired,___flge@ff2
  2344   002FDA  C5C4  F565         	movff	set2@theta2_desired+1,___flge@ff2+1
  2345   002FDE  C5C5  F566         	movff	set2@theta2_desired+2,___flge@ff2+2
  2346   002FE2  C5C6  F567         	movff	set2@theta2_desired+3,___flge@ff2+3
  2347   002FE6  EC23  F021         	call	___flge	;wreg free
  2348   002FEA  0105               	movlb	5	; () banked
  2349   002FEC  B0D8               	btfsc	status,0,c
  2350   002FEE  EFFB  F017         	goto	u6841
  2351   002FF2  EFFD  F017         	goto	u6840
  2352   002FF6                     u6841:
  2353   002FF6  EFA9  F018         	goto	l6863
  2354   002FFA                     u6840:
  2355   002FFA                     
  2356                           ; BSR set to: 5
  2357                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 133:         theta2_desired = 180
      +                          .0;
  2358   002FFA  0E00               	movlw	0
  2359   002FFC  6FC3               	movwf	set2@theta2_desired& (0+255),b
  2360   002FFE  0E00               	movlw	0
  2361   003000  6FC4               	movwf	(set2@theta2_desired+1)& (0+255),b
  2362   003002  0E34               	movlw	52
  2363   003004  6FC5               	movwf	(set2@theta2_desired+2)& (0+255),b
  2364   003006  0E43               	movlw	67
  2365   003008  6FC6               	movwf	(set2@theta2_desired+3)& (0+255),b
  2366   00300A  EFA9  F018         	goto	l6863
  2367   00300E                     l6849:
  2368                           
  2369                           ; BSR set to: 5
  2370                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 136:         if (theta2 < theta2_
      +                          desired) theta2 += 1.0;
  2371   00300E  C5F3  F560         	movff	_theta2,___flge@ff1
  2372   003012  C5F4  F561         	movff	_theta2+1,___flge@ff1+1
  2373   003016  C5F5  F562         	movff	_theta2+2,___flge@ff1+2
  2374   00301A  C5F6  F563         	movff	_theta2+3,___flge@ff1+3
  2375   00301E  C5C3  F564         	movff	set2@theta2_desired,___flge@ff2
  2376   003022  C5C4  F565         	movff	set2@theta2_desired+1,___flge@ff2+1
  2377   003026  C5C5  F566         	movff	set2@theta2_desired+2,___flge@ff2+2
  2378   00302A  C5C6  F567         	movff	set2@theta2_desired+3,___flge@ff2+3
  2379   00302E  EC23  F021         	call	___flge	;wreg free
  2380   003032  0105               	movlb	5	; () banked
  2381   003034  B0D8               	btfsc	status,0,c
  2382   003036  EF1F  F018         	goto	u6851
  2383   00303A  EF21  F018         	goto	u6850
  2384   00303E                     u6851:
  2385   00303E  EF3D  F018         	goto	l6853
  2386   003042                     u6850:
  2387   003042                     
  2388                           ; BSR set to: 5
  2389   003042  C5F3  F503         	movff	_theta2,___fladd@b
  2390   003046  C5F4  F504         	movff	_theta2+1,___fladd@b+1
  2391   00304A  C5F5  F505         	movff	_theta2+2,___fladd@b+2
  2392   00304E  C5F6  F506         	movff	_theta2+3,___fladd@b+3
  2393   003052  0E00               	movlw	0
  2394   003054  6E07               	movwf	___fladd@a^(0+1280),c
  2395   003056  0E00               	movlw	0
  2396   003058  6E08               	movwf	(___fladd@a+1)^(0+1280),c
  2397   00305A  0E80               	movlw	128
  2398   00305C  6E09               	movwf	(___fladd@a+2)^(0+1280),c
  2399   00305E  0E3F               	movlw	63
  2400   003060  6E0A               	movwf	(___fladd@a+3)^(0+1280),c
  2401   003062  ECAC  F00F         	call	___fladd	;wreg free
  2402   003066  C503  F5F3         	movff	?___fladd,_theta2
  2403   00306A  C504  F5F4         	movff	?___fladd+1,_theta2+1
  2404   00306E  C505  F5F5         	movff	?___fladd+2,_theta2+2
  2405   003072  C506  F5F6         	movff	?___fladd+3,_theta2+3
  2406   003076  EF71  F018         	goto	l6857
  2407   00307A                     l6853:
  2408                           
  2409                           ; BSR set to: 5
  2410   00307A  C5C3  F560         	movff	set2@theta2_desired,___flge@ff1
  2411   00307E  C5C4  F561         	movff	set2@theta2_desired+1,___flge@ff1+1
  2412   003082  C5C5  F562         	movff	set2@theta2_desired+2,___flge@ff1+2
  2413   003086  C5C6  F563         	movff	set2@theta2_desired+3,___flge@ff1+3
  2414   00308A  C5F3  F564         	movff	_theta2,___flge@ff2
  2415   00308E  C5F4  F565         	movff	_theta2+1,___flge@ff2+1
  2416   003092  C5F5  F566         	movff	_theta2+2,___flge@ff2+2
  2417   003096  C5F6  F567         	movff	_theta2+3,___flge@ff2+3
  2418   00309A  EC23  F021         	call	___flge	;wreg free
  2419   00309E  0105               	movlb	5	; () banked
  2420   0030A0  B0D8               	btfsc	status,0,c
  2421   0030A2  EF55  F018         	goto	u6861
  2422   0030A6  EF57  F018         	goto	u6860
  2423   0030AA                     u6861:
  2424   0030AA  EF71  F018         	goto	l6857
  2425   0030AE                     u6860:
  2426   0030AE                     
  2427                           ; BSR set to: 5
  2428   0030AE  C5F3  F535         	movff	_theta2,___flsub@b
  2429   0030B2  C5F4  F536         	movff	_theta2+1,___flsub@b+1
  2430   0030B6  C5F5  F537         	movff	_theta2+2,___flsub@b+2
  2431   0030BA  C5F6  F538         	movff	_theta2+3,___flsub@b+3
  2432   0030BE  0E00               	movlw	0
  2433   0030C0  6E39               	movwf	___flsub@a^(0+1280),c
  2434   0030C2  0E00               	movlw	0
  2435   0030C4  6E3A               	movwf	(___flsub@a+1)^(0+1280),c
  2436   0030C6  0E80               	movlw	128
  2437   0030C8  6E3B               	movwf	(___flsub@a+2)^(0+1280),c
  2438   0030CA  0E3F               	movlw	63
  2439   0030CC  6E3C               	movwf	(___flsub@a+3)^(0+1280),c
  2440   0030CE  ECA0  F026         	call	___flsub	;wreg free
  2441   0030D2  C535  F5F3         	movff	?___flsub,_theta2
  2442   0030D6  C536  F5F4         	movff	?___flsub+1,_theta2+1
  2443   0030DA  C537  F5F5         	movff	?___flsub+2,_theta2+2
  2444   0030DE  C538  F5F6         	movff	?___flsub+3,_theta2+3
  2445   0030E2                     l6857:
  2446                           
  2447                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 138:         setServoAngle(2, the
      +                          ta2);
  2448   0030E2  C5F3  F547         	movff	_theta2,setServoAngle@angulo
  2449   0030E6  C5F4  F548         	movff	_theta2+1,setServoAngle@angulo+1
  2450   0030EA  C5F5  F549         	movff	_theta2+2,setServoAngle@angulo+2
  2451   0030EE  C5F6  F54A         	movff	_theta2+3,setServoAngle@angulo+3
  2452   0030F2  0E02               	movlw	2
  2453   0030F4  EC16  F020         	call	_setServoAngle
  2454   0030F8                     
  2455                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 139:         printf("%c:%.1f,%.1f
      +                          ,%.1f\n", modo_funcionamiento, theta0, theta1, theta2);
  2456   0030F8  0E3D               	movlw	low STR_3
  2457   0030FA  0105               	movlb	5	; () banked
  2458   0030FC  6FB2               	movwf	printf@fmt& (0+255),b
  2459   0030FE  C5EF  F5B3         	movff	_modo_funcionamiento,?_printf+1
  2460   003102  6BB4               	clrf	(?_printf+2)& (0+255),b
  2461   003104  C5FB  F5B5         	movff	_theta0,?_printf+3
  2462   003108  C5FC  F5B6         	movff	_theta0+1,?_printf+4
  2463   00310C  C5FD  F5B7         	movff	_theta0+2,?_printf+5
  2464   003110  C5FE  F5B8         	movff	_theta0+3,?_printf+6
  2465   003114  C5F7  F5B9         	movff	_theta1,?_printf+7
  2466   003118  C5F8  F5BA         	movff	_theta1+1,?_printf+8
  2467   00311C  C5F9  F5BB         	movff	_theta1+2,?_printf+9
  2468   003120  C5FA  F5BC         	movff	_theta1+3,?_printf+10
  2469   003124  C5F3  F5BD         	movff	_theta2,?_printf+11
  2470   003128  C5F4  F5BE         	movff	_theta2+1,?_printf+12
  2471   00312C  C5F5  F5BF         	movff	_theta2+2,?_printf+13
  2472   003130  C5F6  F5C0         	movff	_theta2+3,?_printf+14
  2473   003134  ECB3  F028         	call	_printf	;wreg free
  2474   003138                     
  2475                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 144:         _delay((unsigned lon
      +                          g)((20)*(64000000/4000.0)));
  2476   003138  0E02               	movlw	2
  2477   00313A  0105               	movlb	5	; () banked
  2478   00313C  6FC8               	movwf	(??_set2+1)& (0+255),b
  2479   00313E  0EA0               	movlw	160
  2480   003140  6FC7               	movwf	??_set2& (0+255),b
  2481   003142  0E92               	movlw	146
  2482   003144                     u7007:
  2483   003144  2EE8               	decfsz	wreg,f,c
  2484   003146  D7FE               	bra	u7007
  2485   003148  2FC7               	decfsz	??_set2& (0+255),f,b
  2486   00314A  D7FC               	bra	u7007
  2487   00314C  2FC8               	decfsz	(??_set2+1)& (0+255),f,b
  2488   00314E  D7FA               	bra	u7007
  2489   003150  0000               	nop	
  2490   003152                     l6863:
  2491                           
  2492                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 135:     while (abs(theta2 - thet
      +                          a2_desired) > 0.1 && !detener) {
  2493   003152  0ECD               	movlw	205
  2494   003154  0105               	movlb	5	; () banked
  2495   003156  6F60               	movwf	___flge@ff1& (0+255),b
  2496   003158  0ECC               	movlw	204
  2497   00315A  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2498   00315C  0ECC               	movlw	204
  2499   00315E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2500   003160  0E3D               	movlw	61
  2501   003162  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2502   003164  C5C3  F539         	movff	set2@theta2_desired,___flsub@a
  2503   003168  C5C4  F53A         	movff	set2@theta2_desired+1,___flsub@a+1
  2504   00316C  C5C5  F53B         	movff	set2@theta2_desired+2,___flsub@a+2
  2505   003170  C5C6  F53C         	movff	set2@theta2_desired+3,___flsub@a+3
  2506   003174  C5F3  F535         	movff	_theta2,___flsub@b
  2507   003178  C5F4  F536         	movff	_theta2+1,___flsub@b+1
  2508   00317C  C5F5  F537         	movff	_theta2+2,___flsub@b+2
  2509   003180  C5F6  F538         	movff	_theta2+3,___flsub@b+3
  2510   003184  ECA0  F026         	call	___flsub	;wreg free
  2511   003188  C535  F53D         	movff	?___flsub,___fltol@f1
  2512   00318C  C536  F53E         	movff	?___flsub+1,___fltol@f1+1
  2513   003190  C537  F53F         	movff	?___flsub+2,___fltol@f1+2
  2514   003194  C538  F540         	movff	?___flsub+3,___fltol@f1+3
  2515   003198  ECA6  F021         	call	___fltol	;wreg free
  2516   00319C  C53D  F547         	movff	?___fltol,abs@a
  2517   0031A0  C53E  F548         	movff	?___fltol+1,abs@a+1
  2518   0031A4  ECD8  F027         	call	_abs	;wreg free
  2519   0031A8  C547  F54B         	movff	?_abs,___xxtofl@val
  2520   0031AC  C548  F54C         	movff	?_abs+1,___xxtofl@val+1
  2521   0031B0  0E00               	movlw	0
  2522   0031B2  BE4C               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
  2523   0031B4  0EFF               	movlw	-1
  2524   0031B6  6E4D               	movwf	(___xxtofl@val+2)^(0+1280),c
  2525   0031B8  6E4E               	movwf	(___xxtofl@val+3)^(0+1280),c
  2526   0031BA  0E01               	movlw	1
  2527   0031BC  EC67  F01E         	call	___xxtofl
  2528   0031C0  C54B  F564         	movff	?___xxtofl,___flge@ff2
  2529   0031C4  C54C  F565         	movff	?___xxtofl+1,___flge@ff2+1
  2530   0031C8  C54D  F566         	movff	?___xxtofl+2,___flge@ff2+2
  2531   0031CC  C54E  F567         	movff	?___xxtofl+3,___flge@ff2+3
  2532   0031D0  EC23  F021         	call	___flge	;wreg free
  2533   0031D4  0105               	movlb	5	; () banked
  2534   0031D6  B0D8               	btfsc	status,0,c
  2535   0031D8  EFF0  F018         	goto	u6871
  2536   0031DC  EFF2  F018         	goto	u6870
  2537   0031E0                     u6871:
  2538   0031E0  EFFA  F018         	goto	l6867
  2539   0031E4                     u6870:
  2540   0031E4                     
  2541                           ; BSR set to: 5
  2542   0031E4  51EE               	movf	_detener& (0+255),w,b	;volatile
  2543   0031E6  B4D8               	btfsc	status,2,c
  2544   0031E8  EFF8  F018         	goto	u6881
  2545   0031EC  EFFA  F018         	goto	u6880
  2546   0031F0                     u6881:
  2547   0031F0  EF07  F018         	goto	l6849
  2548   0031F4                     u6880:
  2549   0031F4                     l6867:
  2550                           
  2551                           ; BSR set to: 5
  2552                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 146:     detener = 0;
  2553   0031F4  0E00               	movlw	0
  2554   0031F6  6FEE               	movwf	_detener& (0+255),b	;volatile
  2555   0031F8                     
  2556                           ; BSR set to: 5
  2557   0031F8  0012               	return		;funcret
  2558   0031FA                     __end_of_set2:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _set1 *****************
  2562 ;; Defined at:
  2563 ;;		line 106 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  theta1_desir    4   99[BANK5 ] float 
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2577 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;Total ram usage:        6 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 14
  2584 ;; This function calls:
  2585 ;;		___fladd
  2586 ;;		___flge
  2587 ;;		___flsub
  2588 ;;		___fltol
  2589 ;;		___xxtofl
  2590 ;;		_abs
  2591 ;;		_printf
  2592 ;;		_setServoAngle
  2593 ;; This function is called by:
  2594 ;;		_goto_servo
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text9
  2599   0031FA                     __ptext9:
  2600                           	callstack 0
  2601   0031FA                     _set1:
  2602                           	callstack 109
  2603   0031FA                     
  2604                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 107:     if (theta1_desired < 0.0
      +                          ) {
  2605   0031FA  0105               	movlb	5	; () banked
  2606   0031FC  BFC6               	btfsc	(set1@theta1_desired+3)& (0+255),7,b
  2607   0031FE  EF05  F019         	goto	u6770
  2608   003202  EF03  F019         	goto	u6771
  2609   003206                     u6771:
  2610   003206  EF0F  F019         	goto	l6817
  2611   00320A                     u6770:
  2612   00320A                     
  2613                           ; BSR set to: 5
  2614                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 108:     theta1_desired = 0.0;
  2615   00320A  0E00               	movlw	0
  2616   00320C  6FC3               	movwf	set1@theta1_desired& (0+255),b
  2617   00320E  0E00               	movlw	0
  2618   003210  6FC4               	movwf	(set1@theta1_desired+1)& (0+255),b
  2619   003212  0E00               	movlw	0
  2620   003214  6FC5               	movwf	(set1@theta1_desired+2)& (0+255),b
  2621   003216  0E00               	movlw	0
  2622   003218  6FC6               	movwf	(set1@theta1_desired+3)& (0+255),b
  2623                           
  2624                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 109:     } else if (theta1_desire
      +                          d > 180.0) {
  2625   00321A  EFD5  F019         	goto	l6835
  2626   00321E                     l6817:
  2627                           
  2628                           ; BSR set to: 5
  2629   00321E  0E00               	movlw	0
  2630   003220  6F60               	movwf	___flge@ff1& (0+255),b
  2631   003222  0E00               	movlw	0
  2632   003224  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2633   003226  0E34               	movlw	52
  2634   003228  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2635   00322A  0E43               	movlw	67
  2636   00322C  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2637   00322E  C5C3  F564         	movff	set1@theta1_desired,___flge@ff2
  2638   003232  C5C4  F565         	movff	set1@theta1_desired+1,___flge@ff2+1
  2639   003236  C5C5  F566         	movff	set1@theta1_desired+2,___flge@ff2+2
  2640   00323A  C5C6  F567         	movff	set1@theta1_desired+3,___flge@ff2+3
  2641   00323E  EC23  F021         	call	___flge	;wreg free
  2642   003242  0105               	movlb	5	; () banked
  2643   003244  B0D8               	btfsc	status,0,c
  2644   003246  EF27  F019         	goto	u6781
  2645   00324A  EF29  F019         	goto	u6780
  2646   00324E                     u6781:
  2647   00324E  EFD5  F019         	goto	l6835
  2648   003252                     u6780:
  2649   003252                     
  2650                           ; BSR set to: 5
  2651                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 110:         theta1_desired = 180
      +                          .0;
  2652   003252  0E00               	movlw	0
  2653   003254  6FC3               	movwf	set1@theta1_desired& (0+255),b
  2654   003256  0E00               	movlw	0
  2655   003258  6FC4               	movwf	(set1@theta1_desired+1)& (0+255),b
  2656   00325A  0E34               	movlw	52
  2657   00325C  6FC5               	movwf	(set1@theta1_desired+2)& (0+255),b
  2658   00325E  0E43               	movlw	67
  2659   003260  6FC6               	movwf	(set1@theta1_desired+3)& (0+255),b
  2660   003262  EFD5  F019         	goto	l6835
  2661   003266                     l6821:
  2662                           
  2663                           ; BSR set to: 5
  2664                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 113:         if (theta1 < theta1_
      +                          desired) theta1 += 1.0;
  2665   003266  C5F7  F560         	movff	_theta1,___flge@ff1
  2666   00326A  C5F8  F561         	movff	_theta1+1,___flge@ff1+1
  2667   00326E  C5F9  F562         	movff	_theta1+2,___flge@ff1+2
  2668   003272  C5FA  F563         	movff	_theta1+3,___flge@ff1+3
  2669   003276  C5C3  F564         	movff	set1@theta1_desired,___flge@ff2
  2670   00327A  C5C4  F565         	movff	set1@theta1_desired+1,___flge@ff2+1
  2671   00327E  C5C5  F566         	movff	set1@theta1_desired+2,___flge@ff2+2
  2672   003282  C5C6  F567         	movff	set1@theta1_desired+3,___flge@ff2+3
  2673   003286  EC23  F021         	call	___flge	;wreg free
  2674   00328A  0105               	movlb	5	; () banked
  2675   00328C  B0D8               	btfsc	status,0,c
  2676   00328E  EF4B  F019         	goto	u6791
  2677   003292  EF4D  F019         	goto	u6790
  2678   003296                     u6791:
  2679   003296  EF69  F019         	goto	l6825
  2680   00329A                     u6790:
  2681   00329A                     
  2682                           ; BSR set to: 5
  2683   00329A  C5F7  F503         	movff	_theta1,___fladd@b
  2684   00329E  C5F8  F504         	movff	_theta1+1,___fladd@b+1
  2685   0032A2  C5F9  F505         	movff	_theta1+2,___fladd@b+2
  2686   0032A6  C5FA  F506         	movff	_theta1+3,___fladd@b+3
  2687   0032AA  0E00               	movlw	0
  2688   0032AC  6E07               	movwf	___fladd@a^(0+1280),c
  2689   0032AE  0E00               	movlw	0
  2690   0032B0  6E08               	movwf	(___fladd@a+1)^(0+1280),c
  2691   0032B2  0E80               	movlw	128
  2692   0032B4  6E09               	movwf	(___fladd@a+2)^(0+1280),c
  2693   0032B6  0E3F               	movlw	63
  2694   0032B8  6E0A               	movwf	(___fladd@a+3)^(0+1280),c
  2695   0032BA  ECAC  F00F         	call	___fladd	;wreg free
  2696   0032BE  C503  F5F7         	movff	?___fladd,_theta1
  2697   0032C2  C504  F5F8         	movff	?___fladd+1,_theta1+1
  2698   0032C6  C505  F5F9         	movff	?___fladd+2,_theta1+2
  2699   0032CA  C506  F5FA         	movff	?___fladd+3,_theta1+3
  2700   0032CE  EF9D  F019         	goto	l6829
  2701   0032D2                     l6825:
  2702                           
  2703                           ; BSR set to: 5
  2704   0032D2  C5C3  F560         	movff	set1@theta1_desired,___flge@ff1
  2705   0032D6  C5C4  F561         	movff	set1@theta1_desired+1,___flge@ff1+1
  2706   0032DA  C5C5  F562         	movff	set1@theta1_desired+2,___flge@ff1+2
  2707   0032DE  C5C6  F563         	movff	set1@theta1_desired+3,___flge@ff1+3
  2708   0032E2  C5F7  F564         	movff	_theta1,___flge@ff2
  2709   0032E6  C5F8  F565         	movff	_theta1+1,___flge@ff2+1
  2710   0032EA  C5F9  F566         	movff	_theta1+2,___flge@ff2+2
  2711   0032EE  C5FA  F567         	movff	_theta1+3,___flge@ff2+3
  2712   0032F2  EC23  F021         	call	___flge	;wreg free
  2713   0032F6  0105               	movlb	5	; () banked
  2714   0032F8  B0D8               	btfsc	status,0,c
  2715   0032FA  EF81  F019         	goto	u6801
  2716   0032FE  EF83  F019         	goto	u6800
  2717   003302                     u6801:
  2718   003302  EF9D  F019         	goto	l6829
  2719   003306                     u6800:
  2720   003306                     
  2721                           ; BSR set to: 5
  2722   003306  C5F7  F535         	movff	_theta1,___flsub@b
  2723   00330A  C5F8  F536         	movff	_theta1+1,___flsub@b+1
  2724   00330E  C5F9  F537         	movff	_theta1+2,___flsub@b+2
  2725   003312  C5FA  F538         	movff	_theta1+3,___flsub@b+3
  2726   003316  0E00               	movlw	0
  2727   003318  6E39               	movwf	___flsub@a^(0+1280),c
  2728   00331A  0E00               	movlw	0
  2729   00331C  6E3A               	movwf	(___flsub@a+1)^(0+1280),c
  2730   00331E  0E80               	movlw	128
  2731   003320  6E3B               	movwf	(___flsub@a+2)^(0+1280),c
  2732   003322  0E3F               	movlw	63
  2733   003324  6E3C               	movwf	(___flsub@a+3)^(0+1280),c
  2734   003326  ECA0  F026         	call	___flsub	;wreg free
  2735   00332A  C535  F5F7         	movff	?___flsub,_theta1
  2736   00332E  C536  F5F8         	movff	?___flsub+1,_theta1+1
  2737   003332  C537  F5F9         	movff	?___flsub+2,_theta1+2
  2738   003336  C538  F5FA         	movff	?___flsub+3,_theta1+3
  2739   00333A                     l6829:
  2740                           
  2741                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 115:         setServoAngle(1, the
      +                          ta1);
  2742   00333A  C5F7  F547         	movff	_theta1,setServoAngle@angulo
  2743   00333E  C5F8  F548         	movff	_theta1+1,setServoAngle@angulo+1
  2744   003342  C5F9  F549         	movff	_theta1+2,setServoAngle@angulo+2
  2745   003346  C5FA  F54A         	movff	_theta1+3,setServoAngle@angulo+3
  2746   00334A  0E01               	movlw	1
  2747   00334C  EC16  F020         	call	_setServoAngle
  2748   003350                     
  2749                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 116:         printf("%c:%.1f,%.1f
      +                          ,%.1f\n", modo_funcionamiento, theta0, theta1, theta2);
  2750   003350  0E3D               	movlw	low STR_3
  2751   003352  0105               	movlb	5	; () banked
  2752   003354  6FB2               	movwf	printf@fmt& (0+255),b
  2753   003356  C5EF  F5B3         	movff	_modo_funcionamiento,?_printf+1
  2754   00335A  6BB4               	clrf	(?_printf+2)& (0+255),b
  2755   00335C  C5FB  F5B5         	movff	_theta0,?_printf+3
  2756   003360  C5FC  F5B6         	movff	_theta0+1,?_printf+4
  2757   003364  C5FD  F5B7         	movff	_theta0+2,?_printf+5
  2758   003368  C5FE  F5B8         	movff	_theta0+3,?_printf+6
  2759   00336C  C5F7  F5B9         	movff	_theta1,?_printf+7
  2760   003370  C5F8  F5BA         	movff	_theta1+1,?_printf+8
  2761   003374  C5F9  F5BB         	movff	_theta1+2,?_printf+9
  2762   003378  C5FA  F5BC         	movff	_theta1+3,?_printf+10
  2763   00337C  C5F3  F5BD         	movff	_theta2,?_printf+11
  2764   003380  C5F4  F5BE         	movff	_theta2+1,?_printf+12
  2765   003384  C5F5  F5BF         	movff	_theta2+2,?_printf+13
  2766   003388  C5F6  F5C0         	movff	_theta2+3,?_printf+14
  2767   00338C  ECB3  F028         	call	_printf	;wreg free
  2768   003390                     
  2769                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 121:         _delay((unsigned lon
      +                          g)((20)*(64000000/4000.0)));
  2770   003390  0E02               	movlw	2
  2771   003392  0105               	movlb	5	; () banked
  2772   003394  6FC8               	movwf	(??_set1+1)& (0+255),b
  2773   003396  0EA0               	movlw	160
  2774   003398  6FC7               	movwf	??_set1& (0+255),b
  2775   00339A  0E92               	movlw	146
  2776   00339C                     u7017:
  2777   00339C  2EE8               	decfsz	wreg,f,c
  2778   00339E  D7FE               	bra	u7017
  2779   0033A0  2FC7               	decfsz	??_set1& (0+255),f,b
  2780   0033A2  D7FC               	bra	u7017
  2781   0033A4  2FC8               	decfsz	(??_set1+1)& (0+255),f,b
  2782   0033A6  D7FA               	bra	u7017
  2783   0033A8  0000               	nop	
  2784   0033AA                     l6835:
  2785                           
  2786                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 112:     while (abs(theta1 - thet
      +                          a1_desired) > 0.1 && !detener) {
  2787   0033AA  0ECD               	movlw	205
  2788   0033AC  0105               	movlb	5	; () banked
  2789   0033AE  6F60               	movwf	___flge@ff1& (0+255),b
  2790   0033B0  0ECC               	movlw	204
  2791   0033B2  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2792   0033B4  0ECC               	movlw	204
  2793   0033B6  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2794   0033B8  0E3D               	movlw	61
  2795   0033BA  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2796   0033BC  C5C3  F539         	movff	set1@theta1_desired,___flsub@a
  2797   0033C0  C5C4  F53A         	movff	set1@theta1_desired+1,___flsub@a+1
  2798   0033C4  C5C5  F53B         	movff	set1@theta1_desired+2,___flsub@a+2
  2799   0033C8  C5C6  F53C         	movff	set1@theta1_desired+3,___flsub@a+3
  2800   0033CC  C5F7  F535         	movff	_theta1,___flsub@b
  2801   0033D0  C5F8  F536         	movff	_theta1+1,___flsub@b+1
  2802   0033D4  C5F9  F537         	movff	_theta1+2,___flsub@b+2
  2803   0033D8  C5FA  F538         	movff	_theta1+3,___flsub@b+3
  2804   0033DC  ECA0  F026         	call	___flsub	;wreg free
  2805   0033E0  C535  F53D         	movff	?___flsub,___fltol@f1
  2806   0033E4  C536  F53E         	movff	?___flsub+1,___fltol@f1+1
  2807   0033E8  C537  F53F         	movff	?___flsub+2,___fltol@f1+2
  2808   0033EC  C538  F540         	movff	?___flsub+3,___fltol@f1+3
  2809   0033F0  ECA6  F021         	call	___fltol	;wreg free
  2810   0033F4  C53D  F547         	movff	?___fltol,abs@a
  2811   0033F8  C53E  F548         	movff	?___fltol+1,abs@a+1
  2812   0033FC  ECD8  F027         	call	_abs	;wreg free
  2813   003400  C547  F54B         	movff	?_abs,___xxtofl@val
  2814   003404  C548  F54C         	movff	?_abs+1,___xxtofl@val+1
  2815   003408  0E00               	movlw	0
  2816   00340A  BE4C               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
  2817   00340C  0EFF               	movlw	-1
  2818   00340E  6E4D               	movwf	(___xxtofl@val+2)^(0+1280),c
  2819   003410  6E4E               	movwf	(___xxtofl@val+3)^(0+1280),c
  2820   003412  0E01               	movlw	1
  2821   003414  EC67  F01E         	call	___xxtofl
  2822   003418  C54B  F564         	movff	?___xxtofl,___flge@ff2
  2823   00341C  C54C  F565         	movff	?___xxtofl+1,___flge@ff2+1
  2824   003420  C54D  F566         	movff	?___xxtofl+2,___flge@ff2+2
  2825   003424  C54E  F567         	movff	?___xxtofl+3,___flge@ff2+3
  2826   003428  EC23  F021         	call	___flge	;wreg free
  2827   00342C  0105               	movlb	5	; () banked
  2828   00342E  B0D8               	btfsc	status,0,c
  2829   003430  EF1C  F01A         	goto	u6811
  2830   003434  EF1E  F01A         	goto	u6810
  2831   003438                     u6811:
  2832   003438  EF26  F01A         	goto	l6839
  2833   00343C                     u6810:
  2834   00343C                     
  2835                           ; BSR set to: 5
  2836   00343C  51EE               	movf	_detener& (0+255),w,b	;volatile
  2837   00343E  B4D8               	btfsc	status,2,c
  2838   003440  EF24  F01A         	goto	u6821
  2839   003444  EF26  F01A         	goto	u6820
  2840   003448                     u6821:
  2841   003448  EF33  F019         	goto	l6821
  2842   00344C                     u6820:
  2843   00344C                     l6839:
  2844                           
  2845                           ; BSR set to: 5
  2846                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 123:     detener = 0;
  2847   00344C  0E00               	movlw	0
  2848   00344E  6FEE               	movwf	_detener& (0+255),b	;volatile
  2849   003450                     
  2850                           ; BSR set to: 5
  2851   003450  0012               	return		;funcret
  2852   003452                     __end_of_set1:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _set0 *****************
  2856 ;; Defined at:
  2857 ;;		line 85 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  theta0_desir    4   99[BANK5 ] float 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;		None
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  1    wreg      void 
  2864 ;; Registers used:
  2865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;Total ram usage:        6 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 14
  2878 ;; This function calls:
  2879 ;;		___fladd
  2880 ;;		___flge
  2881 ;;		___flsub
  2882 ;;		___fltol
  2883 ;;		___xxtofl
  2884 ;;		_abs
  2885 ;;		_printf
  2886 ;;		_setServoAngle
  2887 ;; This function is called by:
  2888 ;;		_goto_servo
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text10
  2893   003452                     __ptext10:
  2894                           	callstack 0
  2895   003452                     _set0:
  2896                           	callstack 109
  2897   003452                     
  2898                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 86:     if (theta0_desired < 0.0)
      +                           {
  2899   003452  0105               	movlb	5	; () banked
  2900   003454  BFC6               	btfsc	(set0@theta0_desired+3)& (0+255),7,b
  2901   003456  EF31  F01A         	goto	u6710
  2902   00345A  EF2F  F01A         	goto	u6711
  2903   00345E                     u6711:
  2904   00345E  EF3B  F01A         	goto	l6789
  2905   003462                     u6710:
  2906   003462                     
  2907                           ; BSR set to: 5
  2908                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 87:     theta0_desired = 0.0;
  2909   003462  0E00               	movlw	0
  2910   003464  6FC3               	movwf	set0@theta0_desired& (0+255),b
  2911   003466  0E00               	movlw	0
  2912   003468  6FC4               	movwf	(set0@theta0_desired+1)& (0+255),b
  2913   00346A  0E00               	movlw	0
  2914   00346C  6FC5               	movwf	(set0@theta0_desired+2)& (0+255),b
  2915   00346E  0E00               	movlw	0
  2916   003470  6FC6               	movwf	(set0@theta0_desired+3)& (0+255),b
  2917                           
  2918                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 88:     } else if (theta0_desired
      +                           > 180.0) {
  2919   003472  EF01  F01B         	goto	l6807
  2920   003476                     l6789:
  2921                           
  2922                           ; BSR set to: 5
  2923   003476  0E00               	movlw	0
  2924   003478  6F60               	movwf	___flge@ff1& (0+255),b
  2925   00347A  0E00               	movlw	0
  2926   00347C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  2927   00347E  0E34               	movlw	52
  2928   003480  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  2929   003482  0E43               	movlw	67
  2930   003484  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  2931   003486  C5C3  F564         	movff	set0@theta0_desired,___flge@ff2
  2932   00348A  C5C4  F565         	movff	set0@theta0_desired+1,___flge@ff2+1
  2933   00348E  C5C5  F566         	movff	set0@theta0_desired+2,___flge@ff2+2
  2934   003492  C5C6  F567         	movff	set0@theta0_desired+3,___flge@ff2+3
  2935   003496  EC23  F021         	call	___flge	;wreg free
  2936   00349A  0105               	movlb	5	; () banked
  2937   00349C  B0D8               	btfsc	status,0,c
  2938   00349E  EF53  F01A         	goto	u6721
  2939   0034A2  EF55  F01A         	goto	u6720
  2940   0034A6                     u6721:
  2941   0034A6  EF01  F01B         	goto	l6807
  2942   0034AA                     u6720:
  2943   0034AA                     
  2944                           ; BSR set to: 5
  2945                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 89:         theta0_desired = 180.
      +                          0;
  2946   0034AA  0E00               	movlw	0
  2947   0034AC  6FC3               	movwf	set0@theta0_desired& (0+255),b
  2948   0034AE  0E00               	movlw	0
  2949   0034B0  6FC4               	movwf	(set0@theta0_desired+1)& (0+255),b
  2950   0034B2  0E34               	movlw	52
  2951   0034B4  6FC5               	movwf	(set0@theta0_desired+2)& (0+255),b
  2952   0034B6  0E43               	movlw	67
  2953   0034B8  6FC6               	movwf	(set0@theta0_desired+3)& (0+255),b
  2954   0034BA  EF01  F01B         	goto	l6807
  2955   0034BE                     l6793:
  2956                           
  2957                           ; BSR set to: 5
  2958                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 92:         if (theta0 < theta0_d
      +                          esired) theta0 += 1.0;
  2959   0034BE  C5FB  F560         	movff	_theta0,___flge@ff1
  2960   0034C2  C5FC  F561         	movff	_theta0+1,___flge@ff1+1
  2961   0034C6  C5FD  F562         	movff	_theta0+2,___flge@ff1+2
  2962   0034CA  C5FE  F563         	movff	_theta0+3,___flge@ff1+3
  2963   0034CE  C5C3  F564         	movff	set0@theta0_desired,___flge@ff2
  2964   0034D2  C5C4  F565         	movff	set0@theta0_desired+1,___flge@ff2+1
  2965   0034D6  C5C5  F566         	movff	set0@theta0_desired+2,___flge@ff2+2
  2966   0034DA  C5C6  F567         	movff	set0@theta0_desired+3,___flge@ff2+3
  2967   0034DE  EC23  F021         	call	___flge	;wreg free
  2968   0034E2  0105               	movlb	5	; () banked
  2969   0034E4  B0D8               	btfsc	status,0,c
  2970   0034E6  EF77  F01A         	goto	u6731
  2971   0034EA  EF79  F01A         	goto	u6730
  2972   0034EE                     u6731:
  2973   0034EE  EF95  F01A         	goto	l6797
  2974   0034F2                     u6730:
  2975   0034F2                     
  2976                           ; BSR set to: 5
  2977   0034F2  C5FB  F503         	movff	_theta0,___fladd@b
  2978   0034F6  C5FC  F504         	movff	_theta0+1,___fladd@b+1
  2979   0034FA  C5FD  F505         	movff	_theta0+2,___fladd@b+2
  2980   0034FE  C5FE  F506         	movff	_theta0+3,___fladd@b+3
  2981   003502  0E00               	movlw	0
  2982   003504  6E07               	movwf	___fladd@a^(0+1280),c
  2983   003506  0E00               	movlw	0
  2984   003508  6E08               	movwf	(___fladd@a+1)^(0+1280),c
  2985   00350A  0E80               	movlw	128
  2986   00350C  6E09               	movwf	(___fladd@a+2)^(0+1280),c
  2987   00350E  0E3F               	movlw	63
  2988   003510  6E0A               	movwf	(___fladd@a+3)^(0+1280),c
  2989   003512  ECAC  F00F         	call	___fladd	;wreg free
  2990   003516  C503  F5FB         	movff	?___fladd,_theta0
  2991   00351A  C504  F5FC         	movff	?___fladd+1,_theta0+1
  2992   00351E  C505  F5FD         	movff	?___fladd+2,_theta0+2
  2993   003522  C506  F5FE         	movff	?___fladd+3,_theta0+3
  2994   003526  EFC9  F01A         	goto	l6801
  2995   00352A                     l6797:
  2996                           
  2997                           ; BSR set to: 5
  2998   00352A  C5C3  F560         	movff	set0@theta0_desired,___flge@ff1
  2999   00352E  C5C4  F561         	movff	set0@theta0_desired+1,___flge@ff1+1
  3000   003532  C5C5  F562         	movff	set0@theta0_desired+2,___flge@ff1+2
  3001   003536  C5C6  F563         	movff	set0@theta0_desired+3,___flge@ff1+3
  3002   00353A  C5FB  F564         	movff	_theta0,___flge@ff2
  3003   00353E  C5FC  F565         	movff	_theta0+1,___flge@ff2+1
  3004   003542  C5FD  F566         	movff	_theta0+2,___flge@ff2+2
  3005   003546  C5FE  F567         	movff	_theta0+3,___flge@ff2+3
  3006   00354A  EC23  F021         	call	___flge	;wreg free
  3007   00354E  0105               	movlb	5	; () banked
  3008   003550  B0D8               	btfsc	status,0,c
  3009   003552  EFAD  F01A         	goto	u6741
  3010   003556  EFAF  F01A         	goto	u6740
  3011   00355A                     u6741:
  3012   00355A  EFC9  F01A         	goto	l6801
  3013   00355E                     u6740:
  3014   00355E                     
  3015                           ; BSR set to: 5
  3016   00355E  C5FB  F535         	movff	_theta0,___flsub@b
  3017   003562  C5FC  F536         	movff	_theta0+1,___flsub@b+1
  3018   003566  C5FD  F537         	movff	_theta0+2,___flsub@b+2
  3019   00356A  C5FE  F538         	movff	_theta0+3,___flsub@b+3
  3020   00356E  0E00               	movlw	0
  3021   003570  6E39               	movwf	___flsub@a^(0+1280),c
  3022   003572  0E00               	movlw	0
  3023   003574  6E3A               	movwf	(___flsub@a+1)^(0+1280),c
  3024   003576  0E80               	movlw	128
  3025   003578  6E3B               	movwf	(___flsub@a+2)^(0+1280),c
  3026   00357A  0E3F               	movlw	63
  3027   00357C  6E3C               	movwf	(___flsub@a+3)^(0+1280),c
  3028   00357E  ECA0  F026         	call	___flsub	;wreg free
  3029   003582  C535  F5FB         	movff	?___flsub,_theta0
  3030   003586  C536  F5FC         	movff	?___flsub+1,_theta0+1
  3031   00358A  C537  F5FD         	movff	?___flsub+2,_theta0+2
  3032   00358E  C538  F5FE         	movff	?___flsub+3,_theta0+3
  3033   003592                     l6801:
  3034                           
  3035                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 94:         setServoAngle(0, thet
      +                          a0);
  3036   003592  C5FB  F547         	movff	_theta0,setServoAngle@angulo
  3037   003596  C5FC  F548         	movff	_theta0+1,setServoAngle@angulo+1
  3038   00359A  C5FD  F549         	movff	_theta0+2,setServoAngle@angulo+2
  3039   00359E  C5FE  F54A         	movff	_theta0+3,setServoAngle@angulo+3
  3040   0035A2  0E00               	movlw	0
  3041   0035A4  EC16  F020         	call	_setServoAngle
  3042   0035A8                     
  3043                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 95:         printf("%c:%.1f,%.1f,
      +                          %.1f\n", modo_funcionamiento, theta0, theta1, theta2);
  3044   0035A8  0E3D               	movlw	low STR_3
  3045   0035AA  0105               	movlb	5	; () banked
  3046   0035AC  6FB2               	movwf	printf@fmt& (0+255),b
  3047   0035AE  C5EF  F5B3         	movff	_modo_funcionamiento,?_printf+1
  3048   0035B2  6BB4               	clrf	(?_printf+2)& (0+255),b
  3049   0035B4  C5FB  F5B5         	movff	_theta0,?_printf+3
  3050   0035B8  C5FC  F5B6         	movff	_theta0+1,?_printf+4
  3051   0035BC  C5FD  F5B7         	movff	_theta0+2,?_printf+5
  3052   0035C0  C5FE  F5B8         	movff	_theta0+3,?_printf+6
  3053   0035C4  C5F7  F5B9         	movff	_theta1,?_printf+7
  3054   0035C8  C5F8  F5BA         	movff	_theta1+1,?_printf+8
  3055   0035CC  C5F9  F5BB         	movff	_theta1+2,?_printf+9
  3056   0035D0  C5FA  F5BC         	movff	_theta1+3,?_printf+10
  3057   0035D4  C5F3  F5BD         	movff	_theta2,?_printf+11
  3058   0035D8  C5F4  F5BE         	movff	_theta2+1,?_printf+12
  3059   0035DC  C5F5  F5BF         	movff	_theta2+2,?_printf+13
  3060   0035E0  C5F6  F5C0         	movff	_theta2+3,?_printf+14
  3061   0035E4  ECB3  F028         	call	_printf	;wreg free
  3062   0035E8                     
  3063                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 100:         _delay((unsigned lon
      +                          g)((20)*(64000000/4000.0)));
  3064   0035E8  0E02               	movlw	2
  3065   0035EA  0105               	movlb	5	; () banked
  3066   0035EC  6FC8               	movwf	(??_set0+1)& (0+255),b
  3067   0035EE  0EA0               	movlw	160
  3068   0035F0  6FC7               	movwf	??_set0& (0+255),b
  3069   0035F2  0E92               	movlw	146
  3070   0035F4                     u7027:
  3071   0035F4  2EE8               	decfsz	wreg,f,c
  3072   0035F6  D7FE               	bra	u7027
  3073   0035F8  2FC7               	decfsz	??_set0& (0+255),f,b
  3074   0035FA  D7FC               	bra	u7027
  3075   0035FC  2FC8               	decfsz	(??_set0+1)& (0+255),f,b
  3076   0035FE  D7FA               	bra	u7027
  3077   003600  0000               	nop	
  3078   003602                     l6807:
  3079                           
  3080                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 91:     while (abs(theta0 - theta
      +                          0_desired) > 0.1 && !detener) {
  3081   003602  0ECD               	movlw	205
  3082   003604  0105               	movlb	5	; () banked
  3083   003606  6F60               	movwf	___flge@ff1& (0+255),b
  3084   003608  0ECC               	movlw	204
  3085   00360A  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  3086   00360C  0ECC               	movlw	204
  3087   00360E  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  3088   003610  0E3D               	movlw	61
  3089   003612  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  3090   003614  C5C3  F539         	movff	set0@theta0_desired,___flsub@a
  3091   003618  C5C4  F53A         	movff	set0@theta0_desired+1,___flsub@a+1
  3092   00361C  C5C5  F53B         	movff	set0@theta0_desired+2,___flsub@a+2
  3093   003620  C5C6  F53C         	movff	set0@theta0_desired+3,___flsub@a+3
  3094   003624  C5FB  F535         	movff	_theta0,___flsub@b
  3095   003628  C5FC  F536         	movff	_theta0+1,___flsub@b+1
  3096   00362C  C5FD  F537         	movff	_theta0+2,___flsub@b+2
  3097   003630  C5FE  F538         	movff	_theta0+3,___flsub@b+3
  3098   003634  ECA0  F026         	call	___flsub	;wreg free
  3099   003638  C535  F53D         	movff	?___flsub,___fltol@f1
  3100   00363C  C536  F53E         	movff	?___flsub+1,___fltol@f1+1
  3101   003640  C537  F53F         	movff	?___flsub+2,___fltol@f1+2
  3102   003644  C538  F540         	movff	?___flsub+3,___fltol@f1+3
  3103   003648  ECA6  F021         	call	___fltol	;wreg free
  3104   00364C  C53D  F547         	movff	?___fltol,abs@a
  3105   003650  C53E  F548         	movff	?___fltol+1,abs@a+1
  3106   003654  ECD8  F027         	call	_abs	;wreg free
  3107   003658  C547  F54B         	movff	?_abs,___xxtofl@val
  3108   00365C  C548  F54C         	movff	?_abs+1,___xxtofl@val+1
  3109   003660  0E00               	movlw	0
  3110   003662  BE4C               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
  3111   003664  0EFF               	movlw	-1
  3112   003666  6E4D               	movwf	(___xxtofl@val+2)^(0+1280),c
  3113   003668  6E4E               	movwf	(___xxtofl@val+3)^(0+1280),c
  3114   00366A  0E01               	movlw	1
  3115   00366C  EC67  F01E         	call	___xxtofl
  3116   003670  C54B  F564         	movff	?___xxtofl,___flge@ff2
  3117   003674  C54C  F565         	movff	?___xxtofl+1,___flge@ff2+1
  3118   003678  C54D  F566         	movff	?___xxtofl+2,___flge@ff2+2
  3119   00367C  C54E  F567         	movff	?___xxtofl+3,___flge@ff2+3
  3120   003680  EC23  F021         	call	___flge	;wreg free
  3121   003684  0105               	movlb	5	; () banked
  3122   003686  B0D8               	btfsc	status,0,c
  3123   003688  EF48  F01B         	goto	u6751
  3124   00368C  EF4A  F01B         	goto	u6750
  3125   003690                     u6751:
  3126   003690  EF52  F01B         	goto	l6811
  3127   003694                     u6750:
  3128   003694                     
  3129                           ; BSR set to: 5
  3130   003694  51EE               	movf	_detener& (0+255),w,b	;volatile
  3131   003696  B4D8               	btfsc	status,2,c
  3132   003698  EF50  F01B         	goto	u6761
  3133   00369C  EF52  F01B         	goto	u6760
  3134   0036A0                     u6761:
  3135   0036A0  EF5F  F01A         	goto	l6793
  3136   0036A4                     u6760:
  3137   0036A4                     l6811:
  3138                           
  3139                           ; BSR set to: 5
  3140                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 102:     detener = 0;
  3141   0036A4  0E00               	movlw	0
  3142   0036A6  6FEE               	movwf	_detener& (0+255),b	;volatile
  3143   0036A8                     
  3144                           ; BSR set to: 5
  3145   0036A8  0012               	return		;funcret
  3146   0036AA                     __end_of_set0:
  3147                           	callstack 0
  3148                           
  3149 ;; *************** function _printf *****************
  3150 ;; Defined at:
  3151 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  fmt             1   82[BANK5 ] PTR const unsigned char 
  3154 ;;		 -> STR_7(19), STR_6(19), STR_5(19), STR_4(19), 
  3155 ;;		 -> STR_3(19), STR_2(6), STR_1(8), 
  3156 ;; Auto vars:     Size  Location     Type
  3157 ;;  ap              2   97[BANK5 ] PTR void [1]
  3158 ;;		 -> ?_printf(2), 
  3159 ;;  ret             2    0        int 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  2   82[BANK5 ] int 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3169 ;;      Params:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;Total ram usage:       17 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 13
  3176 ;; This function calls:
  3177 ;;		_vfprintf
  3178 ;; This function is called by:
  3179 ;;		_ejecutarModoManual
  3180 ;;		_ejecutarModoUART
  3181 ;;		_set0
  3182 ;;		_set1
  3183 ;;		_set2
  3184 ;;		_printList
  3185 ;; This function uses a non-reentrant model
  3186 ;;
  3187                           
  3188                           	psect	text11
  3189   005166                     __ptext11:
  3190                           	callstack 0
  3191   005166                     _printf:
  3192                           	callstack 111
  3193   005166  0EB3               	movlw	low (?_printf+1)
  3194   005168  0105               	movlb	5	; () banked
  3195   00516A  6FC1               	movwf	printf@ap& (0+255),b
  3196   00516C  0E05               	movlw	high (?_printf+1)
  3197   00516E  6FC2               	movwf	(printf@ap+1)& (0+255),b
  3198   005170                     
  3199                           ; BSR set to: 5
  3200   005170  0E00               	movlw	0
  3201   005172  6FAD               	movwf	vfprintf@fp& (0+255),b
  3202   005174  0E00               	movlw	0
  3203   005176  6FAE               	movwf	(vfprintf@fp+1)& (0+255),b
  3204   005178  C5B2  F5AF         	movff	printf@fmt,vfprintf@fmt
  3205   00517C  0EC1               	movlw	low printf@ap
  3206   00517E  6FB0               	movwf	vfprintf@ap& (0+255),b
  3207   005180  0E05               	movlw	high printf@ap
  3208   005182  6FB1               	movwf	(vfprintf@ap+1)& (0+255),b
  3209   005184  EC50  F026         	call	_vfprintf	;wreg free
  3210   005188  0012               	return		;funcret
  3211   00518A                     __end_of_printf:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _vfprintf *****************
  3215 ;; Defined at:
  3216 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  fp              2   77[BANK5 ] PTR struct _IO_FILE
  3219 ;;		 -> NULL(0), 
  3220 ;;  fmt             1   79[BANK5 ] PTR const unsigned char 
  3221 ;;		 -> STR_7(19), STR_6(19), STR_5(19), STR_4(19), 
  3222 ;;		 -> STR_3(19), STR_2(6), STR_1(8), 
  3223 ;;  ap              2   80[BANK5 ] PTR PTR void 
  3224 ;;		 -> printf@ap(2), 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;  cfmt            1   90[COMRAM] PTR unsigned char 
  3227 ;;		 -> STR_7(19), STR_6(19), STR_5(19), STR_4(19), 
  3228 ;;		 -> STR_3(19), STR_2(6), STR_1(8), 
  3229 ;; Return value:  Size  Location     Type
  3230 ;;                  2   77[BANK5 ] int 
  3231 ;; Registers used:
  3232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3233 ;; Tracked objects:
  3234 ;;		On entry : 0/0
  3235 ;;		On exit  : 0/0
  3236 ;;		Unchanged: 0/0
  3237 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3238 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;Total ram usage:        6 bytes
  3243 ;; Hardware stack levels used: 1
  3244 ;; Hardware stack levels required when called: 12
  3245 ;; This function calls:
  3246 ;;		_vfpfcnvrt
  3247 ;; This function is called by:
  3248 ;;		_printf
  3249 ;; This function uses a non-reentrant model
  3250 ;;
  3251                           
  3252                           	psect	text12
  3253   004CA0                     __ptext12:
  3254                           	callstack 0
  3255   004CA0                     _vfprintf:
  3256                           	callstack 111
  3257   004CA0                     
  3258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3259   004CA0  C5AF  F55B         	movff	vfprintf@fmt,vfprintf@cfmt
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3262   004CA4  EF63  F026         	goto	l6773
  3263   004CA8                     l6771:
  3264                           
  3265                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3266   004CA8  C5AD  F59F         	movff	vfprintf@fp,vfpfcnvrt@fp
  3267   004CAC  C5AE  F5A0         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3268   004CB0  0E5B               	movlw	low vfprintf@cfmt
  3269   004CB2  0105               	movlb	5	; () banked
  3270   004CB4  6FA1               	movwf	vfpfcnvrt@fmt& (0+255),b
  3271   004CB6  0E05               	movlw	high vfprintf@cfmt
  3272   004CB8  6FA2               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  3273   004CBA  C5B0  F5A3         	movff	vfprintf@ap,vfpfcnvrt@ap
  3274   004CBE  C5B1  F5A4         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3275   004CC2  EC21  F014         	call	_vfpfcnvrt	;wreg free
  3276   004CC6                     l6773:
  3277                           
  3278                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3279   004CC6  C55B  F4F6         	movff	vfprintf@cfmt,tblptrl
  3280   004CCA                     	if	1	;There is more than 1 active tblptr byte
  3281   004CCA  0E15               	movlw	high __smallconst
  3282   004CCC  6EF7               	movwf	tblptrh,c
  3283   004CCE                     	endif
  3284   004CCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3285   004CCE  6AF8               	clrf	tblptru,c
  3286   004CD0                     	endif
  3287   004CD0                     	if	0	;tblptru may be non-zero
  3288   004CD0                     	endif
  3289   004CD0  0008               	tblrd		*
  3290   004CD2  50F5               	movf	tablat,w,c
  3291   004CD4  0900               	iorlw	0
  3292   004CD6  A4D8               	btfss	status,2,c
  3293   004CD8  EF70  F026         	goto	u6701
  3294   004CDC  EF72  F026         	goto	u6700
  3295   004CE0                     u6701:
  3296   004CE0  EF54  F026         	goto	l6771
  3297   004CE4                     u6700:
  3298   004CE4                     
  3299                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3300   004CE4  0E00               	movlw	0
  3301   004CE6  0105               	movlb	5	; () banked
  3302   004CE8  6FAE               	movwf	(?_vfprintf+1)& (0+255),b
  3303   004CEA  0E00               	movlw	0
  3304   004CEC  6FAD               	movwf	?_vfprintf& (0+255),b
  3305   004CEE                     
  3306                           ; BSR set to: 5
  3307   004CEE  0012               	return		;funcret
  3308   004CF0                     __end_of_vfprintf:
  3309                           	callstack 0
  3310                           
  3311 ;; *************** function _vfpfcnvrt *****************
  3312 ;; Defined at:
  3313 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  fp              2   63[BANK5 ] PTR struct _IO_FILE
  3316 ;;		 -> NULL(0), 
  3317 ;;  fmt             2   65[BANK5 ] PTR PTR unsigned char 
  3318 ;;		 -> vfprintf@cfmt(1), 
  3319 ;;  ap              2   67[BANK5 ] PTR PTR void 
  3320 ;;		 -> printf@ap(2), 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  convarg         4   71[BANK5 ] struct .
  3323 ;;  cp              1   76[BANK5 ] PTR unsigned char 
  3324 ;;		 -> STR_7(19), STR_6(19), STR_5(19), STR_4(19), 
  3325 ;;		 -> STR_3(19), STR_2(6), STR_1(8), 
  3326 ;;  c               1   75[BANK5 ] unsigned char 
  3327 ;;  done            1    0        _Bool 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3337 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;Total ram usage:       14 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; Hardware stack levels required when called: 11
  3344 ;; This function calls:
  3345 ;;		_dtoa
  3346 ;;		_efgtoa
  3347 ;;		_fputc
  3348 ;;		_read_prec_or_width
  3349 ;; This function is called by:
  3350 ;;		_vfprintf
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text13
  3355   002842                     __ptext13:
  3356                           	callstack 0
  3357   002842                     _vfpfcnvrt:
  3358                           	callstack 111
  3359   002842                     
  3360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3361   002842  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3362   002846  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3363   00284A  C4DF F4F6          	movff	indf2,tblptrl
  3364   00284E                     	if	1	;There is more than 1 active tblptr byte
  3365   00284E  0E15               	movlw	high __smallconst
  3366   002850  6EF7               	movwf	tblptrh,c
  3367   002852                     	endif
  3368   002852                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3369   002852  6AF8               	clrf	tblptru,c
  3370   002854                     	endif
  3371   002854                     	if	0	;tblptru may be non-zero
  3372   002854                     	endif
  3373   002854  0008               	tblrd		*
  3374   002856  50F5               	movf	tablat,w,c
  3375   002858  0A25               	xorlw	37
  3376   00285A  A4D8               	btfss	status,2,c
  3377   00285C  EF32  F014         	goto	u6641
  3378   002860  EF34  F014         	goto	u6640
  3379   002864                     u6641:
  3380   002864  EFEE  F015         	goto	l6763
  3381   002868                     u6640:
  3382   002868                     
  3383                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3384   002868  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3385   00286C  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3386   002870  2ADF               	incf	indf2,f,c
  3387   002872                     
  3388                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3389   002872  0E00               	movlw	0
  3390   002874  0106               	movlb	6	; () banked
  3391   002876  6F09               	movwf	(_width+1)& (0+255),b
  3392   002878  0E00               	movlw	0
  3393   00287A  6F08               	movwf	_width& (0+255),b
  3394   00287C  C608  F5ED         	movff	_width,_flags
  3395   002880                     
  3396                           ; BSR set to: 6
  3397                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3398   002880  0105               	movlb	5	; () banked
  3399   002882  69E1               	setf	_prec& (0+255),b
  3400   002884  69E2               	setf	(_prec+1)& (0+255),b
  3401   002886                     
  3402                           ; BSR set to: 5
  3403                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3404   002886  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3405   00288A  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3406   00288E  C4DF F4F6          	movff	indf2,tblptrl
  3407   002892                     	if	1	;There is more than 1 active tblptr byte
  3408   002892  0E15               	movlw	high __smallconst
  3409   002894  6EF7               	movwf	tblptrh,c
  3410   002896                     	endif
  3411   002896                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3412   002896  6AF8               	clrf	tblptru,c
  3413   002898                     	endif
  3414   002898                     	if	0	;tblptru may be non-zero
  3415   002898                     	endif
  3416   002898  0008               	tblrd		*
  3417   00289A  50F5               	movf	tablat,w,c
  3418   00289C  0A2E               	xorlw	46
  3419   00289E  A4D8               	btfss	status,2,c
  3420   0028A0  EF54  F014         	goto	u6651
  3421   0028A4  EF56  F014         	goto	u6650
  3422   0028A8                     u6651:
  3423   0028A8  EF69  F014         	goto	l6683
  3424   0028AC                     u6650:
  3425   0028AC                     
  3426                           ; BSR set to: 5
  3427                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3428   0028AC  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3429   0028B0  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3430   0028B4  2ADF               	incf	indf2,f,c
  3431   0028B6                     
  3432                           ; BSR set to: 5
  3433                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3434   0028B6  C5A1  F509         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3435   0028BA  C5A2  F50A         	movff	vfpfcnvrt@fmt+1,read_prec_or_width@fmt+1
  3436   0028BE  C5A3  F50B         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3437   0028C2  C5A4  F50C         	movff	vfpfcnvrt@ap+1,read_prec_or_width@ap+1
  3438   0028C6  EC83  F023         	call	_read_prec_or_width	;wreg free
  3439   0028CA  C509  F5E1         	movff	?_read_prec_or_width,_prec
  3440   0028CE  C50A  F5E2         	movff	?_read_prec_or_width+1,_prec+1
  3441   0028D2                     l6683:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  3444   0028D2  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3445   0028D6  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3446   0028DA  C4DF F4F6          	movff	indf2,tblptrl
  3447   0028DE                     	if	1	;There is more than 1 active tblptr byte
  3448   0028DE  0E15               	movlw	high __smallconst
  3449   0028E0  6EF7               	movwf	tblptrh,c
  3450   0028E2                     	endif
  3451   0028E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3452   0028E2  6AF8               	clrf	tblptru,c
  3453   0028E4                     	endif
  3454   0028E4                     	if	0	;tblptru may be non-zero
  3455   0028E4                     	endif
  3456   0028E4  0008               	tblrd		*
  3457   0028E6  50F5               	movf	tablat,w,c
  3458   0028E8  0A63               	xorlw	99
  3459   0028EA  A4D8               	btfss	status,2,c
  3460   0028EC  EF7A  F014         	goto	u6661
  3461   0028F0  EF7C  F014         	goto	u6660
  3462   0028F4                     u6661:
  3463   0028F4  EF9F  F014         	goto	l6693
  3464   0028F8                     u6660:
  3465   0028F8                     
  3466                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  3467   0028F8  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3468   0028FC  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3469   002900  2ADF               	incf	indf2,f,c
  3470   002902                     
  3471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  3472   002902  C5A3  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  3473   002906  C5A4  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  3474   00290A  C4DF F5A5          	movff	indf2,??_vfpfcnvrt
  3475   00290E  0E02               	movlw	2
  3476   002910  26DE               	addwf	postinc2,f,c
  3477   002912  C4DF F5A6          	movff	indf2,??_vfpfcnvrt+1
  3478   002916  0E00               	movlw	0
  3479   002918  22DD               	addwfc	postdec2,f,c
  3480   00291A  C5A5  F4D9         	movff	??_vfpfcnvrt,fsr2l
  3481   00291E  C5A6  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  3482   002922  50DF               	movf	indf2,w,c
  3483   002924  0105               	movlb	5	; () banked
  3484   002926  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  3485   002928                     
  3486                           ; BSR set to: 5
  3487                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1277:    fputc(c,
      +                           fp);
  3488   002928  C5AB  F505         	movff	vfpfcnvrt@c,fputc@c
  3489   00292C  6A06               	clrf	(fputc@c+1)^(0+1280),c
  3490   00292E  C59F  F507         	movff	vfpfcnvrt@fp,fputc@fp
  3491   002932  C5A0  F508         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3492   002936  EC1E  F023         	call	_fputc	;wreg free
  3493   00293A  EF03  F016         	goto	l1975
  3494   00293E                     l6693:
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3497   00293E  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3498   002942  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3499   002946  50DF               	movf	indf2,w,c
  3500   002948  0105               	movlb	5	; () banked
  3501   00294A  6FAC               	movwf	vfpfcnvrt@cp& (0+255),b
  3502   00294C                     
  3503                           ; BSR set to: 5
  3504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  3505   00294C  C5AC  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3506   002950                     	if	1	;There is more than 1 active tblptr byte
  3507   002950  0E15               	movlw	high __smallconst
  3508   002952  6EF7               	movwf	tblptrh,c
  3509   002954                     	endif
  3510   002954                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3511   002954  6AF8               	clrf	tblptru,c
  3512   002956                     	endif
  3513   002956                     	if	0	;tblptru may be non-zero
  3514   002956                     	endif
  3515   002956  0008               	tblrd		*
  3516   002958  C4F5 F5AB          	movff	tablat,vfpfcnvrt@c
  3517                           
  3518                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  3519   00295C  EFBB  F014         	goto	l6705
  3520   002960                     l6697:
  3521                           
  3522                           ; BSR set to: 5
  3523                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  3524   002960  2BAC               	incf	vfpfcnvrt@cp& (0+255),f,b
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
  3527   002962  EFCA  F014         	goto	l6707
  3528   002966                     l6699:
  3529                           
  3530                           ; BSR set to: 5
  3531                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  3532   002966  0E69               	movlw	105
  3533   002968  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  3534                           
  3535                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
  3536   00296A  EFCA  F014         	goto	l6707
  3537   00296E                     l6701:
  3538                           
  3539                           ; BSR set to: 5
  3540                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  3541   00296E  0E00               	movlw	0
  3542   002970  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
  3545   002972  EFCA  F014         	goto	l6707
  3546   002976                     l6705:
  3547                           
  3548                           ; BSR set to: 5
  3549   002976  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  3550                           
  3551                           ; Switch size 1, requested type "simple"
  3552                           ; Number of cases is 3, Range of values is 100 to 108
  3553                           ; switch strategies available:
  3554                           ; Name         Instructions Cycles
  3555                           ; simple_byte           10     6 (average)
  3556                           ;	Chosen strategy is simple_byte
  3557   002978  0A64               	xorlw	100	; case 100
  3558   00297A  B4D8               	btfsc	status,2,c
  3559   00297C  EFB3  F014         	goto	l6699
  3560   002980  0A0D               	xorlw	13	; case 105
  3561   002982  B4D8               	btfsc	status,2,c
  3562   002984  EFB3  F014         	goto	l6699
  3563   002988  0A05               	xorlw	5	; case 108
  3564   00298A  B4D8               	btfsc	status,2,c
  3565   00298C  EFB0  F014         	goto	l6697
  3566   002990  EFB7  F014         	goto	l6701
  3567   002994                     l6707:
  3568                           
  3569                           ; BSR set to: 5
  3570                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3571   002994  C5AC  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3572   002998                     	if	1	;There is more than 1 active tblptr byte
  3573   002998  0E15               	movlw	high __smallconst
  3574   00299A  6EF7               	movwf	tblptrh,c
  3575   00299C                     	endif
  3576   00299C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3577   00299C  6AF8               	clrf	tblptru,c
  3578   00299E                     	endif
  3579   00299E                     	if	0	;tblptru may be non-zero
  3580   00299E                     	endif
  3581   00299E  0008               	tblrd		*
  3582   0029A0  50F5               	movf	tablat,w,c
  3583   0029A2  0A64               	xorlw	100
  3584   0029A4  B4D8               	btfsc	status,2,c
  3585   0029A6  EFD7  F014         	goto	u6671
  3586   0029AA  EFD9  F014         	goto	u6670
  3587   0029AE                     u6671:
  3588   0029AE  EF1F  F015         	goto	l6717
  3589   0029B2                     u6670:
  3590   0029B2                     
  3591                           ; BSR set to: 5
  3592   0029B2  C5AC  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3593   0029B6                     	if	1	;There is more than 1 active tblptr byte
  3594   0029B6  0E15               	movlw	high __smallconst
  3595   0029B8  6EF7               	movwf	tblptrh,c
  3596   0029BA                     	endif
  3597   0029BA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3598   0029BA  6AF8               	clrf	tblptru,c
  3599   0029BC                     	endif
  3600   0029BC                     	if	0	;tblptru may be non-zero
  3601   0029BC                     	endif
  3602   0029BC  0008               	tblrd		*
  3603   0029BE  50F5               	movf	tablat,w,c
  3604   0029C0  0A69               	xorlw	105
  3605   0029C2  A4D8               	btfss	status,2,c
  3606   0029C4  EFE6  F014         	goto	u6681
  3607   0029C8  EFE8  F014         	goto	u6680
  3608   0029CC                     u6681:
  3609   0029CC  EF40  F015         	goto	l6725
  3610   0029D0                     u6680:
  3611   0029D0  EF1F  F015         	goto	l6717
  3612   0029D4                     l6711:
  3613                           
  3614                           ; BSR set to: 5
  3615                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3616   0029D4  C5A3  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  3617   0029D8  C5A4  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  3618   0029DC  C4DF F5A5          	movff	indf2,??_vfpfcnvrt
  3619   0029E0  0E02               	movlw	2
  3620   0029E2  26DE               	addwf	postinc2,f,c
  3621   0029E4  C4DF F5A6          	movff	indf2,??_vfpfcnvrt+1
  3622   0029E8  0E00               	movlw	0
  3623   0029EA  22DD               	addwfc	postdec2,f,c
  3624   0029EC  C5A5  F4D9         	movff	??_vfpfcnvrt,fsr2l
  3625   0029F0  C5A6  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  3626   0029F4  C4DE F5A7          	movff	postinc2,vfpfcnvrt@convarg
  3627   0029F8  C4DD F5A8          	movff	postdec2,vfpfcnvrt@convarg+1
  3628   0029FC  0E00               	movlw	0
  3629   0029FE  BFA8               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  3630   002A00  0EFF               	movlw	-1
  3631   002A02  6FA9               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  3632   002A04  6FAA               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1366:      break;
  3635   002A06  EF2A  F015         	goto	l6719
  3636   002A0A                     l6713:
  3637                           
  3638                           ; BSR set to: 5
  3639                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  3640   002A0A  C5A3  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  3641   002A0E  C5A4  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  3642   002A12  C4DF F5A5          	movff	indf2,??_vfpfcnvrt
  3643   002A16  0E04               	movlw	4
  3644   002A18  26DE               	addwf	postinc2,f,c
  3645   002A1A  C4DF F5A6          	movff	indf2,??_vfpfcnvrt+1
  3646   002A1E  0E00               	movlw	0
  3647   002A20  22DD               	addwfc	postdec2,f,c
  3648   002A22  C5A5  F4D9         	movff	??_vfpfcnvrt,fsr2l
  3649   002A26  C5A6  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  3650   002A2A  C4DE F5A7          	movff	postinc2,vfpfcnvrt@convarg
  3651   002A2E  C4DE F5A8          	movff	postinc2,vfpfcnvrt@convarg+1
  3652   002A32  C4DE F5A9          	movff	postinc2,vfpfcnvrt@convarg+2
  3653   002A36  C4DE F5AA          	movff	postinc2,vfpfcnvrt@convarg+3
  3654                           
  3655                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1380:      break;
  3656   002A3A  EF2A  F015         	goto	l6719
  3657   002A3E                     l6717:
  3658                           
  3659                           ; BSR set to: 5
  3660   002A3E  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  3661                           
  3662                           ; Switch size 1, requested type "simple"
  3663                           ; Number of cases is 2, Range of values is 105 to 108
  3664                           ; switch strategies available:
  3665                           ; Name         Instructions Cycles
  3666                           ; simple_byte            7     4 (average)
  3667                           ;	Chosen strategy is simple_byte
  3668   002A40  0A69               	xorlw	105	; case 105
  3669   002A42  B4D8               	btfsc	status,2,c
  3670   002A44  EFEA  F014         	goto	l6711
  3671   002A48  0A05               	xorlw	5	; case 108
  3672   002A4A  B4D8               	btfsc	status,2,c
  3673   002A4C  EF05  F015         	goto	l6713
  3674   002A50  EF2A  F015         	goto	l6719
  3675   002A54                     l6719:
  3676                           
  3677                           ; BSR set to: 5
  3678                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3679   002A54  29AC               	incf	vfpfcnvrt@cp& (0+255),w,b
  3680   002A56  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3681   002A5A  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3682   002A5E  6EDF               	movwf	indf2,c
  3683   002A60                     
  3684                           ; BSR set to: 5
  3685                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3686   002A60  C59F  F54B         	movff	vfpfcnvrt@fp,dtoa@fp
  3687   002A64  C5A0  F54C         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3688   002A68  C5A7  F54D         	movff	vfpfcnvrt@convarg,dtoa@d
  3689   002A6C  C5A8  F54E         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3690   002A70  C5A9  F54F         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3691   002A74  C5AA  F550         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3692   002A78  EC41  F01F         	call	_dtoa	;wreg free
  3693   002A7C  EF03  F016         	goto	l1975
  3694   002A80                     l6725:
  3695                           
  3696                           ; BSR set to: 5
  3697                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3698   002A80  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3699   002A84  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3700   002A88  50DF               	movf	indf2,w,c
  3701   002A8A  6FAC               	movwf	vfpfcnvrt@cp& (0+255),b
  3702   002A8C                     
  3703                           ; BSR set to: 5
  3704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3705   002A8C  C5AC  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3706   002A90                     	if	1	;There is more than 1 active tblptr byte
  3707   002A90  0E15               	movlw	high __smallconst
  3708   002A92  6EF7               	movwf	tblptrh,c
  3709   002A94                     	endif
  3710   002A94                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3711   002A94  6AF8               	clrf	tblptru,c
  3712   002A96                     	endif
  3713   002A96                     	if	0	;tblptru may be non-zero
  3714   002A96                     	endif
  3715   002A96  0008               	tblrd		*
  3716   002A98  C4F5 F5AB          	movff	tablat,vfpfcnvrt@c
  3717                           
  3718                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3719   002A9C  EF5B  F015         	goto	l6737
  3720   002AA0                     l6729:
  3721                           
  3722                           ; BSR set to: 5
  3723                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3724   002AA0  2BAC               	incf	vfpfcnvrt@cp& (0+255),f,b
  3725                           
  3726                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  3727   002AA2  EF6A  F015         	goto	l6739
  3728   002AA6                     l6731:
  3729                           
  3730                           ; BSR set to: 5
  3731                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3732   002AA6  0E6C               	movlw	108
  3733   002AA8  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  3734                           
  3735                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  3736   002AAA  EF6A  F015         	goto	l6739
  3737   002AAE                     l6733:
  3738                           
  3739                           ; BSR set to: 5
  3740                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3741   002AAE  0E00               	movlw	0
  3742   002AB0  6FAB               	movwf	vfpfcnvrt@c& (0+255),b
  3743                           
  3744                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  3745   002AB2  EF6A  F015         	goto	l6739
  3746   002AB6                     l6737:
  3747                           
  3748                           ; BSR set to: 5
  3749   002AB6  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  3750                           
  3751                           ; Switch size 1, requested type "simple"
  3752                           ; Number of cases is 3, Range of values is 76 to 108
  3753                           ; switch strategies available:
  3754                           ; Name         Instructions Cycles
  3755                           ; simple_byte           10     6 (average)
  3756                           ;	Chosen strategy is simple_byte
  3757   002AB8  0A4C               	xorlw	76	; case 76
  3758   002ABA  B4D8               	btfsc	status,2,c
  3759   002ABC  EF50  F015         	goto	l6729
  3760   002AC0  0A2A               	xorlw	42	; case 102
  3761   002AC2  B4D8               	btfsc	status,2,c
  3762   002AC4  EF53  F015         	goto	l6731
  3763   002AC8  0A0A               	xorlw	10	; case 108
  3764   002ACA  B4D8               	btfsc	status,2,c
  3765   002ACC  EF50  F015         	goto	l6729
  3766   002AD0  EF57  F015         	goto	l6733
  3767   002AD4                     l6739:
  3768                           
  3769                           ; BSR set to: 5
  3770   002AD4  C5AC  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3771   002AD8                     	if	1	;There is more than 1 active tblptr byte
  3772   002AD8  0E15               	movlw	high __smallconst
  3773   002ADA  6EF7               	movwf	tblptrh,c
  3774   002ADC                     	endif
  3775   002ADC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3776   002ADC  6AF8               	clrf	tblptru,c
  3777   002ADE                     	endif
  3778   002ADE                     	if	0	;tblptru may be non-zero
  3779   002ADE                     	endif
  3780   002ADE  0008               	tblrd		*
  3781   002AE0  50F5               	movf	tablat,w,c
  3782   002AE2  0A66               	xorlw	102
  3783   002AE4  A4D8               	btfss	status,2,c
  3784   002AE6  EF77  F015         	goto	u6691
  3785   002AEA  EF79  F015         	goto	u6690
  3786   002AEE                     u6691:
  3787   002AEE  EFE7  F015         	goto	l6759
  3788   002AF2                     u6690:
  3789   002AF2  EFAF  F015         	goto	l6747
  3790   002AF6                     l6741:
  3791                           
  3792                           ; BSR set to: 5
  3793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3794   002AF6  C5A3  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  3795   002AFA  C5A4  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  3796   002AFE  C4DF F5A5          	movff	indf2,??_vfpfcnvrt
  3797   002B02  0E04               	movlw	4
  3798   002B04  26DE               	addwf	postinc2,f,c
  3799   002B06  C4DF F5A6          	movff	indf2,??_vfpfcnvrt+1
  3800   002B0A  0E00               	movlw	0
  3801   002B0C  22DD               	addwfc	postdec2,f,c
  3802   002B0E  C5A5  F4D9         	movff	??_vfpfcnvrt,fsr2l
  3803   002B12  C5A6  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  3804   002B16  C4DE F5A7          	movff	postinc2,vfpfcnvrt@convarg
  3805   002B1A  C4DE F5A8          	movff	postinc2,vfpfcnvrt@convarg+1
  3806   002B1E  C4DE F5A9          	movff	postinc2,vfpfcnvrt@convarg+2
  3807   002B22  C4DE F5AA          	movff	postinc2,vfpfcnvrt@convarg+3
  3808                           
  3809                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  3810   002B26  EFBA  F015         	goto	l6749
  3811   002B2A                     l6743:
  3812                           
  3813                           ; BSR set to: 5
  3814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3815   002B2A  C5A3  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  3816   002B2E  C5A4  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  3817   002B32  C4DF F5A5          	movff	indf2,??_vfpfcnvrt
  3818   002B36  0E04               	movlw	4
  3819   002B38  26DE               	addwf	postinc2,f,c
  3820   002B3A  C4DF F5A6          	movff	indf2,??_vfpfcnvrt+1
  3821   002B3E  0E00               	movlw	0
  3822   002B40  22DD               	addwfc	postdec2,f,c
  3823   002B42  C5A5  F4D9         	movff	??_vfpfcnvrt,fsr2l
  3824   002B46  C5A6  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  3825   002B4A  C4DE F5A7          	movff	postinc2,vfpfcnvrt@convarg
  3826   002B4E  C4DE F5A8          	movff	postinc2,vfpfcnvrt@convarg+1
  3827   002B52  C4DE F5A9          	movff	postinc2,vfpfcnvrt@convarg+2
  3828   002B56  C4DE F5AA          	movff	postinc2,vfpfcnvrt@convarg+3
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  3831   002B5A  EFBA  F015         	goto	l6749
  3832   002B5E                     l6747:
  3833                           
  3834                           ; BSR set to: 5
  3835   002B5E  51AB               	movf	vfpfcnvrt@c& (0+255),w,b
  3836                           
  3837                           ; Switch size 1, requested type "simple"
  3838                           ; Number of cases is 2, Range of values is 76 to 108
  3839                           ; switch strategies available:
  3840                           ; Name         Instructions Cycles
  3841                           ; simple_byte            7     4 (average)
  3842                           ;	Chosen strategy is simple_byte
  3843   002B60  0A4C               	xorlw	76	; case 76
  3844   002B62  B4D8               	btfsc	status,2,c
  3845   002B64  EF95  F015         	goto	l6743
  3846   002B68  0A20               	xorlw	32	; case 108
  3847   002B6A  B4D8               	btfsc	status,2,c
  3848   002B6C  EF7B  F015         	goto	l6741
  3849   002B70  EFBA  F015         	goto	l6749
  3850   002B74                     l6749:
  3851                           
  3852                           ; BSR set to: 5
  3853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3854   002B74  29AC               	incf	vfpfcnvrt@cp& (0+255),w,b
  3855   002B76  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3856   002B7A  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3857   002B7E  6EDF               	movwf	indf2,c
  3858                           
  3859                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3860   002B80  EFDA  F015         	goto	l6757
  3861   002B84                     l6751:
  3862                           
  3863                           ; BSR set to: 5
  3864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3865   002B84  C59F  F56C         	movff	vfpfcnvrt@fp,efgtoa@fp
  3866   002B88  C5A0  F56D         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3867   002B8C  C5A7  F56E         	movff	vfpfcnvrt@convarg,efgtoa@f
  3868   002B90  C5A8  F56F         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3869   002B94  C5A9  F570         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3870   002B98  C5AA  F571         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3871   002B9C  C5AC  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3872   002BA0                     	if	1	;There is more than 1 active tblptr byte
  3873   002BA0  0E15               	movlw	high __smallconst
  3874   002BA2  6EF7               	movwf	tblptrh,c
  3875   002BA4                     	endif
  3876   002BA4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3877   002BA4  6AF8               	clrf	tblptru,c
  3878   002BA6                     	endif
  3879   002BA6                     	if	0	;tblptru may be non-zero
  3880   002BA6                     	endif
  3881   002BA6  0008               	tblrd		*
  3882   002BA8  C4F5 F572          	movff	tablat,efgtoa@c
  3883   002BAC  ECB4  F00A         	call	_efgtoa	;wreg free
  3884   002BB0  EF03  F016         	goto	l1975
  3885   002BB4                     l6757:
  3886                           
  3887                           ; BSR set to: 5
  3888   002BB4  C5AC  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  3889   002BB8                     	if	1	;There is more than 1 active tblptr byte
  3890   002BB8  0E15               	movlw	high __smallconst
  3891   002BBA  6EF7               	movwf	tblptrh,c
  3892   002BBC                     	endif
  3893   002BBC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3894   002BBC  6AF8               	clrf	tblptru,c
  3895   002BBE                     	endif
  3896   002BBE                     	if	0	;tblptru may be non-zero
  3897   002BBE                     	endif
  3898   002BBE  0008               	tblrd		*
  3899   002BC0  50F5               	movf	tablat,w,c
  3900                           
  3901                           ; Switch size 1, requested type "simple"
  3902                           ; Number of cases is 1, Range of values is 102 to 102
  3903                           ; switch strategies available:
  3904                           ; Name         Instructions Cycles
  3905                           ; simple_byte            4     3 (average)
  3906                           ;	Chosen strategy is simple_byte
  3907   002BC2  0A66               	xorlw	102	; case 102
  3908   002BC4  B4D8               	btfsc	status,2,c
  3909   002BC6  EFC2  F015         	goto	l6751
  3910   002BCA  EFE7  F015         	goto	l6759
  3911   002BCE                     l6759:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3914   002BCE  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3915   002BD2  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3916   002BD6  2ADF               	incf	indf2,f,c
  3917   002BD8  EF03  F016         	goto	l1975
  3918   002BDC                     l6763:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3921   002BDC  C5A1  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  3922   002BE0  C5A2  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3923   002BE4  C4DF F4F6          	movff	indf2,tblptrl
  3924   002BE8                     	if	1	;There is more than 1 active tblptr byte
  3925   002BE8  0E15               	movlw	high __smallconst
  3926   002BEA  6EF7               	movwf	tblptrh,c
  3927   002BEC                     	endif
  3928   002BEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3929   002BEC  6AF8               	clrf	tblptru,c
  3930   002BEE                     	endif
  3931   002BEE                     	if	0	;tblptru may be non-zero
  3932   002BEE                     	endif
  3933   002BEE  0008               	tblrd		*
  3934   002BF0  50F5               	movf	tablat,w,c
  3935   002BF2  6E05               	movwf	fputc@c^(0+1280),c
  3936   002BF4  6A06               	clrf	(fputc@c+1)^(0+1280),c
  3937   002BF6  C59F  F507         	movff	vfpfcnvrt@fp,fputc@fp
  3938   002BFA  C5A0  F508         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3939   002BFE  EC1E  F023         	call	_fputc	;wreg free
  3940   002C02  EFE7  F015         	goto	l6759
  3941   002C06                     l1975:
  3942   002C06  0012               	return		;funcret
  3943   002C08                     __end_of_vfpfcnvrt:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _read_prec_or_width *****************
  3947 ;; Defined at:
  3948 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  fmt             2    8[COMRAM] PTR PTR const unsigned c
  3951 ;;		 -> vfprintf@cfmt(1), 
  3952 ;;  ap              2   10[COMRAM] PTR PTR void [1]
  3953 ;;		 -> printf@ap(2), 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;  c               1   14[COMRAM] unsigned char 
  3956 ;;  n               2   15[COMRAM] int 
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  2    8[COMRAM] int 
  3959 ;; Registers used:
  3960 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3966 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;Total ram usage:        9 bytes
  3971 ;; Hardware stack levels used: 1
  3972 ;; Hardware stack levels required when called: 6
  3973 ;; This function calls:
  3974 ;;		___wmul
  3975 ;; This function is called by:
  3976 ;;		_vfpfcnvrt
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text14
  3981   004706                     __ptext14:
  3982                           	callstack 0
  3983   004706                     _read_prec_or_width:
  3984                           	callstack 115
  3985   004706                     
  3986                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3987   004706  0E00               	movlw	0
  3988   004708  6E11               	movwf	(read_prec_or_width@n+1)^(0+1280),c
  3989   00470A  0E00               	movlw	0
  3990   00470C  6E10               	movwf	read_prec_or_width@n^(0+1280),c
  3991   00470E                     
  3992                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3993   00470E  C509  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  3994   004712  C50A  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  3995   004716  C4DF F4F6          	movff	indf2,tblptrl
  3996   00471A                     	if	1	;There is more than 1 active tblptr byte
  3997   00471A  0E15               	movlw	high __smallconst
  3998   00471C  6EF7               	movwf	tblptrh,c
  3999   00471E                     	endif
  4000   00471E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4001   00471E  6AF8               	clrf	tblptru,c
  4002   004720                     	endif
  4003   004720                     	if	0	;tblptru may be non-zero
  4004   004720                     	endif
  4005   004720  0008               	tblrd		*
  4006   004722  50F5               	movf	tablat,w,c
  4007   004724  0A2A               	xorlw	42
  4008   004726  A4D8               	btfss	status,2,c
  4009   004728  EF98  F023         	goto	u4941
  4010   00472C  EF9A  F023         	goto	u4940
  4011   004730                     u4941:
  4012   004730  EFCA  F023         	goto	l5335
  4013   004734                     u4940:
  4014   004734                     
  4015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4016   004734  C509  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  4017   004738  C50A  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  4018   00473C  2ADF               	incf	indf2,f,c
  4019   00473E                     
  4020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4021   00473E  C50B  F4D9         	movff	read_prec_or_width@ap,fsr2l
  4022   004742  C50C  F4DA         	movff	read_prec_or_width@ap+1,fsr2h
  4023   004746  C4DF F50D          	movff	indf2,??_read_prec_or_width
  4024   00474A  0E02               	movlw	2
  4025   00474C  26DE               	addwf	postinc2,f,c
  4026   00474E  C4DF F50E          	movff	indf2,??_read_prec_or_width+1
  4027   004752  0E00               	movlw	0
  4028   004754  22DD               	addwfc	postdec2,f,c
  4029   004756  C50D  F4D9         	movff	??_read_prec_or_width,fsr2l
  4030   00475A  C50E  F4DA         	movff	??_read_prec_or_width+1,fsr2h
  4031   00475E  C4DE F510          	movff	postinc2,read_prec_or_width@n
  4032   004762  C4DD F511          	movff	postdec2,read_prec_or_width@n+1
  4033                           
  4034                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4035   004766  EFDF  F023         	goto	l1965
  4036   00476A                     l5331:
  4037                           
  4038                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4039   00476A  C510  F503         	movff	read_prec_or_width@n,___wmul@multiplier
  4040   00476E  C511  F504         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  4041   004772  0E00               	movlw	0
  4042   004774  6E06               	movwf	(___wmul@multiplicand+1)^(0+1280),c
  4043   004776  0E0A               	movlw	10
  4044   004778  6E05               	movwf	___wmul@multiplicand^(0+1280),c
  4045   00477A  EC8D  F028         	call	___wmul	;wreg free
  4046   00477E  500F               	movf	read_prec_or_width@c^(0+1280),w,c
  4047   004780  2403               	addwf	?___wmul^(0+1280),w,c
  4048   004782  6E10               	movwf	read_prec_or_width@n^(0+1280),c
  4049   004784  0E00               	movlw	0
  4050   004786  2004               	addwfc	(?___wmul+1)^(0+1280),w,c
  4051   004788  6E11               	movwf	(read_prec_or_width@n+1)^(0+1280),c
  4052   00478A                     
  4053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4054   00478A  C509  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  4055   00478E  C50A  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  4056   004792  2ADF               	incf	indf2,f,c
  4057   004794                     l5335:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4060   004794  C509  F4D9         	movff	read_prec_or_width@fmt,fsr2l
  4061   004798  C50A  F4DA         	movff	read_prec_or_width@fmt+1,fsr2h
  4062   00479C  C4DF F4F6          	movff	indf2,tblptrl
  4063   0047A0                     	if	1	;There is more than 1 active tblptr byte
  4064   0047A0  0E15               	movlw	high __smallconst
  4065   0047A2  6EF7               	movwf	tblptrh,c
  4066   0047A4                     	endif
  4067   0047A4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4068   0047A4  6AF8               	clrf	tblptru,c
  4069   0047A6                     	endif
  4070   0047A6                     	if	0	;tblptru may be non-zero
  4071   0047A6                     	endif
  4072   0047A6  0008               	tblrd		*
  4073   0047A8  50F5               	movf	tablat,w,c
  4074   0047AA  0FD0               	addlw	208
  4075   0047AC  6E0F               	movwf	read_prec_or_width@c^(0+1280),c
  4076   0047AE  0E09               	movlw	9
  4077   0047B0  640F               	cpfsgt	read_prec_or_width@c^(0+1280),c
  4078   0047B2  EFDD  F023         	goto	u4951
  4079   0047B6  EFDF  F023         	goto	u4950
  4080   0047BA                     u4951:
  4081   0047BA  EFB5  F023         	goto	l5331
  4082   0047BE                     u4950:
  4083   0047BE                     l1965:
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4086   0047BE  C510  F509         	movff	read_prec_or_width@n,?_read_prec_or_width
  4087   0047C2  C511  F50A         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  4088   0047C6  0012               	return		;funcret
  4089   0047C8                     __end_of_read_prec_or_width:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function ___wmul *****************
  4093 ;; Defined at:
  4094 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  multiplier      2    2[COMRAM] unsigned int 
  4097 ;;  multiplicand    2    4[COMRAM] unsigned int 
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;  product         2    6[COMRAM] unsigned int 
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  2    2[COMRAM] unsigned int 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0, prodl, prodh
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;Total ram usage:        6 bytes
  4114 ;; Hardware stack levels used: 1
  4115 ;; Hardware stack levels required when called: 5
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_read_prec_or_width
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text15
  4124   00511A                     __ptext15:
  4125                           	callstack 0
  4126   00511A                     ___wmul:
  4127                           	callstack 115
  4128   00511A  5003               	movf	___wmul@multiplier^(0+1280),w,c
  4129   00511C  0205               	mulwf	___wmul@multiplicand^(0+1280),c
  4130   00511E  C4F3 F507          	movff	prodl,___wmul@product
  4131   005122  C4F4 F508          	movff	prodh,___wmul@product+1
  4132   005126  5003               	movf	___wmul@multiplier^(0+1280),w,c
  4133   005128  0206               	mulwf	(___wmul@multiplicand+1)^(0+1280),c
  4134   00512A  50F3               	movf	243,w,c
  4135   00512C  2608               	addwf	(___wmul@product+1)^(0+1280),f,c
  4136   00512E  5004               	movf	(___wmul@multiplier+1)^(0+1280),w,c
  4137   005130  0205               	mulwf	___wmul@multiplicand^(0+1280),c
  4138   005132  50F3               	movf	243,w,c
  4139   005134  2608               	addwf	(___wmul@product+1)^(0+1280),f,c
  4140   005136  C507  F503         	movff	___wmul@product,?___wmul
  4141   00513A  C508  F504         	movff	___wmul@product+1,?___wmul+1
  4142   00513E  0012               	return		;funcret
  4143   005140                     __end_of___wmul:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function _efgtoa *****************
  4147 ;; Defined at:
  4148 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;  fp              2   12[BANK5 ] PTR struct _IO_FILE
  4151 ;;		 -> NULL(0), 
  4152 ;;  f               4   14[BANK5 ] PTR struct _IO_FILE
  4153 ;;  c               1   18[BANK5 ] unsigned char 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  u               4   59[BANK5 ] struct flui
  4156 ;;  g               4   53[BANK5 ] struct flui
  4157 ;;  l               4   48[BANK5 ] struct flui
  4158 ;;  h               4   44[BANK5 ] struct flui
  4159 ;;  ou              4   38[BANK5 ] struct flui
  4160 ;;  n               2   57[BANK5 ] int 
  4161 ;;  i               2   42[BANK5 ] int 
  4162 ;;  w               2   36[BANK5 ] int 
  4163 ;;  e               2   34[BANK5 ] int 
  4164 ;;  m               2   32[BANK5 ] int 
  4165 ;;  d               2   30[BANK5 ] int 
  4166 ;;  t               2   23[BANK5 ] int 
  4167 ;;  p               2   21[BANK5 ] int 
  4168 ;;  ne              2   19[BANK5 ] int 
  4169 ;;  sign            1   52[BANK5 ] unsigned char 
  4170 ;;  nmode           1   29[BANK5 ] unsigned char 
  4171 ;;  mode            1   28[BANK5 ] unsigned char 
  4172 ;;  pp              1   27[BANK5 ] unsigned char 
  4173 ;;  esign           1    0        unsigned char 
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4183 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;      Totals:         2      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;Total ram usage:       53 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 10
  4190 ;; This function calls:
  4191 ;;		___fladd
  4192 ;;		___fldiv
  4193 ;;		___fleq
  4194 ;;		___flge
  4195 ;;		___flmul
  4196 ;;		___flneg
  4197 ;;		___flsub
  4198 ;;		___fltol
  4199 ;;		___fpclassifyf
  4200 ;;		_floorf
  4201 ;;		_labs
  4202 ;;		_memcpy
  4203 ;;		_pad
  4204 ;;		_strcpy
  4205 ;; This function is called by:
  4206 ;;		_vfpfcnvrt
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text16
  4211   001568                     __ptext16:
  4212                           	callstack 0
  4213   001568                     _efgtoa:
  4214                           	callstack 111
  4215   001568                     
  4216                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  4217   001568  0E00               	movlw	0
  4218   00156A  0105               	movlb	5	; () banked
  4219   00156C  6F94               	movwf	efgtoa@sign& (0+255),b
  4220   00156E                     
  4221                           ; BSR set to: 5
  4222                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  4223   00156E  C56E  F595         	movff	efgtoa@f,efgtoa@g
  4224   001572  C56F  F596         	movff	efgtoa@f+1,efgtoa@g+1
  4225   001576  C570  F597         	movff	efgtoa@f+2,efgtoa@g+2
  4226   00157A  C571  F598         	movff	efgtoa@f+3,efgtoa@g+3
  4227   00157E                     
  4228                           ; BSR set to: 5
  4229                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  4230   00157E  BF98               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4231   001580  EFC6  F00A         	goto	u6320
  4232   001584  EFC4  F00A         	goto	u6321
  4233   001588                     u6321:
  4234   001588  EFDA  F00A         	goto	l6457
  4235   00158C                     u6320:
  4236   00158C                     
  4237                           ; BSR set to: 5
  4238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  4239   00158C  0E01               	movlw	1
  4240   00158E  6F94               	movwf	efgtoa@sign& (0+255),b
  4241   001590                     
  4242                           ; BSR set to: 5
  4243                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  4244   001590  C595  F503         	movff	efgtoa@g,___flneg@f1
  4245   001594  C596  F504         	movff	efgtoa@g+1,___flneg@f1+1
  4246   001598  C597  F505         	movff	efgtoa@g+2,___flneg@f1+2
  4247   00159C  C598  F506         	movff	efgtoa@g+3,___flneg@f1+3
  4248   0015A0  ECA1  F027         	call	___flneg	;wreg free
  4249   0015A4  C503  F595         	movff	?___flneg,efgtoa@g
  4250   0015A8  C504  F596         	movff	?___flneg+1,efgtoa@g+1
  4251   0015AC  C505  F597         	movff	?___flneg+2,efgtoa@g+2
  4252   0015B0  C506  F598         	movff	?___flneg+3,efgtoa@g+3
  4253   0015B4                     l6457:
  4254                           
  4255                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  4256   0015B4  0E00               	movlw	0
  4257   0015B6  0105               	movlb	5	; () banked
  4258   0015B8  6F9A               	movwf	(efgtoa@n+1)& (0+255),b
  4259   0015BA  0E00               	movlw	0
  4260   0015BC  6F99               	movwf	efgtoa@n& (0+255),b
  4261   0015BE                     
  4262                           ; BSR set to: 5
  4263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  4264   0015BE  C608  F584         	movff	_width,efgtoa@w
  4265   0015C2  C609  F585         	movff	_width+1,efgtoa@w+1
  4266   0015C6                     
  4267                           ; BSR set to: 5
  4268                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  4269   0015C6  5194               	movf	efgtoa@sign& (0+255),w,b
  4270   0015C8  B4D8               	btfsc	status,2,c
  4271   0015CA  EFE9  F00A         	goto	u6331
  4272   0015CE  EFEB  F00A         	goto	u6330
  4273   0015D2                     u6331:
  4274   0015D2  EFFF  F00A         	goto	l6471
  4275   0015D6                     u6330:
  4276   0015D6                     
  4277                           ; BSR set to: 5
  4278                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  4279   0015D6  5194               	movf	efgtoa@sign& (0+255),w,b
  4280   0015D8  A4D8               	btfss	status,2,c
  4281   0015DA  EFF1  F00A         	goto	u6341
  4282   0015DE  EFF3  F00A         	goto	u6340
  4283   0015E2                     u6341:
  4284   0015E2  EFF9  F00A         	goto	l6467
  4285   0015E6                     u6340:
  4286   0015E6                     
  4287                           ; BSR set to: 5
  4288   0015E6  0E00               	movlw	0
  4289   0015E8  6F7A               	movwf	(_efgtoa$2680+1)& (0+255),b
  4290   0015EA  0E2B               	movlw	43
  4291   0015EC  6F79               	movwf	_efgtoa$2680& (0+255),b
  4292   0015EE  EFFD  F00A         	goto	l6469
  4293   0015F2                     l6467:
  4294                           
  4295                           ; BSR set to: 5
  4296   0015F2  0E00               	movlw	0
  4297   0015F4  6F7A               	movwf	(_efgtoa$2680+1)& (0+255),b
  4298   0015F6  0E2D               	movlw	45
  4299   0015F8  6F79               	movwf	_efgtoa$2680& (0+255),b
  4300   0015FA                     l6469:
  4301                           
  4302                           ; BSR set to: 5
  4303   0015FA  C579  F594         	movff	_efgtoa$2680,efgtoa@sign
  4304   0015FE                     l6471:
  4305                           
  4306                           ; BSR set to: 5
  4307                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4308   0015FE  C595  F503         	movff	efgtoa@g,___fpclassifyf@x
  4309   001602  C596  F504         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4310   001606  C597  F505         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4311   00160A  C598  F506         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4312   00160E  EC29  F022         	call	___fpclassifyf	;wreg free
  4313   001612  0403               	decf	?___fpclassifyf^(0+1280),w,c
  4314   001614  1004               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  4315   001616  A4D8               	btfss	status,2,c
  4316   001618  EF10  F00B         	goto	u6351
  4317   00161C  EF12  F00B         	goto	u6350
  4318   001620                     u6351:
  4319   001620  EF43  F00B         	goto	l6489
  4320   001624                     u6350:
  4321   001624                     
  4322                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  4323   001624  0105               	movlb	5	; () banked
  4324   001626  5194               	movf	efgtoa@sign& (0+255),w,b
  4325   001628  B4D8               	btfsc	status,2,c
  4326   00162A  EF19  F00B         	goto	u6361
  4327   00162E  EF1B  F00B         	goto	u6360
  4328   001632                     u6361:
  4329   001632  EF24  F00B         	goto	l6481
  4330   001636                     u6360:
  4331   001636                     
  4332                           ; BSR set to: 5
  4333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  4334   001636  C594  F612         	movff	efgtoa@sign,_dbuf
  4335   00163A                     
  4336                           ; BSR set to: 5
  4337                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  4338   00163A  0784               	decf	efgtoa@w& (0+255),f,b
  4339   00163C  A0D8               	btfss	status,0,c
  4340   00163E  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4341   001640                     
  4342                           ; BSR set to: 5
  4343                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4344   001640  0E00               	movlw	0
  4345   001642  6F9A               	movwf	(efgtoa@n+1)& (0+255),b
  4346   001644  0E01               	movlw	1
  4347   001646  6F99               	movwf	efgtoa@n& (0+255),b
  4348   001648                     l6481:
  4349                           
  4350                           ; BSR set to: 5
  4351                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  4352   001648  0E12               	movlw	low _dbuf
  4353   00164A  2599               	addwf	efgtoa@n& (0+255),w,b
  4354   00164C  6E03               	movwf	strcpy@dest^(0+1280),c
  4355   00164E  0E06               	movlw	high _dbuf
  4356   001650  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4357   001652  6E04               	movwf	(strcpy@dest+1)^(0+1280),c
  4358   001654  0E5E               	movlw	low STR_8
  4359   001656  6E05               	movwf	strcpy@src^(0+1280),c
  4360   001658  EC67  F027         	call	_strcpy	;wreg free
  4361   00165C                     l6483:
  4362                           
  4363                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4364   00165C  0105               	movlb	5	; () banked
  4365   00165E  0EFD               	movlw	253
  4366   001660  2784               	addwf	efgtoa@w& (0+255),f,b
  4367   001662  0EFF               	movlw	255
  4368   001664  2385               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4369   001666                     
  4370                           ; BSR set to: 5
  4371                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4372   001666  C56C  F515         	movff	efgtoa@fp,pad@fp
  4373   00166A  C56D  F516         	movff	efgtoa@fp+1,pad@fp+1
  4374   00166E  0E12               	movlw	low _dbuf
  4375   001670  6E17               	movwf	pad@buf^(0+1280),c
  4376   001672  0E06               	movlw	high _dbuf
  4377   001674  6E18               	movwf	(pad@buf+1)^(0+1280),c
  4378   001676  C584  F519         	movff	efgtoa@w,pad@p
  4379   00167A  C585  F51A         	movff	efgtoa@w+1,pad@p+1
  4380   00167E  EC4C  F025         	call	_pad	;wreg free
  4381   001682  EFAB  F00F         	goto	l1920
  4382   001686                     l6489:
  4383                           
  4384                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4385   001686  C595  F503         	movff	efgtoa@g,___fpclassifyf@x
  4386   00168A  C596  F504         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4387   00168E  C597  F505         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4388   001692  C598  F506         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4389   001696  EC29  F022         	call	___fpclassifyf	;wreg free
  4390   00169A  5003               	movf	?___fpclassifyf^(0+1280),w,c
  4391   00169C  1004               	iorwf	(?___fpclassifyf+1)^(0+1280),w,c
  4392   00169E  A4D8               	btfss	status,2,c
  4393   0016A0  EF54  F00B         	goto	u6371
  4394   0016A4  EF56  F00B         	goto	u6370
  4395   0016A8                     u6371:
  4396   0016A8  EF74  F00B         	goto	l6507
  4397   0016AC                     u6370:
  4398   0016AC                     
  4399                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  4400   0016AC  0105               	movlb	5	; () banked
  4401   0016AE  5194               	movf	efgtoa@sign& (0+255),w,b
  4402   0016B0  B4D8               	btfsc	status,2,c
  4403   0016B2  EF5D  F00B         	goto	u6381
  4404   0016B6  EF5F  F00B         	goto	u6380
  4405   0016BA                     u6381:
  4406   0016BA  EF68  F00B         	goto	l6499
  4407   0016BE                     u6380:
  4408   0016BE                     
  4409                           ; BSR set to: 5
  4410                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  4411   0016BE  C594  F612         	movff	efgtoa@sign,_dbuf
  4412   0016C2                     
  4413                           ; BSR set to: 5
  4414                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  4415   0016C2  0784               	decf	efgtoa@w& (0+255),f,b
  4416   0016C4  A0D8               	btfss	status,0,c
  4417   0016C6  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  4418   0016C8                     
  4419                           ; BSR set to: 5
  4420                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  4421   0016C8  0E00               	movlw	0
  4422   0016CA  6F9A               	movwf	(efgtoa@n+1)& (0+255),b
  4423   0016CC  0E01               	movlw	1
  4424   0016CE  6F99               	movwf	efgtoa@n& (0+255),b
  4425   0016D0                     l6499:
  4426                           
  4427                           ; BSR set to: 5
  4428                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  4429   0016D0  0E12               	movlw	low _dbuf
  4430   0016D2  2599               	addwf	efgtoa@n& (0+255),w,b
  4431   0016D4  6E03               	movwf	strcpy@dest^(0+1280),c
  4432   0016D6  0E06               	movlw	high _dbuf
  4433   0016D8  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4434   0016DA  6E04               	movwf	(strcpy@dest+1)^(0+1280),c
  4435   0016DC  0E62               	movlw	low STR_11
  4436   0016DE  6E05               	movwf	strcpy@src^(0+1280),c
  4437   0016E0  EC67  F027         	call	_strcpy	;wreg free
  4438   0016E4  EF2E  F00B         	goto	l6483
  4439   0016E8                     l6507:
  4440                           
  4441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  4442   0016E8  0E00               	movlw	0
  4443   0016EA  0105               	movlb	5	; () banked
  4444   0016EC  6F9B               	movwf	efgtoa@u& (0+255),b
  4445   0016EE  0E00               	movlw	0
  4446   0016F0  6F9C               	movwf	(efgtoa@u+1)& (0+255),b
  4447   0016F2  0E80               	movlw	128
  4448   0016F4  6F9D               	movwf	(efgtoa@u+2)& (0+255),b
  4449   0016F6  0E3F               	movlw	63
  4450   0016F8  6F9E               	movwf	(efgtoa@u+3)& (0+255),b
  4451                           
  4452                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  4453   0016FA  0E00               	movlw	0
  4454   0016FC  6F83               	movwf	(efgtoa@e+1)& (0+255),b
  4455   0016FE  0E00               	movlw	0
  4456   001700  6F82               	movwf	efgtoa@e& (0+255),b
  4457   001702                     
  4458                           ; BSR set to: 5
  4459                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  4460   001702  C595  F503         	movff	efgtoa@g,___fleq@ff1
  4461   001706  C596  F504         	movff	efgtoa@g+1,___fleq@ff1+1
  4462   00170A  C597  F505         	movff	efgtoa@g+2,___fleq@ff1+2
  4463   00170E  C598  F506         	movff	efgtoa@g+3,___fleq@ff1+3
  4464   001712  0E00               	movlw	0
  4465   001714  6E07               	movwf	___fleq@ff2^(0+1280),c
  4466   001716  0E00               	movlw	0
  4467   001718  6E08               	movwf	(___fleq@ff2+1)^(0+1280),c
  4468   00171A  0E00               	movlw	0
  4469   00171C  6E09               	movwf	(___fleq@ff2+2)^(0+1280),c
  4470   00171E  0E00               	movlw	0
  4471   001720  6E0A               	movwf	(___fleq@ff2+3)^(0+1280),c
  4472   001722  ECE4  F023         	call	___fleq	;wreg free
  4473   001726  B0D8               	btfsc	status,0,c
  4474   001728  EF98  F00B         	goto	u6391
  4475   00172C  EF9A  F00B         	goto	u6390
  4476   001730                     u6391:
  4477   001730  EF7A  F00C         	goto	l1923
  4478   001734                     u6390:
  4479   001734  EFA7  F00B         	goto	l6515
  4480   001738                     l1925:
  4481                           
  4482                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  4483   001738  C586  F59B         	movff	efgtoa@ou,efgtoa@u
  4484   00173C  C587  F59C         	movff	efgtoa@ou+1,efgtoa@u+1
  4485   001740  C588  F59D         	movff	efgtoa@ou+2,efgtoa@u+2
  4486   001744  C589  F59E         	movff	efgtoa@ou+3,efgtoa@u+3
  4487   001748                     
  4488                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  4489   001748  0105               	movlb	5	; () banked
  4490   00174A  4B82               	infsnz	efgtoa@e& (0+255),f,b
  4491   00174C  2B83               	incf	(efgtoa@e+1)& (0+255),f,b
  4492   00174E                     l6515:
  4493                           
  4494                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4495   00174E  C59B  F51C         	movff	efgtoa@u,___flmul@b
  4496   001752  C59C  F51D         	movff	efgtoa@u+1,___flmul@b+1
  4497   001756  C59D  F51E         	movff	efgtoa@u+2,___flmul@b+2
  4498   00175A  C59E  F51F         	movff	efgtoa@u+3,___flmul@b+3
  4499   00175E  0E00               	movlw	0
  4500   001760  6E20               	movwf	___flmul@a^(0+1280),c
  4501   001762  0E00               	movlw	0
  4502   001764  6E21               	movwf	(___flmul@a+1)^(0+1280),c
  4503   001766  0E20               	movlw	32
  4504   001768  6E22               	movwf	(___flmul@a+2)^(0+1280),c
  4505   00176A  0E41               	movlw	65
  4506   00176C  6E23               	movwf	(___flmul@a+3)^(0+1280),c
  4507   00176E  EC0C  F012         	call	___flmul	;wreg free
  4508   001772  C51C  F586         	movff	?___flmul,efgtoa@ou
  4509   001776  C51D  F587         	movff	?___flmul+1,efgtoa@ou+1
  4510   00177A  C51E  F588         	movff	?___flmul+2,efgtoa@ou+2
  4511   00177E  C51F  F589         	movff	?___flmul+3,efgtoa@ou+3
  4512   001782  0105               	movlb	5	; () banked
  4513   001784  5186               	movf	efgtoa@ou& (0+255),w,b
  4514   001786  5D95               	subwf	efgtoa@g& (0+255),w,b
  4515   001788  6E03               	movwf	labs@a^(0+1280),c
  4516   00178A  5187               	movf	(efgtoa@ou+1)& (0+255),w,b
  4517   00178C  5996               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4518   00178E  6E04               	movwf	(labs@a+1)^(0+1280),c
  4519   001790  5188               	movf	(efgtoa@ou+2)& (0+255),w,b
  4520   001792  5997               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4521   001794  6E05               	movwf	(labs@a+2)^(0+1280),c
  4522   001796  5189               	movf	(efgtoa@ou+3)& (0+255),w,b
  4523   001798  5998               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4524   00179A  6E06               	movwf	(labs@a+3)^(0+1280),c
  4525   00179C  EC25  F026         	call	_labs	;wreg free
  4526   0017A0  BE06               	btfsc	(?_labs+3)^(0+1280),7,c
  4527   0017A2  EFDE  F00B         	goto	u6401
  4528   0017A6  5006               	movf	(?_labs+3)^(0+1280),w,c
  4529   0017A8  1005               	iorwf	(?_labs+2)^(0+1280),w,c
  4530   0017AA  1004               	iorwf	(?_labs+1)^(0+1280),w,c
  4531   0017AC  E109               	bnz	u6400
  4532   0017AE  0E02               	movlw	2
  4533   0017B0  5C03               	subwf	?_labs^(0+1280),w,c
  4534   0017B2  A0D8               	btfss	status,0,c
  4535   0017B4  EFDE  F00B         	goto	u6401
  4536   0017B8  EFE0  F00B         	goto	u6400
  4537   0017BC                     u6401:
  4538   0017BC  EF9C  F00B         	goto	l1925
  4539   0017C0                     u6400:
  4540   0017C0  C586  F560         	movff	efgtoa@ou,___flge@ff1
  4541   0017C4  C587  F561         	movff	efgtoa@ou+1,___flge@ff1+1
  4542   0017C8  C588  F562         	movff	efgtoa@ou+2,___flge@ff1+2
  4543   0017CC  C589  F563         	movff	efgtoa@ou+3,___flge@ff1+3
  4544   0017D0  C595  F564         	movff	efgtoa@g,___flge@ff2
  4545   0017D4  C596  F565         	movff	efgtoa@g+1,___flge@ff2+1
  4546   0017D8  C597  F566         	movff	efgtoa@g+2,___flge@ff2+2
  4547   0017DC  C598  F567         	movff	efgtoa@g+3,___flge@ff2+3
  4548   0017E0  EC23  F021         	call	___flge	;wreg free
  4549   0017E4  0105               	movlb	5	; () banked
  4550   0017E6  A0D8               	btfss	status,0,c
  4551   0017E8  EFF8  F00B         	goto	u6411
  4552   0017EC  EFFA  F00B         	goto	u6410
  4553   0017F0                     u6411:
  4554   0017F0  EF9C  F00B         	goto	l1925
  4555   0017F4                     u6410:
  4556   0017F4                     
  4557                           ; BSR set to: 5
  4558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4559   0017F4  519B               	movf	efgtoa@u& (0+255),w,b
  4560   0017F6  5D95               	subwf	efgtoa@g& (0+255),w,b
  4561   0017F8  6E03               	movwf	labs@a^(0+1280),c
  4562   0017FA  519C               	movf	(efgtoa@u+1)& (0+255),w,b
  4563   0017FC  5996               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4564   0017FE  6E04               	movwf	(labs@a+1)^(0+1280),c
  4565   001800  519D               	movf	(efgtoa@u+2)& (0+255),w,b
  4566   001802  5997               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4567   001804  6E05               	movwf	(labs@a+2)^(0+1280),c
  4568   001806  519E               	movf	(efgtoa@u+3)& (0+255),w,b
  4569   001808  5998               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4570   00180A  6E06               	movwf	(labs@a+3)^(0+1280),c
  4571   00180C  EC25  F026         	call	_labs	;wreg free
  4572   001810  BE06               	btfsc	(?_labs+3)^(0+1280),7,c
  4573   001812  EF18  F00C         	goto	u6420
  4574   001816  5006               	movf	(?_labs+3)^(0+1280),w,c
  4575   001818  1005               	iorwf	(?_labs+2)^(0+1280),w,c
  4576   00181A  1004               	iorwf	(?_labs+1)^(0+1280),w,c
  4577   00181C  E107               	bnz	u6421
  4578   00181E  0E02               	movlw	2
  4579   001820  5C03               	subwf	?_labs^(0+1280),w,c
  4580   001822  B0D8               	btfsc	status,0,c
  4581   001824  EF16  F00C         	goto	u6421
  4582   001828  EF18  F00C         	goto	u6420
  4583   00182C                     u6421:
  4584   00182C  EF60  F00C         	goto	l6533
  4585   001830                     u6420:
  4586   001830                     l6523:
  4587                           
  4588                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  4589   001830  C59B  F595         	movff	efgtoa@u,efgtoa@g
  4590   001834  C59C  F596         	movff	efgtoa@u+1,efgtoa@g+1
  4591   001838  C59D  F597         	movff	efgtoa@u+2,efgtoa@g+2
  4592   00183C  C59E  F598         	movff	efgtoa@u+3,efgtoa@g+3
  4593                           
  4594                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  4595   001840  EF7A  F00C         	goto	l1923
  4596   001844                     l6525:
  4597                           
  4598                           ; BSR set to: 5
  4599                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  4600   001844  C59B  F503         	movff	efgtoa@u,___fldiv@b
  4601   001848  C59C  F504         	movff	efgtoa@u+1,___fldiv@b+1
  4602   00184C  C59D  F505         	movff	efgtoa@u+2,___fldiv@b+2
  4603   001850  C59E  F506         	movff	efgtoa@u+3,___fldiv@b+3
  4604   001854  0E00               	movlw	0
  4605   001856  6E07               	movwf	___fldiv@a^(0+1280),c
  4606   001858  0E00               	movlw	0
  4607   00185A  6E08               	movwf	(___fldiv@a+1)^(0+1280),c
  4608   00185C  0E20               	movlw	32
  4609   00185E  6E09               	movwf	(___fldiv@a+2)^(0+1280),c
  4610   001860  0E41               	movlw	65
  4611   001862  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
  4612   001864  EC04  F016         	call	___fldiv	;wreg free
  4613   001868  C503  F59B         	movff	?___fldiv,efgtoa@u
  4614   00186C  C504  F59C         	movff	?___fldiv+1,efgtoa@u+1
  4615   001870  C505  F59D         	movff	?___fldiv+2,efgtoa@u+2
  4616   001874  C506  F59E         	movff	?___fldiv+3,efgtoa@u+3
  4617   001878                     
  4618                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  4619   001878  0105               	movlb	5	; () banked
  4620   00187A  0782               	decf	efgtoa@e& (0+255),f,b
  4621   00187C  A0D8               	btfss	status,0,c
  4622   00187E  0783               	decf	(efgtoa@e+1)& (0+255),f,b
  4623   001880                     
  4624                           ; BSR set to: 5
  4625                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4626   001880  519B               	movf	efgtoa@u& (0+255),w,b
  4627   001882  5D95               	subwf	efgtoa@g& (0+255),w,b
  4628   001884  6E03               	movwf	labs@a^(0+1280),c
  4629   001886  519C               	movf	(efgtoa@u+1)& (0+255),w,b
  4630   001888  5996               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4631   00188A  6E04               	movwf	(labs@a+1)^(0+1280),c
  4632   00188C  519D               	movf	(efgtoa@u+2)& (0+255),w,b
  4633   00188E  5997               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4634   001890  6E05               	movwf	(labs@a+2)^(0+1280),c
  4635   001892  519E               	movf	(efgtoa@u+3)& (0+255),w,b
  4636   001894  5998               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4637   001896  6E06               	movwf	(labs@a+3)^(0+1280),c
  4638   001898  EC25  F026         	call	_labs	;wreg free
  4639   00189C  BE06               	btfsc	(?_labs+3)^(0+1280),7,c
  4640   00189E  EF5E  F00C         	goto	u6430
  4641   0018A2  5006               	movf	(?_labs+3)^(0+1280),w,c
  4642   0018A4  1005               	iorwf	(?_labs+2)^(0+1280),w,c
  4643   0018A6  1004               	iorwf	(?_labs+1)^(0+1280),w,c
  4644   0018A8  E107               	bnz	u6431
  4645   0018AA  0E02               	movlw	2
  4646   0018AC  5C03               	subwf	?_labs^(0+1280),w,c
  4647   0018AE  B0D8               	btfsc	status,0,c
  4648   0018B0  EF5C  F00C         	goto	u6431
  4649   0018B4  EF5E  F00C         	goto	u6430
  4650   0018B8                     u6431:
  4651   0018B8  EF60  F00C         	goto	l6533
  4652   0018BC                     u6430:
  4653   0018BC  EF18  F00C         	goto	l6523
  4654   0018C0                     l6533:
  4655                           
  4656                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  4657   0018C0  C595  F560         	movff	efgtoa@g,___flge@ff1
  4658   0018C4  C596  F561         	movff	efgtoa@g+1,___flge@ff1+1
  4659   0018C8  C597  F562         	movff	efgtoa@g+2,___flge@ff1+2
  4660   0018CC  C598  F563         	movff	efgtoa@g+3,___flge@ff1+3
  4661   0018D0  C59B  F564         	movff	efgtoa@u,___flge@ff2
  4662   0018D4  C59C  F565         	movff	efgtoa@u+1,___flge@ff2+1
  4663   0018D8  C59D  F566         	movff	efgtoa@u+2,___flge@ff2+2
  4664   0018DC  C59E  F567         	movff	efgtoa@u+3,___flge@ff2+3
  4665   0018E0  EC23  F021         	call	___flge	;wreg free
  4666   0018E4  0105               	movlb	5	; () banked
  4667   0018E6  A0D8               	btfss	status,0,c
  4668   0018E8  EF78  F00C         	goto	u6441
  4669   0018EC  EF7A  F00C         	goto	u6440
  4670   0018F0                     u6441:
  4671   0018F0  EF22  F00C         	goto	l6525
  4672   0018F4                     u6440:
  4673   0018F4                     l1923:
  4674                           
  4675                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  4676   0018F4  C572  F57C         	movff	efgtoa@c,efgtoa@mode
  4677                           
  4678                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  4679   0018F8  C57C  F57D         	movff	efgtoa@mode,efgtoa@nmode
  4680   0018FC                     
  4681                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  4682   0018FC  0105               	movlb	5	; () banked
  4683   0018FE  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  4684   001900  EF84  F00C         	goto	u6451
  4685   001904  EF86  F00C         	goto	u6450
  4686   001908                     u6451:
  4687   001908  EF8C  F00C         	goto	l6539
  4688   00190C                     u6450:
  4689   00190C                     
  4690                           ; BSR set to: 5
  4691   00190C  C5E1  F575         	movff	_prec,efgtoa@p
  4692   001910  C5E2  F576         	movff	_prec+1,efgtoa@p+1
  4693   001914  EF90  F00C         	goto	l6541
  4694   001918                     l6539:
  4695                           
  4696                           ; BSR set to: 5
  4697   001918  0E00               	movlw	0
  4698   00191A  6F76               	movwf	(efgtoa@p+1)& (0+255),b
  4699   00191C  0E06               	movlw	6
  4700   00191E  6F75               	movwf	efgtoa@p& (0+255),b
  4701   001920                     l6541:
  4702                           
  4703                           ; BSR set to: 5
  4704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  4705   001920  C575  F580         	movff	efgtoa@p,efgtoa@m
  4706   001924  C576  F581         	movff	efgtoa@p+1,efgtoa@m+1
  4707   001928                     
  4708                           ; BSR set to: 5
  4709                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  4710   001928  4B80               	infsnz	efgtoa@m& (0+255),f,b
  4711   00192A  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  4712   00192C                     
  4713                           ; BSR set to: 5
  4714                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  4715   00192C  0E66               	movlw	102
  4716   00192E  197D               	xorwf	efgtoa@nmode& (0+255),w,b
  4717   001930  A4D8               	btfss	status,2,c
  4718   001932  EF9D  F00C         	goto	u6461
  4719   001936  EF9F  F00C         	goto	u6460
  4720   00193A                     u6461:
  4721   00193A  EFBF  F00C         	goto	l6555
  4722   00193E                     u6460:
  4723   00193E                     
  4724                           ; BSR set to: 5
  4725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  4726   00193E  BF83               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4727   001940  EFA6  F00C         	goto	u6470
  4728   001944  EFA4  F00C         	goto	u6471
  4729   001948                     u6471:
  4730   001948  EFB2  F00C         	goto	l6551
  4731   00194C                     u6470:
  4732   00194C                     
  4733                           ; BSR set to: 5
  4734                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  4735   00194C  0E00               	movlw	0
  4736   00194E  6F9B               	movwf	efgtoa@u& (0+255),b
  4737   001950  0E00               	movlw	0
  4738   001952  6F9C               	movwf	(efgtoa@u+1)& (0+255),b
  4739   001954  0E80               	movlw	128
  4740   001956  6F9D               	movwf	(efgtoa@u+2)& (0+255),b
  4741   001958  0E3F               	movlw	63
  4742   00195A  6F9E               	movwf	(efgtoa@u+3)& (0+255),b
  4743                           
  4744                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  4745   00195C  0E00               	movlw	0
  4746   00195E  6F83               	movwf	(efgtoa@e+1)& (0+255),b
  4747   001960  0E00               	movlw	0
  4748   001962  6F82               	movwf	efgtoa@e& (0+255),b
  4749   001964                     l6551:
  4750                           
  4751                           ; BSR set to: 5
  4752                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  4753   001964  0E67               	movlw	103
  4754   001966  197C               	xorwf	efgtoa@mode& (0+255),w,b
  4755   001968  B4D8               	btfsc	status,2,c
  4756   00196A  EFB9  F00C         	goto	u6481
  4757   00196E  EFBB  F00C         	goto	u6480
  4758   001972                     u6481:
  4759   001972  EFBF  F00C         	goto	l6555
  4760   001976                     u6480:
  4761   001976                     
  4762                           ; BSR set to: 5
  4763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  4764   001976  5182               	movf	efgtoa@e& (0+255),w,b
  4765   001978  2780               	addwf	efgtoa@m& (0+255),f,b
  4766   00197A  5183               	movf	(efgtoa@e+1)& (0+255),w,b
  4767   00197C  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4768   00197E                     l6555:
  4769                           
  4770                           ; BSR set to: 5
  4771                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  4772   00197E  0E00               	movlw	0
  4773   001980  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4774   001982  0E00               	movlw	0
  4775   001984  6F8A               	movwf	efgtoa@i& (0+255),b
  4776   001986                     
  4777                           ; BSR set to: 5
  4778                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  4779   001986  C595  F58C         	movff	efgtoa@g,efgtoa@h
  4780   00198A  C596  F58D         	movff	efgtoa@g+1,efgtoa@h+1
  4781   00198E  C597  F58E         	movff	efgtoa@g+2,efgtoa@h+2
  4782   001992  C598  F58F         	movff	efgtoa@g+3,efgtoa@h+3
  4783   001996                     
  4784                           ; BSR set to: 5
  4785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  4786   001996  C59B  F586         	movff	efgtoa@u,efgtoa@ou
  4787   00199A  C59C  F587         	movff	efgtoa@u+1,efgtoa@ou+1
  4788   00199E  C59D  F588         	movff	efgtoa@u+2,efgtoa@ou+2
  4789   0019A2  C59E  F589         	movff	efgtoa@u+3,efgtoa@ou+3
  4790                           
  4791                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4792   0019A6  EF50  F00D         	goto	l6569
  4793   0019AA                     l6561:
  4794                           
  4795                           ; BSR set to: 5
  4796                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  4797   0019AA  C58C  F503         	movff	efgtoa@h,___fldiv@b
  4798   0019AE  C58D  F504         	movff	efgtoa@h+1,___fldiv@b+1
  4799   0019B2  C58E  F505         	movff	efgtoa@h+2,___fldiv@b+2
  4800   0019B6  C58F  F506         	movff	efgtoa@h+3,___fldiv@b+3
  4801   0019BA  C59B  F507         	movff	efgtoa@u,___fldiv@a
  4802   0019BE  C59C  F508         	movff	efgtoa@u+1,___fldiv@a+1
  4803   0019C2  C59D  F509         	movff	efgtoa@u+2,___fldiv@a+2
  4804   0019C6  C59E  F50A         	movff	efgtoa@u+3,___fldiv@a+3
  4805   0019CA  EC04  F016         	call	___fldiv	;wreg free
  4806   0019CE  C503  F51C         	movff	?___fldiv,floorf@x
  4807   0019D2  C504  F51D         	movff	?___fldiv+1,floorf@x+1
  4808   0019D6  C505  F51E         	movff	?___fldiv+2,floorf@x+2
  4809   0019DA  C506  F51F         	movff	?___fldiv+3,floorf@x+3
  4810   0019DE  EC60  F01C         	call	_floorf	;wreg free
  4811   0019E2  C51C  F590         	movff	?_floorf,efgtoa@l
  4812   0019E6  C51D  F591         	movff	?_floorf+1,efgtoa@l+1
  4813   0019EA  C51E  F592         	movff	?_floorf+2,efgtoa@l+2
  4814   0019EE  C51F  F593         	movff	?_floorf+3,efgtoa@l+3
  4815                           
  4816                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  4817   0019F2  C590  F53D         	movff	efgtoa@l,___fltol@f1
  4818   0019F6  C591  F53E         	movff	efgtoa@l+1,___fltol@f1+1
  4819   0019FA  C592  F53F         	movff	efgtoa@l+2,___fltol@f1+2
  4820   0019FE  C593  F540         	movff	efgtoa@l+3,___fltol@f1+3
  4821   001A02  ECA6  F021         	call	___fltol	;wreg free
  4822   001A06  C53D  F57E         	movff	?___fltol,efgtoa@d
  4823   001A0A  C53E  F57F         	movff	?___fltol+1,efgtoa@d+1
  4824   001A0E                     
  4825                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  4826   001A0E  C58C  F535         	movff	efgtoa@h,___flsub@b
  4827   001A12  C58D  F536         	movff	efgtoa@h+1,___flsub@b+1
  4828   001A16  C58E  F537         	movff	efgtoa@h+2,___flsub@b+2
  4829   001A1A  C58F  F538         	movff	efgtoa@h+3,___flsub@b+3
  4830   001A1E  C590  F520         	movff	efgtoa@l,___flmul@a
  4831   001A22  C591  F521         	movff	efgtoa@l+1,___flmul@a+1
  4832   001A26  C592  F522         	movff	efgtoa@l+2,___flmul@a+2
  4833   001A2A  C593  F523         	movff	efgtoa@l+3,___flmul@a+3
  4834   001A2E  C59B  F51C         	movff	efgtoa@u,___flmul@b
  4835   001A32  C59C  F51D         	movff	efgtoa@u+1,___flmul@b+1
  4836   001A36  C59D  F51E         	movff	efgtoa@u+2,___flmul@b+2
  4837   001A3A  C59E  F51F         	movff	efgtoa@u+3,___flmul@b+3
  4838   001A3E  EC0C  F012         	call	___flmul	;wreg free
  4839   001A42  C51C  F539         	movff	?___flmul,___flsub@a
  4840   001A46  C51D  F53A         	movff	?___flmul+1,___flsub@a+1
  4841   001A4A  C51E  F53B         	movff	?___flmul+2,___flsub@a+2
  4842   001A4E  C51F  F53C         	movff	?___flmul+3,___flsub@a+3
  4843   001A52  ECA0  F026         	call	___flsub	;wreg free
  4844   001A56  C535  F58C         	movff	?___flsub,efgtoa@h
  4845   001A5A  C536  F58D         	movff	?___flsub+1,efgtoa@h+1
  4846   001A5E  C537  F58E         	movff	?___flsub+2,efgtoa@h+2
  4847   001A62  C538  F58F         	movff	?___flsub+3,efgtoa@h+3
  4848   001A66                     
  4849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  4850   001A66  C59B  F503         	movff	efgtoa@u,___fldiv@b
  4851   001A6A  C59C  F504         	movff	efgtoa@u+1,___fldiv@b+1
  4852   001A6E  C59D  F505         	movff	efgtoa@u+2,___fldiv@b+2
  4853   001A72  C59E  F506         	movff	efgtoa@u+3,___fldiv@b+3
  4854   001A76  0E00               	movlw	0
  4855   001A78  6E07               	movwf	___fldiv@a^(0+1280),c
  4856   001A7A  0E00               	movlw	0
  4857   001A7C  6E08               	movwf	(___fldiv@a+1)^(0+1280),c
  4858   001A7E  0E20               	movlw	32
  4859   001A80  6E09               	movwf	(___fldiv@a+2)^(0+1280),c
  4860   001A82  0E41               	movlw	65
  4861   001A84  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
  4862   001A86  EC04  F016         	call	___fldiv	;wreg free
  4863   001A8A  C503  F59B         	movff	?___fldiv,efgtoa@u
  4864   001A8E  C504  F59C         	movff	?___fldiv+1,efgtoa@u+1
  4865   001A92  C505  F59D         	movff	?___fldiv+2,efgtoa@u+2
  4866   001A96  C506  F59E         	movff	?___fldiv+3,efgtoa@u+3
  4867   001A9A                     
  4868                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  4869   001A9A  0105               	movlb	5	; () banked
  4870   001A9C  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4871   001A9E  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4872   001AA0                     l6569:
  4873                           
  4874                           ; BSR set to: 5
  4875                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4876   001AA0  5180               	movf	efgtoa@m& (0+255),w,b
  4877   001AA2  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4878   001AA4  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4879   001AA6  0A80               	xorlw	128
  4880   001AA8  6E59               	movwf	??_efgtoa^(0+1280),c
  4881   001AAA  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  4882   001AAC  0A80               	xorlw	128
  4883   001AAE  5859               	subwfb	??_efgtoa^(0+1280),w,c
  4884   001AB0  A0D8               	btfss	status,0,c
  4885   001AB2  EF5D  F00D         	goto	u6491
  4886   001AB6  EF5F  F00D         	goto	u6490
  4887   001ABA                     u6491:
  4888   001ABA  EFD5  F00C         	goto	l6561
  4889   001ABE                     u6490:
  4890   001ABE                     
  4891                           ; BSR set to: 5
  4892                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  4893   001ABE  C59B  F51C         	movff	efgtoa@u,___flmul@b
  4894   001AC2  C59C  F51D         	movff	efgtoa@u+1,___flmul@b+1
  4895   001AC6  C59D  F51E         	movff	efgtoa@u+2,___flmul@b+2
  4896   001ACA  C59E  F51F         	movff	efgtoa@u+3,___flmul@b+3
  4897   001ACE  0E00               	movlw	0
  4898   001AD0  6E20               	movwf	___flmul@a^(0+1280),c
  4899   001AD2  0E00               	movlw	0
  4900   001AD4  6E21               	movwf	(___flmul@a+1)^(0+1280),c
  4901   001AD6  0EA0               	movlw	160
  4902   001AD8  6E22               	movwf	(___flmul@a+2)^(0+1280),c
  4903   001ADA  0E40               	movlw	64
  4904   001ADC  6E23               	movwf	(___flmul@a+3)^(0+1280),c
  4905   001ADE  EC0C  F012         	call	___flmul	;wreg free
  4906   001AE2  C51C  F590         	movff	?___flmul,efgtoa@l
  4907   001AE6  C51D  F591         	movff	?___flmul+1,efgtoa@l+1
  4908   001AEA  C51E  F592         	movff	?___flmul+2,efgtoa@l+2
  4909   001AEE  C51F  F593         	movff	?___flmul+3,efgtoa@l+3
  4910   001AF2                     
  4911                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4912   001AF2  C58C  F560         	movff	efgtoa@h,___flge@ff1
  4913   001AF6  C58D  F561         	movff	efgtoa@h+1,___flge@ff1+1
  4914   001AFA  C58E  F562         	movff	efgtoa@h+2,___flge@ff1+2
  4915   001AFE  C58F  F563         	movff	efgtoa@h+3,___flge@ff1+3
  4916   001B02  C590  F564         	movff	efgtoa@l,___flge@ff2
  4917   001B06  C591  F565         	movff	efgtoa@l+1,___flge@ff2+1
  4918   001B0A  C592  F566         	movff	efgtoa@l+2,___flge@ff2+2
  4919   001B0E  C593  F567         	movff	efgtoa@l+3,___flge@ff2+3
  4920   001B12  EC23  F021         	call	___flge	;wreg free
  4921   001B16  0105               	movlb	5	; () banked
  4922   001B18  B0D8               	btfsc	status,0,c
  4923   001B1A  EF91  F00D         	goto	u6501
  4924   001B1E  EF93  F00D         	goto	u6500
  4925   001B22                     u6501:
  4926   001B22  EF9D  F00D         	goto	l6577
  4927   001B26                     u6500:
  4928   001B26                     
  4929                           ; BSR set to: 5
  4930                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4931   001B26  0E00               	movlw	0
  4932   001B28  6F90               	movwf	efgtoa@l& (0+255),b
  4933   001B2A  0E00               	movlw	0
  4934   001B2C  6F91               	movwf	(efgtoa@l+1)& (0+255),b
  4935   001B2E  0E00               	movlw	0
  4936   001B30  6F92               	movwf	(efgtoa@l+2)& (0+255),b
  4937   001B32  0E00               	movlw	0
  4938   001B34  6F93               	movwf	(efgtoa@l+3)& (0+255),b
  4939                           
  4940                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  4941   001B36  EFC6  F00D         	goto	l6583
  4942   001B3A                     l6577:
  4943                           
  4944                           ; BSR set to: 5
  4945                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4946   001B3A  C58C  F503         	movff	efgtoa@h,___fleq@ff1
  4947   001B3E  C58D  F504         	movff	efgtoa@h+1,___fleq@ff1+1
  4948   001B42  C58E  F505         	movff	efgtoa@h+2,___fleq@ff1+2
  4949   001B46  C58F  F506         	movff	efgtoa@h+3,___fleq@ff1+3
  4950   001B4A  C590  F507         	movff	efgtoa@l,___fleq@ff2
  4951   001B4E  C591  F508         	movff	efgtoa@l+1,___fleq@ff2+1
  4952   001B52  C592  F509         	movff	efgtoa@l+2,___fleq@ff2+2
  4953   001B56  C593  F50A         	movff	efgtoa@l+3,___fleq@ff2+3
  4954   001B5A  ECE4  F023         	call	___fleq	;wreg free
  4955   001B5E  A0D8               	btfss	status,0,c
  4956   001B60  EFB4  F00D         	goto	u6511
  4957   001B64  EFB6  F00D         	goto	u6510
  4958   001B68                     u6511:
  4959   001B68  EFC6  F00D         	goto	l6583
  4960   001B6C                     u6510:
  4961   001B6C  0105               	movlb	5	; () banked
  4962   001B6E  B17E               	btfsc	efgtoa@d& (0+255),0,b
  4963   001B70  EFBC  F00D         	goto	u6521
  4964   001B74  EFBE  F00D         	goto	u6520
  4965   001B78                     u6521:
  4966   001B78  EFC6  F00D         	goto	l6583
  4967   001B7C                     u6520:
  4968   001B7C                     
  4969                           ; BSR set to: 5
  4970                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4971   001B7C  0E00               	movlw	0
  4972   001B7E  6F90               	movwf	efgtoa@l& (0+255),b
  4973   001B80  0E00               	movlw	0
  4974   001B82  6F91               	movwf	(efgtoa@l+1)& (0+255),b
  4975   001B84  0E00               	movlw	0
  4976   001B86  6F92               	movwf	(efgtoa@l+2)& (0+255),b
  4977   001B88  0E00               	movlw	0
  4978   001B8A  6F93               	movwf	(efgtoa@l+3)& (0+255),b
  4979   001B8C                     l6583:
  4980                           
  4981                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4982   001B8C  C595  F503         	movff	efgtoa@g,___fladd@b
  4983   001B90  C596  F504         	movff	efgtoa@g+1,___fladd@b+1
  4984   001B94  C597  F505         	movff	efgtoa@g+2,___fladd@b+2
  4985   001B98  C598  F506         	movff	efgtoa@g+3,___fladd@b+3
  4986   001B9C  C590  F507         	movff	efgtoa@l,___fladd@a
  4987   001BA0  C591  F508         	movff	efgtoa@l+1,___fladd@a+1
  4988   001BA4  C592  F509         	movff	efgtoa@l+2,___fladd@a+2
  4989   001BA8  C593  F50A         	movff	efgtoa@l+3,___fladd@a+3
  4990   001BAC  ECAC  F00F         	call	___fladd	;wreg free
  4991   001BB0  C503  F58C         	movff	?___fladd,efgtoa@h
  4992   001BB4  C504  F58D         	movff	?___fladd+1,efgtoa@h+1
  4993   001BB8  C505  F58E         	movff	?___fladd+2,efgtoa@h+2
  4994   001BBC  C506  F58F         	movff	?___fladd+3,efgtoa@h+3
  4995   001BC0                     
  4996                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4997   001BC0  C58C  F560         	movff	efgtoa@h,___flge@ff1
  4998   001BC4  C58D  F561         	movff	efgtoa@h+1,___flge@ff1+1
  4999   001BC8  C58E  F562         	movff	efgtoa@h+2,___flge@ff1+2
  5000   001BCC  C58F  F563         	movff	efgtoa@h+3,___flge@ff1+3
  5001   001BD0  0E00               	movlw	0
  5002   001BD2  6E20               	movwf	___flmul@a^(0+1280),c
  5003   001BD4  0E00               	movlw	0
  5004   001BD6  6E21               	movwf	(___flmul@a+1)^(0+1280),c
  5005   001BD8  0E20               	movlw	32
  5006   001BDA  6E22               	movwf	(___flmul@a+2)^(0+1280),c
  5007   001BDC  0E41               	movlw	65
  5008   001BDE  6E23               	movwf	(___flmul@a+3)^(0+1280),c
  5009   001BE0  C586  F51C         	movff	efgtoa@ou,___flmul@b
  5010   001BE4  C587  F51D         	movff	efgtoa@ou+1,___flmul@b+1
  5011   001BE8  C588  F51E         	movff	efgtoa@ou+2,___flmul@b+2
  5012   001BEC  C589  F51F         	movff	efgtoa@ou+3,___flmul@b+3
  5013   001BF0  EC0C  F012         	call	___flmul	;wreg free
  5014   001BF4  C51C  F564         	movff	?___flmul,___flge@ff2
  5015   001BF8  C51D  F565         	movff	?___flmul+1,___flge@ff2+1
  5016   001BFC  C51E  F566         	movff	?___flmul+2,___flge@ff2+2
  5017   001C00  C51F  F567         	movff	?___flmul+3,___flge@ff2+3
  5018   001C04  EC23  F021         	call	___flge	;wreg free
  5019   001C08  0105               	movlb	5	; () banked
  5020   001C0A  A0D8               	btfss	status,0,c
  5021   001C0C  EF0A  F00E         	goto	u6531
  5022   001C10  EF0C  F00E         	goto	u6530
  5023   001C14                     u6531:
  5024   001C14  EF34  F00E         	goto	l6595
  5025   001C18                     u6530:
  5026   001C18                     
  5027                           ; BSR set to: 5
  5028                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  5029   001C18  4B82               	infsnz	efgtoa@e& (0+255),f,b
  5030   001C1A  2B83               	incf	(efgtoa@e+1)& (0+255),f,b
  5031   001C1C                     
  5032                           ; BSR set to: 5
  5033                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  5034   001C1C  C586  F51C         	movff	efgtoa@ou,___flmul@b
  5035   001C20  C587  F51D         	movff	efgtoa@ou+1,___flmul@b+1
  5036   001C24  C588  F51E         	movff	efgtoa@ou+2,___flmul@b+2
  5037   001C28  C589  F51F         	movff	efgtoa@ou+3,___flmul@b+3
  5038   001C2C  0E00               	movlw	0
  5039   001C2E  6E20               	movwf	___flmul@a^(0+1280),c
  5040   001C30  0E00               	movlw	0
  5041   001C32  6E21               	movwf	(___flmul@a+1)^(0+1280),c
  5042   001C34  0E20               	movlw	32
  5043   001C36  6E22               	movwf	(___flmul@a+2)^(0+1280),c
  5044   001C38  0E41               	movlw	65
  5045   001C3A  6E23               	movwf	(___flmul@a+3)^(0+1280),c
  5046   001C3C  EC0C  F012         	call	___flmul	;wreg free
  5047   001C40  C51C  F586         	movff	?___flmul,efgtoa@ou
  5048   001C44  C51D  F587         	movff	?___flmul+1,efgtoa@ou+1
  5049   001C48  C51E  F588         	movff	?___flmul+2,efgtoa@ou+2
  5050   001C4C  C51F  F589         	movff	?___flmul+3,efgtoa@ou+3
  5051   001C50                     
  5052                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  5053   001C50  0E66               	movlw	102
  5054   001C52  0105               	movlb	5	; () banked
  5055   001C54  197D               	xorwf	efgtoa@nmode& (0+255),w,b
  5056   001C56  A4D8               	btfss	status,2,c
  5057   001C58  EF30  F00E         	goto	u6541
  5058   001C5C  EF32  F00E         	goto	u6540
  5059   001C60                     u6541:
  5060   001C60  EF34  F00E         	goto	l6595
  5061   001C64                     u6540:
  5062   001C64                     
  5063                           ; BSR set to: 5
  5064                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  5065   001C64  4B80               	infsnz	efgtoa@m& (0+255),f,b
  5066   001C66  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  5067   001C68                     l6595:
  5068                           
  5069                           ; BSR set to: 5
  5070                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  5071   001C68  C586  F59B         	movff	efgtoa@ou,efgtoa@u
  5072   001C6C  C587  F59C         	movff	efgtoa@ou+1,efgtoa@u+1
  5073   001C70  C588  F59D         	movff	efgtoa@ou+2,efgtoa@u+2
  5074   001C74  C589  F59E         	movff	efgtoa@ou+3,efgtoa@u+3
  5075   001C78                     
  5076                           ; BSR set to: 5
  5077                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  5078   001C78  C582  F573         	movff	efgtoa@e,efgtoa@ne
  5079   001C7C  C583  F574         	movff	efgtoa@e+1,efgtoa@ne+1
  5080   001C80                     
  5081                           ; BSR set to: 5
  5082                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  5083   001C80  0E00               	movlw	0
  5084   001C82  6F7B               	movwf	efgtoa@pp& (0+255),b
  5085   001C84                     
  5086                           ; BSR set to: 5
  5087                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  5088   001C84  0E00               	movlw	0
  5089   001C86  6F78               	movwf	(efgtoa@t+1)& (0+255),b
  5090   001C88  0E00               	movlw	0
  5091   001C8A  6F77               	movwf	efgtoa@t& (0+255),b
  5092   001C8C                     
  5093                           ; BSR set to: 5
  5094                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  5095   001C8C  0E00               	movlw	0
  5096   001C8E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5097   001C90  0E00               	movlw	0
  5098   001C92  6F8A               	movwf	efgtoa@i& (0+255),b
  5099                           
  5100                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5101   001C94  EF31  F00F         	goto	l6645
  5102   001C98                     l6605:
  5103                           
  5104                           ; BSR set to: 5
  5105                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  5106   001C98  C58C  F503         	movff	efgtoa@h,___fldiv@b
  5107   001C9C  C58D  F504         	movff	efgtoa@h+1,___fldiv@b+1
  5108   001CA0  C58E  F505         	movff	efgtoa@h+2,___fldiv@b+2
  5109   001CA4  C58F  F506         	movff	efgtoa@h+3,___fldiv@b+3
  5110   001CA8  C59B  F507         	movff	efgtoa@u,___fldiv@a
  5111   001CAC  C59C  F508         	movff	efgtoa@u+1,___fldiv@a+1
  5112   001CB0  C59D  F509         	movff	efgtoa@u+2,___fldiv@a+2
  5113   001CB4  C59E  F50A         	movff	efgtoa@u+3,___fldiv@a+3
  5114   001CB8  EC04  F016         	call	___fldiv	;wreg free
  5115   001CBC  C503  F51C         	movff	?___fldiv,floorf@x
  5116   001CC0  C504  F51D         	movff	?___fldiv+1,floorf@x+1
  5117   001CC4  C505  F51E         	movff	?___fldiv+2,floorf@x+2
  5118   001CC8  C506  F51F         	movff	?___fldiv+3,floorf@x+3
  5119   001CCC  EC60  F01C         	call	_floorf	;wreg free
  5120   001CD0  C51C  F590         	movff	?_floorf,efgtoa@l
  5121   001CD4  C51D  F591         	movff	?_floorf+1,efgtoa@l+1
  5122   001CD8  C51E  F592         	movff	?_floorf+2,efgtoa@l+2
  5123   001CDC  C51F  F593         	movff	?_floorf+3,efgtoa@l+3
  5124                           
  5125                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  5126   001CE0  C590  F53D         	movff	efgtoa@l,___fltol@f1
  5127   001CE4  C591  F53E         	movff	efgtoa@l+1,___fltol@f1+1
  5128   001CE8  C592  F53F         	movff	efgtoa@l+2,___fltol@f1+2
  5129   001CEC  C593  F540         	movff	efgtoa@l+3,___fltol@f1+3
  5130   001CF0  ECA6  F021         	call	___fltol	;wreg free
  5131   001CF4  BE3E               	btfsc	(?___fltol+1)^(0+1280),7,c
  5132   001CF6  EF88  F00E         	goto	u6550
  5133   001CFA  503E               	movf	(?___fltol+1)^(0+1280),w,c
  5134   001CFC  E107               	bnz	u6551
  5135   001CFE  0E0A               	movlw	10
  5136   001D00  5C3D               	subwf	?___fltol^(0+1280),w,c
  5137   001D02  B0D8               	btfsc	status,0,c
  5138   001D04  EF86  F00E         	goto	u6551
  5139   001D08  EF88  F00E         	goto	u6550
  5140   001D0C                     u6551:
  5141   001D0C  EF98  F00E         	goto	l6609
  5142   001D10                     u6550:
  5143   001D10  C590  F53D         	movff	efgtoa@l,___fltol@f1
  5144   001D14  C591  F53E         	movff	efgtoa@l+1,___fltol@f1+1
  5145   001D18  C592  F53F         	movff	efgtoa@l+2,___fltol@f1+2
  5146   001D1C  C593  F540         	movff	efgtoa@l+3,___fltol@f1+3
  5147   001D20  ECA6  F021         	call	___fltol	;wreg free
  5148   001D24  C53D  F57E         	movff	?___fltol,efgtoa@d
  5149   001D28  C53E  F57F         	movff	?___fltol+1,efgtoa@d+1
  5150   001D2C  EF9D  F00E         	goto	l1953
  5151   001D30                     l6609:
  5152   001D30  0E00               	movlw	0
  5153   001D32  0105               	movlb	5	; () banked
  5154   001D34  6F7F               	movwf	(efgtoa@d+1)& (0+255),b
  5155   001D36  0E09               	movlw	9
  5156   001D38  6F7E               	movwf	efgtoa@d& (0+255),b
  5157   001D3A                     l1953:
  5158                           
  5159                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  5160   001D3A  0105               	movlb	5	; () banked
  5161   001D3C  517B               	movf	efgtoa@pp& (0+255),w,b
  5162   001D3E  A4D8               	btfss	status,2,c
  5163   001D40  EFA4  F00E         	goto	u6561
  5164   001D44  EFA6  F00E         	goto	u6560
  5165   001D48                     u6561:
  5166   001D48  EFCE  F00E         	goto	l6629
  5167   001D4C                     u6560:
  5168   001D4C                     
  5169                           ; BSR set to: 5
  5170   001D4C  BF74               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5171   001D4E  EFAD  F00E         	goto	u6570
  5172   001D52  EFAB  F00E         	goto	u6571
  5173   001D56                     u6571:
  5174   001D56  EFCE  F00E         	goto	l6629
  5175   001D5A                     u6570:
  5176   001D5A                     
  5177                           ; BSR set to: 5
  5178                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  5179   001D5A  0E12               	movlw	low _dbuf
  5180   001D5C  2599               	addwf	efgtoa@n& (0+255),w,b
  5181   001D5E  6ED9               	movwf	fsr2l,c
  5182   001D60  0E06               	movlw	high _dbuf
  5183   001D62  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5184   001D64  6EDA               	movwf	fsr2h,c
  5185   001D66  0E2E               	movlw	46
  5186   001D68  6EDF               	movwf	indf2,c
  5187   001D6A                     
  5188                           ; BSR set to: 5
  5189   001D6A  4B99               	infsnz	efgtoa@n& (0+255),f,b
  5190   001D6C  2B9A               	incf	(efgtoa@n+1)& (0+255),f,b
  5191   001D6E                     
  5192                           ; BSR set to: 5
  5193                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  5194   001D6E  0784               	decf	efgtoa@w& (0+255),f,b
  5195   001D70  A0D8               	btfss	status,0,c
  5196   001D72  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  5197   001D74                     
  5198                           ; BSR set to: 5
  5199                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  5200   001D74  0E01               	movlw	1
  5201   001D76  6F7B               	movwf	efgtoa@pp& (0+255),b
  5202   001D78  EFCE  F00E         	goto	l6629
  5203   001D7C                     l6621:
  5204                           
  5205                           ; BSR set to: 5
  5206                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  5207   001D7C  0E12               	movlw	low _dbuf
  5208   001D7E  2599               	addwf	efgtoa@n& (0+255),w,b
  5209   001D80  6ED9               	movwf	fsr2l,c
  5210   001D82  0E06               	movlw	high _dbuf
  5211   001D84  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5212   001D86  6EDA               	movwf	fsr2h,c
  5213   001D88  0E30               	movlw	48
  5214   001D8A  6EDF               	movwf	indf2,c
  5215   001D8C                     
  5216                           ; BSR set to: 5
  5217   001D8C  4B99               	infsnz	efgtoa@n& (0+255),f,b
  5218   001D8E  2B9A               	incf	(efgtoa@n+1)& (0+255),f,b
  5219   001D90                     
  5220                           ; BSR set to: 5
  5221                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  5222   001D90  0784               	decf	efgtoa@w& (0+255),f,b
  5223   001D92  A0D8               	btfss	status,0,c
  5224   001D94  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  5225   001D96                     
  5226                           ; BSR set to: 5
  5227                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  5228   001D96  0777               	decf	efgtoa@t& (0+255),f,b
  5229   001D98  A0D8               	btfss	status,0,c
  5230   001D9A  0778               	decf	(efgtoa@t+1)& (0+255),f,b
  5231   001D9C                     l6629:
  5232                           
  5233                           ; BSR set to: 5
  5234                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  5235   001D9C  5177               	movf	efgtoa@t& (0+255),w,b
  5236   001D9E  1178               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5237   001DA0  A4D8               	btfss	status,2,c
  5238   001DA2  EFD5  F00E         	goto	u6581
  5239   001DA6  EFD7  F00E         	goto	u6580
  5240   001DAA                     u6581:
  5241   001DAA  EFBE  F00E         	goto	l6621
  5242   001DAE                     u6580:
  5243   001DAE                     
  5244                           ; BSR set to: 5
  5245                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  5246   001DAE  0E12               	movlw	low _dbuf
  5247   001DB0  2599               	addwf	efgtoa@n& (0+255),w,b
  5248   001DB2  6ED9               	movwf	fsr2l,c
  5249   001DB4  0E06               	movlw	high _dbuf
  5250   001DB6  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5251   001DB8  6EDA               	movwf	fsr2h,c
  5252   001DBA  517E               	movf	efgtoa@d& (0+255),w,b
  5253   001DBC  0F30               	addlw	48
  5254   001DBE  6EDF               	movwf	indf2,c
  5255   001DC0                     
  5256                           ; BSR set to: 5
  5257   001DC0  4B99               	infsnz	efgtoa@n& (0+255),f,b
  5258   001DC2  2B9A               	incf	(efgtoa@n+1)& (0+255),f,b
  5259   001DC4                     
  5260                           ; BSR set to: 5
  5261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  5262   001DC4  0784               	decf	efgtoa@w& (0+255),f,b
  5263   001DC6  A0D8               	btfss	status,0,c
  5264   001DC8  0785               	decf	(efgtoa@w+1)& (0+255),f,b
  5265   001DCA                     
  5266                           ; BSR set to: 5
  5267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  5268   001DCA  C58C  F535         	movff	efgtoa@h,___flsub@b
  5269   001DCE  C58D  F536         	movff	efgtoa@h+1,___flsub@b+1
  5270   001DD2  C58E  F537         	movff	efgtoa@h+2,___flsub@b+2
  5271   001DD6  C58F  F538         	movff	efgtoa@h+3,___flsub@b+3
  5272   001DDA  C590  F520         	movff	efgtoa@l,___flmul@a
  5273   001DDE  C591  F521         	movff	efgtoa@l+1,___flmul@a+1
  5274   001DE2  C592  F522         	movff	efgtoa@l+2,___flmul@a+2
  5275   001DE6  C593  F523         	movff	efgtoa@l+3,___flmul@a+3
  5276   001DEA  C59B  F51C         	movff	efgtoa@u,___flmul@b
  5277   001DEE  C59C  F51D         	movff	efgtoa@u+1,___flmul@b+1
  5278   001DF2  C59D  F51E         	movff	efgtoa@u+2,___flmul@b+2
  5279   001DF6  C59E  F51F         	movff	efgtoa@u+3,___flmul@b+3
  5280   001DFA  EC0C  F012         	call	___flmul	;wreg free
  5281   001DFE  C51C  F539         	movff	?___flmul,___flsub@a
  5282   001E02  C51D  F53A         	movff	?___flmul+1,___flsub@a+1
  5283   001E06  C51E  F53B         	movff	?___flmul+2,___flsub@a+2
  5284   001E0A  C51F  F53C         	movff	?___flmul+3,___flsub@a+3
  5285   001E0E  ECA0  F026         	call	___flsub	;wreg free
  5286   001E12  C535  F58C         	movff	?___flsub,efgtoa@h
  5287   001E16  C536  F58D         	movff	?___flsub+1,efgtoa@h+1
  5288   001E1A  C537  F58E         	movff	?___flsub+2,efgtoa@h+2
  5289   001E1E  C538  F58F         	movff	?___flsub+3,efgtoa@h+3
  5290   001E22                     
  5291                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  5292   001E22  C59B  F503         	movff	efgtoa@u,___fldiv@b
  5293   001E26  C59C  F504         	movff	efgtoa@u+1,___fldiv@b+1
  5294   001E2A  C59D  F505         	movff	efgtoa@u+2,___fldiv@b+2
  5295   001E2E  C59E  F506         	movff	efgtoa@u+3,___fldiv@b+3
  5296   001E32  0E00               	movlw	0
  5297   001E34  6E07               	movwf	___fldiv@a^(0+1280),c
  5298   001E36  0E00               	movlw	0
  5299   001E38  6E08               	movwf	(___fldiv@a+1)^(0+1280),c
  5300   001E3A  0E20               	movlw	32
  5301   001E3C  6E09               	movwf	(___fldiv@a+2)^(0+1280),c
  5302   001E3E  0E41               	movlw	65
  5303   001E40  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
  5304   001E42  EC04  F016         	call	___fldiv	;wreg free
  5305   001E46  C503  F59B         	movff	?___fldiv,efgtoa@u
  5306   001E4A  C504  F59C         	movff	?___fldiv+1,efgtoa@u+1
  5307   001E4E  C505  F59D         	movff	?___fldiv+2,efgtoa@u+2
  5308   001E52  C506  F59E         	movff	?___fldiv+3,efgtoa@u+3
  5309   001E56                     
  5310                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  5311   001E56  0105               	movlb	5	; () banked
  5312   001E58  0773               	decf	efgtoa@ne& (0+255),f,b
  5313   001E5A  A0D8               	btfss	status,0,c
  5314   001E5C  0774               	decf	(efgtoa@ne+1)& (0+255),f,b
  5315   001E5E                     
  5316                           ; BSR set to: 5
  5317                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  5318   001E5E  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5319   001E60  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5320   001E62                     l6645:
  5321                           
  5322                           ; BSR set to: 5
  5323                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5324   001E62  5180               	movf	efgtoa@m& (0+255),w,b
  5325   001E64  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5326   001E66  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5327   001E68  0A80               	xorlw	128
  5328   001E6A  6E59               	movwf	??_efgtoa^(0+1280),c
  5329   001E6C  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  5330   001E6E  0A80               	xorlw	128
  5331   001E70  5859               	subwfb	??_efgtoa^(0+1280),w,c
  5332   001E72  B0D8               	btfsc	status,0,c
  5333   001E74  EF3E  F00F         	goto	u6591
  5334   001E78  EF40  F00F         	goto	u6590
  5335   001E7C                     u6591:
  5336   001E7C  EF4E  F00F         	goto	l6649
  5337   001E80                     u6590:
  5338   001E80                     
  5339                           ; BSR set to: 5
  5340   001E80  BF9A               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5341   001E82  EF4C  F00F         	goto	u6601
  5342   001E86  519A               	movf	(efgtoa@n+1)& (0+255),w,b
  5343   001E88  E109               	bnz	u6600
  5344   001E8A  0E4B               	movlw	75
  5345   001E8C  5D99               	subwf	efgtoa@n& (0+255),w,b
  5346   001E8E  A0D8               	btfss	status,0,c
  5347   001E90  EF4C  F00F         	goto	u6601
  5348   001E94  EF4E  F00F         	goto	u6600
  5349   001E98                     u6601:
  5350   001E98  EF4C  F00E         	goto	l6605
  5351   001E9C                     u6600:
  5352   001E9C                     l6649:
  5353                           
  5354                           ; BSR set to: 5
  5355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  5356   001E9C  0E00               	movlw	0
  5357   001E9E  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5358   001EA0  0E4F               	movlw	79
  5359   001EA2  6F8A               	movwf	efgtoa@i& (0+255),b
  5360   001EA4                     
  5361                           ; BSR set to: 5
  5362                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  5363   001EA4  0E12               	movlw	low _dbuf
  5364   001EA6  258A               	addwf	efgtoa@i& (0+255),w,b
  5365   001EA8  6ED9               	movwf	fsr2l,c
  5366   001EAA  0E06               	movlw	high _dbuf
  5367   001EAC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5368   001EAE  6EDA               	movwf	fsr2h,c
  5369   001EB0  6ADF               	clrf	indf2,c
  5370   001EB2                     
  5371                           ; BSR set to: 5
  5372                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5373   001EB2  0E12               	movlw	low _dbuf
  5374   001EB4  6E59               	movwf	??_efgtoa^(0+1280),c
  5375   001EB6  0E06               	movlw	high _dbuf
  5376   001EB8  6E5A               	movwf	(??_efgtoa+1)^(0+1280),c
  5377   001EBA  5199               	movf	efgtoa@n& (0+255),w,b
  5378   001EBC  5E59               	subwf	??_efgtoa^(0+1280),f,c
  5379   001EBE  519A               	movf	(efgtoa@n+1)& (0+255),w,b
  5380   001EC0  5A5A               	subwfb	(??_efgtoa+1)^(0+1280),f,c
  5381   001EC2  518A               	movf	efgtoa@i& (0+255),w,b
  5382   001EC4  2459               	addwf	??_efgtoa^(0+1280),w,c
  5383   001EC6  6E03               	movwf	memcpy@d1^(0+1280),c
  5384   001EC8  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5385   001ECA  205A               	addwfc	(??_efgtoa+1)^(0+1280),w,c
  5386   001ECC  6E04               	movwf	(memcpy@d1+1)^(0+1280),c
  5387   001ECE  0E12               	movlw	low _dbuf
  5388   001ED0  6E05               	movwf	memcpy@s1^(0+1280),c
  5389   001ED2  0E06               	movlw	high _dbuf
  5390   001ED4  6E06               	movwf	(memcpy@s1+1)^(0+1280),c
  5391   001ED6  C599  F507         	movff	efgtoa@n,memcpy@n
  5392   001EDA  C59A  F508         	movff	efgtoa@n+1,memcpy@n+1
  5393   001EDE  EC78  F026         	call	_memcpy	;wreg free
  5394   001EE2                     
  5395                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  5396   001EE2  0105               	movlb	5	; () banked
  5397   001EE4  5199               	movf	efgtoa@n& (0+255),w,b
  5398   001EE6  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5399   001EE8  6F99               	movwf	efgtoa@n& (0+255),b
  5400   001EEA  519A               	movf	(efgtoa@n+1)& (0+255),w,b
  5401   001EEC  598B               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5402   001EEE  6F9A               	movwf	(efgtoa@n+1)& (0+255),b
  5403   001EF0                     
  5404                           ; BSR set to: 5
  5405                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  5406   001EF0  5194               	movf	efgtoa@sign& (0+255),w,b
  5407   001EF2  A4D8               	btfss	status,2,c
  5408   001EF4  EF7E  F00F         	goto	u6611
  5409   001EF8  EF81  F00F         	goto	u6610
  5410   001EFC                     u6611:
  5411   001EFC  0E01               	movlw	1
  5412   001EFE  EF82  F00F         	goto	u6620
  5413   001F02                     u6610:
  5414   001F02  0E00               	movlw	0
  5415   001F04                     u6620:
  5416   001F04  6F8A               	movwf	efgtoa@i& (0+255),b
  5417   001F06  6B8B               	clrf	(efgtoa@i+1)& (0+255),b
  5418   001F08                     
  5419                           ; BSR set to: 5
  5420                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  5421   001F08  5194               	movf	efgtoa@sign& (0+255),w,b
  5422   001F0A  B4D8               	btfsc	status,2,c
  5423   001F0C  EF8A  F00F         	goto	u6631
  5424   001F10  EF8C  F00F         	goto	u6630
  5425   001F14                     u6631:
  5426   001F14  EF97  F00F         	goto	l6663
  5427   001F18                     u6630:
  5428   001F18                     
  5429                           ; BSR set to: 5
  5430                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  5431   001F18  0799               	decf	efgtoa@n& (0+255),f,b
  5432   001F1A  A0D8               	btfss	status,0,c
  5433   001F1C  079A               	decf	(efgtoa@n+1)& (0+255),f,b
  5434   001F1E  0E12               	movlw	low _dbuf
  5435   001F20  2599               	addwf	efgtoa@n& (0+255),w,b
  5436   001F22  6ED9               	movwf	fsr2l,c
  5437   001F24  0E06               	movlw	high _dbuf
  5438   001F26  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5439   001F28  6EDA               	movwf	fsr2h,c
  5440   001F2A  C594  F4DF         	movff	efgtoa@sign,indf2
  5441   001F2E                     l6663:
  5442                           
  5443                           ; BSR set to: 5
  5444                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  5445   001F2E  518A               	movf	efgtoa@i& (0+255),w,b
  5446   001F30  5F84               	subwf	efgtoa@w& (0+255),f,b
  5447   001F32  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5448   001F34  5B85               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5449   001F36                     
  5450                           ; BSR set to: 5
  5451                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5452   001F36  C56C  F515         	movff	efgtoa@fp,pad@fp
  5453   001F3A  C56D  F516         	movff	efgtoa@fp+1,pad@fp+1
  5454   001F3E  0E12               	movlw	low _dbuf
  5455   001F40  2599               	addwf	efgtoa@n& (0+255),w,b
  5456   001F42  6E17               	movwf	pad@buf^(0+1280),c
  5457   001F44  0E06               	movlw	high _dbuf
  5458   001F46  219A               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5459   001F48  6E18               	movwf	(pad@buf+1)^(0+1280),c
  5460   001F4A  C584  F519         	movff	efgtoa@w,pad@p
  5461   001F4E  C585  F51A         	movff	efgtoa@w+1,pad@p+1
  5462   001F52  EC4C  F025         	call	_pad	;wreg free
  5463   001F56                     l1920:
  5464   001F56  0012               	return		;funcret
  5465   001F58                     __end_of_efgtoa:
  5466                           	callstack 0
  5467                           
  5468 ;; *************** function _strcpy *****************
  5469 ;; Defined at:
  5470 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  dest            2    2[COMRAM] PTR unsigned char 
  5473 ;;		 -> dbuf(80), 
  5474 ;;  src             1    4[COMRAM] PTR const unsigned char 
  5475 ;;		 -> STR_11(4), STR_8(4), 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  d               2    6[COMRAM] PTR unsigned char 
  5478 ;;		 -> dbuf(80), 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  2    2[COMRAM] PTR unsigned char 
  5481 ;; Registers used:
  5482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5488 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;Total ram usage:        6 bytes
  5493 ;; Hardware stack levels used: 1
  5494 ;; Hardware stack levels required when called: 5
  5495 ;; This function calls:
  5496 ;;		Nothing
  5497 ;; This function is called by:
  5498 ;;		_efgtoa
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           	psect	text17
  5503   004ECE                     __ptext17:
  5504                           	callstack 0
  5505   004ECE                     _strcpy:
  5506                           	callstack 115
  5507   004ECE  C503  F507         	movff	strcpy@dest,strcpy@d
  5508   004ED2  C504  F508         	movff	strcpy@dest+1,strcpy@d+1
  5509   004ED6                     l5007:
  5510   004ED6  2A05               	incf	strcpy@src^(0+1280),f,c
  5511   004ED8  0405               	decf	strcpy@src^(0+1280),w,c
  5512   004EDA  6E06               	movwf	??_strcpy^(0+1280),c
  5513   004EDC  C506  F4F6         	movff	??_strcpy,tblptrl
  5514   004EE0                     	if	1	;There is more than 1 active tblptr byte
  5515   004EE0  0E15               	movlw	high __smallconst
  5516   004EE2  6EF7               	movwf	tblptrh,c
  5517   004EE4                     	endif
  5518   004EE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5519   004EE4  6AF8               	clrf	tblptru,c
  5520   004EE6                     	endif
  5521   004EE6                     	if	0	;tblptru may be non-zero
  5522   004EE6                     	endif
  5523   004EE6  C507  F4D9         	movff	strcpy@d,fsr2l
  5524   004EEA  C508  F4DA         	movff	strcpy@d+1,fsr2h
  5525   004EEE  4A07               	infsnz	strcpy@d^(0+1280),f,c
  5526   004EF0  2A08               	incf	(strcpy@d+1)^(0+1280),f,c
  5527   004EF2  0008               	tblrd		*
  5528   004EF4  C4F5 F4DF          	movff	tablat,indf2
  5529   004EF8  50DF               	movf	indf2,w,c
  5530   004EFA  A4D8               	btfss	status,2,c
  5531   004EFC  EF82  F027         	goto	u4401
  5532   004F00  EF84  F027         	goto	u4400
  5533   004F04                     u4401:
  5534   004F04  EF6B  F027         	goto	l5007
  5535   004F08                     u4400:
  5536   004F08  0012               	return		;funcret
  5537   004F0A                     __end_of_strcpy:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _memcpy *****************
  5541 ;; Defined at:
  5542 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  d1              2    2[COMRAM] PTR void 
  5545 ;;		 -> dbuf(80), 
  5546 ;;  s1              2    4[COMRAM] PTR const void 
  5547 ;;		 -> dbuf(80), 
  5548 ;;  n               2    6[COMRAM] unsigned int 
  5549 ;; Auto vars:     Size  Location     Type
  5550 ;;  s               2   10[COMRAM] PTR const unsigned char 
  5551 ;;		 -> dbuf(80), 
  5552 ;;  d               2    8[COMRAM] PTR unsigned char 
  5553 ;;		 -> dbuf(80), 
  5554 ;;  tmp             1   12[COMRAM] unsigned char 
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  2    2[COMRAM] PTR void 
  5557 ;; Registers used:
  5558 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5564 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;Total ram usage:       11 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; Hardware stack levels required when called: 5
  5571 ;; This function calls:
  5572 ;;		Nothing
  5573 ;; This function is called by:
  5574 ;;		_efgtoa
  5575 ;; This function uses a non-reentrant model
  5576 ;;
  5577                           
  5578                           	psect	text18
  5579   004CF0                     __ptext18:
  5580                           	callstack 0
  5581   004CF0                     _memcpy:
  5582                           	callstack 115
  5583   004CF0  C505  F50B         	movff	memcpy@s1,memcpy@s
  5584   004CF4  C506  F50C         	movff	memcpy@s1+1,memcpy@s+1
  5585   004CF8  C503  F509         	movff	memcpy@d1,memcpy@d
  5586   004CFC  C504  F50A         	movff	memcpy@d1+1,memcpy@d+1
  5587   004D00  EF92  F026         	goto	l5055
  5588   004D04                     l5047:
  5589   004D04  C50B  F4D9         	movff	memcpy@s,fsr2l
  5590   004D08  C50C  F4DA         	movff	memcpy@s+1,fsr2h
  5591   004D0C  50DF               	movf	indf2,w,c
  5592   004D0E  6E0D               	movwf	memcpy@tmp^(0+1280),c
  5593   004D10  4A0B               	infsnz	memcpy@s^(0+1280),f,c
  5594   004D12  2A0C               	incf	(memcpy@s+1)^(0+1280),f,c
  5595   004D14  C509  F4D9         	movff	memcpy@d,fsr2l
  5596   004D18  C50A  F4DA         	movff	memcpy@d+1,fsr2h
  5597   004D1C  C50D  F4DF         	movff	memcpy@tmp,indf2
  5598   004D20  4A09               	infsnz	memcpy@d^(0+1280),f,c
  5599   004D22  2A0A               	incf	(memcpy@d+1)^(0+1280),f,c
  5600   004D24                     l5055:
  5601   004D24  0607               	decf	memcpy@n^(0+1280),f,c
  5602   004D26  A0D8               	btfss	status,0,c
  5603   004D28  0608               	decf	(memcpy@n+1)^(0+1280),f,c
  5604   004D2A  2807               	incf	memcpy@n^(0+1280),w,c
  5605   004D2C  E106               	bnz	u4521
  5606   004D2E  2808               	incf	(memcpy@n+1)^(0+1280),w,c
  5607   004D30  A4D8               	btfss	status,2,c
  5608   004D32  EF9D  F026         	goto	u4521
  5609   004D36  EF9F  F026         	goto	u4520
  5610   004D3A                     u4521:
  5611   004D3A  EF82  F026         	goto	l5047
  5612   004D3E                     u4520:
  5613   004D3E  0012               	return		;funcret
  5614   004D40                     __end_of_memcpy:
  5615                           	callstack 0
  5616                           
  5617 ;; *************** function _labs *****************
  5618 ;; Defined at:
  5619 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  a               4    2[COMRAM] long 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  4    2[COMRAM] long 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;Total ram usage:        8 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; Hardware stack levels required when called: 5
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_efgtoa
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text19
  5648   004C4A                     __ptext19:
  5649                           	callstack 0
  5650   004C4A                     _labs:
  5651                           	callstack 115
  5652   004C4A  BE06               	btfsc	(labs@a+3)^(0+1280),7,c
  5653   004C4C  EF2A  F026         	goto	u4411
  5654   004C50  EF2C  F026         	goto	u4410
  5655   004C54                     u4411:
  5656   004C54  EF36  F026         	goto	l5013
  5657   004C58                     u4410:
  5658   004C58  C503  F503         	movff	labs@a,?_labs
  5659   004C5C  C504  F504         	movff	labs@a+1,?_labs+1
  5660   004C60  C505  F505         	movff	labs@a+2,?_labs+2
  5661   004C64  C506  F506         	movff	labs@a+3,?_labs+3
  5662   004C68  EF4F  F026         	goto	l2041
  5663   004C6C                     l5013:
  5664   004C6C  C503  F507         	movff	labs@a,??_labs
  5665   004C70  C504  F508         	movff	labs@a+1,??_labs+1
  5666   004C74  C505  F509         	movff	labs@a+2,??_labs+2
  5667   004C78  C506  F50A         	movff	labs@a+3,??_labs+3
  5668   004C7C  1E07               	comf	??_labs^(0+1280),f,c
  5669   004C7E  1E08               	comf	(??_labs+1)^(0+1280),f,c
  5670   004C80  1E09               	comf	(??_labs+2)^(0+1280),f,c
  5671   004C82  1E0A               	comf	(??_labs+3)^(0+1280),f,c
  5672   004C84  2A07               	incf	??_labs^(0+1280),f,c
  5673   004C86  0E00               	movlw	0
  5674   004C88  2208               	addwfc	(??_labs+1)^(0+1280),f,c
  5675   004C8A  2209               	addwfc	(??_labs+2)^(0+1280),f,c
  5676   004C8C  220A               	addwfc	(??_labs+3)^(0+1280),f,c
  5677   004C8E  C507  F503         	movff	??_labs,?_labs
  5678   004C92  C508  F504         	movff	??_labs+1,?_labs+1
  5679   004C96  C509  F505         	movff	??_labs+2,?_labs+2
  5680   004C9A  C50A  F506         	movff	??_labs+3,?_labs+3
  5681   004C9E                     l2041:
  5682   004C9E  0012               	return		;funcret
  5683   004CA0                     __end_of_labs:
  5684                           	callstack 0
  5685                           
  5686 ;; *************** function _floorf *****************
  5687 ;; Defined at:
  5688 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  x               4   27[COMRAM] float 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  u               4   43[COMRAM] struct .
  5693 ;;  m               4   37[COMRAM] unsigned long 
  5694 ;;  e               2   41[COMRAM] int 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  4   27[COMRAM] float 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5704 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5705 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5706 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5707 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5708 ;;Total ram usage:       20 bytes
  5709 ;; Hardware stack levels used: 1
  5710 ;; Hardware stack levels required when called: 5
  5711 ;; This function calls:
  5712 ;;		Nothing
  5713 ;; This function is called by:
  5714 ;;		_efgtoa
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text20
  5719   0038C0                     __ptext20:
  5720                           	callstack 0
  5721   0038C0                     _floorf:
  5722                           	callstack 115
  5723   0038C0  C600  F52C         	movff	floorf@F521,floorf@u
  5724   0038C4  C601  F52D         	movff	floorf@F521+1,floorf@u+1
  5725   0038C8  C602  F52E         	movff	floorf@F521+2,floorf@u+2
  5726   0038CC  C603  F52F         	movff	floorf@F521+3,floorf@u+3
  5727   0038D0  C51C  F52C         	movff	floorf@x,floorf@u
  5728   0038D4  C51D  F52D         	movff	floorf@x+1,floorf@u+1
  5729   0038D8  C51E  F52E         	movff	floorf@x+2,floorf@u+2
  5730   0038DC  C51F  F52F         	movff	floorf@x+3,floorf@u+3
  5731   0038E0  0E81               	movlw	129
  5732   0038E2  6E20               	movwf	??_floorf^(0+1280),c
  5733   0038E4  0EFF               	movlw	255
  5734   0038E6  6E21               	movwf	(??_floorf+1)^(0+1280),c
  5735   0038E8  C52C  F522         	movff	floorf@u,??_floorf+2
  5736   0038EC  C52D  F523         	movff	floorf@u+1,??_floorf+3
  5737   0038F0  C52E  F524         	movff	floorf@u+2,??_floorf+4
  5738   0038F4  C52F  F525         	movff	floorf@u+3,??_floorf+5
  5739   0038F8  0E18               	movlw	24
  5740   0038FA  EF84  F01C         	goto	u4420
  5741   0038FE                     u4425:
  5742   0038FE  90D8               	bcf	status,0,c
  5743   003900  3225               	rrcf	(??_floorf+5)^(0+1280),f,c
  5744   003902  3224               	rrcf	(??_floorf+4)^(0+1280),f,c
  5745   003904  3223               	rrcf	(??_floorf+3)^(0+1280),f,c
  5746   003906  3222               	rrcf	(??_floorf+2)^(0+1280),f,c
  5747   003908                     u4420:
  5748   003908  2EE8               	decfsz	wreg,f,c
  5749   00390A  EF7F  F01C         	goto	u4425
  5750   00390E  5022               	movf	(??_floorf+2)^(0+1280),w,c
  5751   003910  2420               	addwf	??_floorf^(0+1280),w,c
  5752   003912  6E2A               	movwf	floorf@e^(0+1280),c
  5753   003914  0E00               	movlw	0
  5754   003916  2021               	addwfc	(??_floorf+1)^(0+1280),w,c
  5755   003918  6E2B               	movwf	(floorf@e+1)^(0+1280),c
  5756   00391A  BE2B               	btfsc	(floorf@e+1)^(0+1280),7,c
  5757   00391C  EF99  F01C         	goto	u4431
  5758   003920  502B               	movf	(floorf@e+1)^(0+1280),w,c
  5759   003922  E109               	bnz	u4430
  5760   003924  0E17               	movlw	23
  5761   003926  5C2A               	subwf	floorf@e^(0+1280),w,c
  5762   003928  A0D8               	btfss	status,0,c
  5763   00392A  EF99  F01C         	goto	u4431
  5764   00392E  EF9B  F01C         	goto	u4430
  5765   003932                     u4431:
  5766   003932  EFA5  F01C         	goto	l5023
  5767   003936                     u4430:
  5768   003936                     l5021:
  5769   003936  C51C  F51C         	movff	floorf@x,?_floorf
  5770   00393A  C51D  F51D         	movff	floorf@x+1,?_floorf+1
  5771   00393E  C51E  F51E         	movff	floorf@x+2,?_floorf+2
  5772   003942  C51F  F51F         	movff	floorf@x+3,?_floorf+3
  5773   003946  EF68  F01D         	goto	l2027
  5774   00394A                     l5023:
  5775   00394A  BE2B               	btfsc	(floorf@e+1)^(0+1280),7,c
  5776   00394C  EFAA  F01C         	goto	u4441
  5777   003950  EFAC  F01C         	goto	u4440
  5778   003954                     u4441:
  5779   003954  EF1C  F01D         	goto	l5033
  5780   003958                     u4440:
  5781   003958  C52A  F520         	movff	floorf@e,??_floorf
  5782   00395C  0EFF               	movlw	255
  5783   00395E  6E21               	movwf	(??_floorf+1)^(0+1280),c
  5784   003960  0EFF               	movlw	255
  5785   003962  6E22               	movwf	(??_floorf+2)^(0+1280),c
  5786   003964  0E7F               	movlw	127
  5787   003966  6E23               	movwf	(??_floorf+3)^(0+1280),c
  5788   003968  0E00               	movlw	0
  5789   00396A  6E24               	movwf	(??_floorf+4)^(0+1280),c
  5790   00396C                     u4455:
  5791   00396C  6620               	tstfsz	??_floorf^(0+1280),c
  5792   00396E  EFBB  F01C         	goto	u4456
  5793   003972  EFC3  F01C         	goto	u4457
  5794   003976                     u4456:
  5795   003976  3424               	rlcf	(??_floorf+4)^(0+1280),w,c
  5796   003978  3224               	rrcf	(??_floorf+4)^(0+1280),f,c
  5797   00397A  3223               	rrcf	(??_floorf+3)^(0+1280),f,c
  5798   00397C  3222               	rrcf	(??_floorf+2)^(0+1280),f,c
  5799   00397E  3221               	rrcf	(??_floorf+1)^(0+1280),f,c
  5800   003980  2E20               	decfsz	??_floorf^(0+1280),f,c
  5801   003982  EFB6  F01C         	goto	u4455
  5802   003986                     u4457:
  5803   003986  C521  F526         	movff	??_floorf+1,floorf@m
  5804   00398A  C522  F527         	movff	??_floorf+2,floorf@m+1
  5805   00398E  C523  F528         	movff	??_floorf+3,floorf@m+2
  5806   003992  C524  F529         	movff	??_floorf+4,floorf@m+3
  5807   003996  5026               	movf	floorf@m^(0+1280),w,c
  5808   003998  142C               	andwf	floorf@u^(0+1280),w,c
  5809   00399A  6E20               	movwf	??_floorf^(0+1280),c
  5810   00399C  5027               	movf	(floorf@m+1)^(0+1280),w,c
  5811   00399E  142D               	andwf	(floorf@u+1)^(0+1280),w,c
  5812   0039A0  6E21               	movwf	(??_floorf+1)^(0+1280),c
  5813   0039A2  5028               	movf	(floorf@m+2)^(0+1280),w,c
  5814   0039A4  142E               	andwf	(floorf@u+2)^(0+1280),w,c
  5815   0039A6  6E22               	movwf	(??_floorf+2)^(0+1280),c
  5816   0039A8  5029               	movf	(floorf@m+3)^(0+1280),w,c
  5817   0039AA  142F               	andwf	(floorf@u+3)^(0+1280),w,c
  5818   0039AC  6E23               	movwf	(??_floorf+3)^(0+1280),c
  5819   0039AE  5020               	movf	??_floorf^(0+1280),w,c
  5820   0039B0  1021               	iorwf	(??_floorf+1)^(0+1280),w,c
  5821   0039B2  1022               	iorwf	(??_floorf+2)^(0+1280),w,c
  5822   0039B4  1023               	iorwf	(??_floorf+3)^(0+1280),w,c
  5823   0039B6  A4D8               	btfss	status,2,c
  5824   0039B8  EFE0  F01C         	goto	u4461
  5825   0039BC  EFE2  F01C         	goto	u4460
  5826   0039C0                     u4461:
  5827   0039C0  EFE4  F01C         	goto	l5029
  5828   0039C4                     u4460:
  5829   0039C4  EF9B  F01C         	goto	l5021
  5830   0039C8                     l5029:
  5831   0039C8  C52C  F520         	movff	floorf@u,??_floorf
  5832   0039CC  C52D  F521         	movff	floorf@u+1,??_floorf+1
  5833   0039D0  C52E  F522         	movff	floorf@u+2,??_floorf+2
  5834   0039D4  C52F  F523         	movff	floorf@u+3,??_floorf+3
  5835   0039D8  0E20               	movlw	32
  5836   0039DA  EFF4  F01C         	goto	u4470
  5837   0039DE                     u4475:
  5838   0039DE  90D8               	bcf	status,0,c
  5839   0039E0  3223               	rrcf	(??_floorf+3)^(0+1280),f,c
  5840   0039E2  3222               	rrcf	(??_floorf+2)^(0+1280),f,c
  5841   0039E4  3221               	rrcf	(??_floorf+1)^(0+1280),f,c
  5842   0039E6  3220               	rrcf	??_floorf^(0+1280),f,c
  5843   0039E8                     u4470:
  5844   0039E8  2EE8               	decfsz	wreg,f,c
  5845   0039EA  EFEF  F01C         	goto	u4475
  5846   0039EE  5020               	movf	??_floorf^(0+1280),w,c
  5847   0039F0  1021               	iorwf	(??_floorf+1)^(0+1280),w,c
  5848   0039F2  1022               	iorwf	(??_floorf+2)^(0+1280),w,c
  5849   0039F4  1023               	iorwf	(??_floorf+3)^(0+1280),w,c
  5850   0039F6  B4D8               	btfsc	status,2,c
  5851   0039F8  EF00  F01D         	goto	u4481
  5852   0039FC  EF02  F01D         	goto	u4480
  5853   003A00                     u4481:
  5854   003A00  EF0A  F01D         	goto	l2030
  5855   003A04                     u4480:
  5856   003A04  5026               	movf	floorf@m^(0+1280),w,c
  5857   003A06  262C               	addwf	floorf@u^(0+1280),f,c
  5858   003A08  5027               	movf	(floorf@m+1)^(0+1280),w,c
  5859   003A0A  222D               	addwfc	(floorf@u+1)^(0+1280),f,c
  5860   003A0C  5028               	movf	(floorf@m+2)^(0+1280),w,c
  5861   003A0E  222E               	addwfc	(floorf@u+2)^(0+1280),f,c
  5862   003A10  5029               	movf	(floorf@m+3)^(0+1280),w,c
  5863   003A12  222F               	addwfc	(floorf@u+3)^(0+1280),f,c
  5864   003A14                     l2030:
  5865   003A14  1C26               	comf	floorf@m^(0+1280),w,c
  5866   003A16  6E20               	movwf	??_floorf^(0+1280),c
  5867   003A18  1C27               	comf	(floorf@m+1)^(0+1280),w,c
  5868   003A1A  6E21               	movwf	(??_floorf+1)^(0+1280),c
  5869   003A1C  1C28               	comf	(floorf@m+2)^(0+1280),w,c
  5870   003A1E  6E22               	movwf	(??_floorf+2)^(0+1280),c
  5871   003A20  1C29               	comf	(floorf@m+3)^(0+1280),w,c
  5872   003A22  6E23               	movwf	(??_floorf+3)^(0+1280),c
  5873   003A24  5020               	movf	??_floorf^(0+1280),w,c
  5874   003A26  162C               	andwf	floorf@u^(0+1280),f,c
  5875   003A28  5021               	movf	(??_floorf+1)^(0+1280),w,c
  5876   003A2A  162D               	andwf	(floorf@u+1)^(0+1280),f,c
  5877   003A2C  5022               	movf	(??_floorf+2)^(0+1280),w,c
  5878   003A2E  162E               	andwf	(floorf@u+2)^(0+1280),f,c
  5879   003A30  5023               	movf	(??_floorf+3)^(0+1280),w,c
  5880   003A32  162F               	andwf	(floorf@u+3)^(0+1280),f,c
  5881   003A34  EF60  F01D         	goto	l5041
  5882   003A38                     l5033:
  5883   003A38  C52C  F520         	movff	floorf@u,??_floorf
  5884   003A3C  C52D  F521         	movff	floorf@u+1,??_floorf+1
  5885   003A40  C52E  F522         	movff	floorf@u+2,??_floorf+2
  5886   003A44  C52F  F523         	movff	floorf@u+3,??_floorf+3
  5887   003A48  0E20               	movlw	32
  5888   003A4A  EF2C  F01D         	goto	u4490
  5889   003A4E                     u4495:
  5890   003A4E  90D8               	bcf	status,0,c
  5891   003A50  3223               	rrcf	(??_floorf+3)^(0+1280),f,c
  5892   003A52  3222               	rrcf	(??_floorf+2)^(0+1280),f,c
  5893   003A54  3221               	rrcf	(??_floorf+1)^(0+1280),f,c
  5894   003A56  3220               	rrcf	??_floorf^(0+1280),f,c
  5895   003A58                     u4490:
  5896   003A58  2EE8               	decfsz	wreg,f,c
  5897   003A5A  EF27  F01D         	goto	u4495
  5898   003A5E  5020               	movf	??_floorf^(0+1280),w,c
  5899   003A60  1021               	iorwf	(??_floorf+1)^(0+1280),w,c
  5900   003A62  1022               	iorwf	(??_floorf+2)^(0+1280),w,c
  5901   003A64  1023               	iorwf	(??_floorf+3)^(0+1280),w,c
  5902   003A66  A4D8               	btfss	status,2,c
  5903   003A68  EF38  F01D         	goto	u4501
  5904   003A6C  EF3A  F01D         	goto	u4500
  5905   003A70                     u4501:
  5906   003A70  EF44  F01D         	goto	l5037
  5907   003A74                     u4500:
  5908   003A74  0E00               	movlw	0
  5909   003A76  6E2C               	movwf	floorf@u^(0+1280),c
  5910   003A78  0E00               	movlw	0
  5911   003A7A  6E2D               	movwf	(floorf@u+1)^(0+1280),c
  5912   003A7C  0E00               	movlw	0
  5913   003A7E  6E2E               	movwf	(floorf@u+2)^(0+1280),c
  5914   003A80  0E00               	movlw	0
  5915   003A82  6E2F               	movwf	(floorf@u+3)^(0+1280),c
  5916   003A84  EF60  F01D         	goto	l5041
  5917   003A88                     l5037:
  5918   003A88  90D8               	bcf	status,0,c
  5919   003A8A  342C               	rlcf	floorf@u^(0+1280),w,c
  5920   003A8C  6E20               	movwf	??_floorf^(0+1280),c
  5921   003A8E  342D               	rlcf	(floorf@u+1)^(0+1280),w,c
  5922   003A90  6E21               	movwf	(??_floorf+1)^(0+1280),c
  5923   003A92  342E               	rlcf	(floorf@u+2)^(0+1280),w,c
  5924   003A94  6E22               	movwf	(??_floorf+2)^(0+1280),c
  5925   003A96  342F               	rlcf	(floorf@u+3)^(0+1280),w,c
  5926   003A98  6E23               	movwf	(??_floorf+3)^(0+1280),c
  5927   003A9A  5020               	movf	??_floorf^(0+1280),w,c
  5928   003A9C  1021               	iorwf	(??_floorf+1)^(0+1280),w,c
  5929   003A9E  1022               	iorwf	(??_floorf+2)^(0+1280),w,c
  5930   003AA0  1023               	iorwf	(??_floorf+3)^(0+1280),w,c
  5931   003AA2  B4D8               	btfsc	status,2,c
  5932   003AA4  EF56  F01D         	goto	u4511
  5933   003AA8  EF58  F01D         	goto	u4510
  5934   003AAC                     u4511:
  5935   003AAC  EF60  F01D         	goto	l5041
  5936   003AB0                     u4510:
  5937   003AB0  0E00               	movlw	0
  5938   003AB2  6E2C               	movwf	floorf@u^(0+1280),c
  5939   003AB4  0E00               	movlw	0
  5940   003AB6  6E2D               	movwf	(floorf@u+1)^(0+1280),c
  5941   003AB8  0E80               	movlw	128
  5942   003ABA  6E2E               	movwf	(floorf@u+2)^(0+1280),c
  5943   003ABC  0EBF               	movlw	191
  5944   003ABE  6E2F               	movwf	(floorf@u+3)^(0+1280),c
  5945   003AC0                     l5041:
  5946   003AC0  C52C  F51C         	movff	floorf@u,?_floorf
  5947   003AC4  C52D  F51D         	movff	floorf@u+1,?_floorf+1
  5948   003AC8  C52E  F51E         	movff	floorf@u+2,?_floorf+2
  5949   003ACC  C52F  F51F         	movff	floorf@u+3,?_floorf+3
  5950   003AD0                     l2027:
  5951   003AD0  0012               	return		;funcret
  5952   003AD2                     __end_of_floorf:
  5953                           	callstack 0
  5954                           
  5955 ;; *************** function ___fpclassifyf *****************
  5956 ;; Defined at:
  5957 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;  x               4    2[COMRAM] float 
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;  u               4   12[COMRAM] struct .
  5962 ;;  e               2   10[COMRAM] int 
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  2    2[COMRAM] int 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5975 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;Total ram usage:       14 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; Hardware stack levels required when called: 5
  5979 ;; This function calls:
  5980 ;;		Nothing
  5981 ;; This function is called by:
  5982 ;;		_efgtoa
  5983 ;; This function uses a non-reentrant model
  5984 ;;
  5985                           
  5986                           	psect	text21
  5987   004452                     __ptext21:
  5988                           	callstack 0
  5989   004452                     ___fpclassifyf:
  5990                           	callstack 115
  5991   004452  C604  F50D         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5992   004456  C605  F50E         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5993   00445A  C606  F50F         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5994   00445E  C607  F510         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5995   004462  C503  F50D         	movff	___fpclassifyf@x,___fpclassifyf@u
  5996   004466  C504  F50E         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5997   00446A  C505  F50F         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5998   00446E  C506  F510         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5999   004472  C50D  F507         	movff	___fpclassifyf@u,??___fpclassifyf
  6000   004476  C50E  F508         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6001   00447A  C50F  F509         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6002   00447E  C510  F50A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6003   004482  0E18               	movlw	24
  6004   004484  EF49  F022         	goto	u4330
  6005   004488                     u4335:
  6006   004488  90D8               	bcf	status,0,c
  6007   00448A  320A               	rrcf	(??___fpclassifyf+3)^(0+1280),f,c
  6008   00448C  3209               	rrcf	(??___fpclassifyf+2)^(0+1280),f,c
  6009   00448E  3208               	rrcf	(??___fpclassifyf+1)^(0+1280),f,c
  6010   004490  3207               	rrcf	??___fpclassifyf^(0+1280),f,c
  6011   004492                     u4330:
  6012   004492  2EE8               	decfsz	wreg,f,c
  6013   004494  EF44  F022         	goto	u4335
  6014   004498  5007               	movf	??___fpclassifyf^(0+1280),w,c
  6015   00449A  6E0B               	movwf	___fpclassifyf@e^(0+1280),c
  6016   00449C  6A0C               	clrf	(___fpclassifyf@e+1)^(0+1280),c
  6017   00449E  500B               	movf	___fpclassifyf@e^(0+1280),w,c
  6018   0044A0  100C               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
  6019   0044A2  A4D8               	btfss	status,2,c
  6020   0044A4  EF56  F022         	goto	u4341
  6021   0044A8  EF58  F022         	goto	u4340
  6022   0044AC                     u4341:
  6023   0044AC  EF78  F022         	goto	l4995
  6024   0044B0                     u4340:
  6025   0044B0  90D8               	bcf	status,0,c
  6026   0044B2  340D               	rlcf	___fpclassifyf@u^(0+1280),w,c
  6027   0044B4  6E07               	movwf	??___fpclassifyf^(0+1280),c
  6028   0044B6  340E               	rlcf	(___fpclassifyf@u+1)^(0+1280),w,c
  6029   0044B8  6E08               	movwf	(??___fpclassifyf+1)^(0+1280),c
  6030   0044BA  340F               	rlcf	(___fpclassifyf@u+2)^(0+1280),w,c
  6031   0044BC  6E09               	movwf	(??___fpclassifyf+2)^(0+1280),c
  6032   0044BE  3410               	rlcf	(___fpclassifyf@u+3)^(0+1280),w,c
  6033   0044C0  6E0A               	movwf	(??___fpclassifyf+3)^(0+1280),c
  6034   0044C2  5007               	movf	??___fpclassifyf^(0+1280),w,c
  6035   0044C4  1008               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
  6036   0044C6  1009               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
  6037   0044C8  100A               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
  6038   0044CA  A4D8               	btfss	status,2,c
  6039   0044CC  EF6A  F022         	goto	u4351
  6040   0044D0  EF6C  F022         	goto	u4350
  6041   0044D4                     u4351:
  6042   0044D4  EF72  F022         	goto	l4991
  6043   0044D8                     u4350:
  6044   0044D8  0E00               	movlw	0
  6045   0044DA  6E04               	movwf	(?___fpclassifyf+1)^(0+1280),c
  6046   0044DC  0E02               	movlw	2
  6047   0044DE  6E03               	movwf	?___fpclassifyf^(0+1280),c
  6048   0044E0  EFA7  F022         	goto	l2020
  6049   0044E4                     l4991:
  6050   0044E4  0E00               	movlw	0
  6051   0044E6  6E04               	movwf	(?___fpclassifyf+1)^(0+1280),c
  6052   0044E8  0E03               	movlw	3
  6053   0044EA  6E03               	movwf	?___fpclassifyf^(0+1280),c
  6054   0044EC  EFA7  F022         	goto	l2020
  6055   0044F0                     l4995:
  6056   0044F0  280B               	incf	___fpclassifyf@e^(0+1280),w,c
  6057   0044F2  100C               	iorwf	(___fpclassifyf@e+1)^(0+1280),w,c
  6058   0044F4  A4D8               	btfss	status,2,c
  6059   0044F6  EF7F  F022         	goto	u4361
  6060   0044FA  EF81  F022         	goto	u4360
  6061   0044FE                     u4361:
  6062   0044FE  EFA3  F022         	goto	l5001
  6063   004502                     u4360:
  6064   004502  C50D  F507         	movff	___fpclassifyf@u,??___fpclassifyf
  6065   004506  C50E  F508         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6066   00450A  C50F  F509         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6067   00450E  C510  F50A         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6068   004512  0E09               	movlw	9
  6069   004514                     u4375:
  6070   004514  90D8               	bcf	status,0,c
  6071   004516  3607               	rlcf	??___fpclassifyf^(0+1280),f,c
  6072   004518  3608               	rlcf	(??___fpclassifyf+1)^(0+1280),f,c
  6073   00451A  3609               	rlcf	(??___fpclassifyf+2)^(0+1280),f,c
  6074   00451C  360A               	rlcf	(??___fpclassifyf+3)^(0+1280),f,c
  6075   00451E  2EE8               	decfsz	wreg,f,c
  6076   004520  EF8A  F022         	goto	u4375
  6077   004524  5007               	movf	??___fpclassifyf^(0+1280),w,c
  6078   004526  1008               	iorwf	(??___fpclassifyf+1)^(0+1280),w,c
  6079   004528  1009               	iorwf	(??___fpclassifyf+2)^(0+1280),w,c
  6080   00452A  100A               	iorwf	(??___fpclassifyf+3)^(0+1280),w,c
  6081   00452C  B4D8               	btfsc	status,2,c
  6082   00452E  EF9B  F022         	goto	u4381
  6083   004532  EF9E  F022         	goto	u4380
  6084   004536                     u4381:
  6085   004536  0E01               	movlw	1
  6086   004538  EF9F  F022         	goto	u4390
  6087   00453C                     u4380:
  6088   00453C  0E00               	movlw	0
  6089   00453E                     u4390:
  6090   00453E  6E03               	movwf	?___fpclassifyf^(0+1280),c
  6091   004540  6A04               	clrf	(?___fpclassifyf+1)^(0+1280),c
  6092   004542  EFA7  F022         	goto	l2020
  6093   004546                     l5001:
  6094   004546  0E00               	movlw	0
  6095   004548  6E04               	movwf	(?___fpclassifyf+1)^(0+1280),c
  6096   00454A  0E04               	movlw	4
  6097   00454C  6E03               	movwf	?___fpclassifyf^(0+1280),c
  6098   00454E                     l2020:
  6099   00454E  0012               	return		;funcret
  6100   004550                     __end_of___fpclassifyf:
  6101                           	callstack 0
  6102                           
  6103 ;; *************** function ___flneg *****************
  6104 ;; Defined at:
  6105 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  6106 ;; Parameters:    Size  Location     Type
  6107 ;;  f1              4    2[COMRAM] int 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;		None
  6110 ;; Return value:  Size  Location     Type
  6111 ;;                  4    2[COMRAM] int 
  6112 ;; Registers used:
  6113 ;;		wreg, status,2, status,0
  6114 ;; Tracked objects:
  6115 ;;		On entry : 0/0
  6116 ;;		On exit  : 0/0
  6117 ;;		Unchanged: 0/0
  6118 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6123 ;;Total ram usage:        4 bytes
  6124 ;; Hardware stack levels used: 1
  6125 ;; Hardware stack levels required when called: 5
  6126 ;; This function calls:
  6127 ;;		Nothing
  6128 ;; This function is called by:
  6129 ;;		_efgtoa
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text22
  6134   004F42                     __ptext22:
  6135                           	callstack 0
  6136   004F42                     ___flneg:
  6137                           	callstack 115
  6138   004F42  5003               	movf	___flneg@f1^(0+1280),w,c
  6139   004F44  1004               	iorwf	(___flneg@f1+1)^(0+1280),w,c
  6140   004F46  1005               	iorwf	(___flneg@f1+2)^(0+1280),w,c
  6141   004F48  1006               	iorwf	(___flneg@f1+3)^(0+1280),w,c
  6142   004F4A  B4D8               	btfsc	status,2,c
  6143   004F4C  EFAA  F027         	goto	u4231
  6144   004F50  EFAC  F027         	goto	u4230
  6145   004F54                     u4231:
  6146   004F54  EFB4  F027         	goto	l4923
  6147   004F58                     u4230:
  6148   004F58  0E00               	movlw	0
  6149   004F5A  1A03               	xorwf	___flneg@f1^(0+1280),f,c
  6150   004F5C  0E00               	movlw	0
  6151   004F5E  1A04               	xorwf	(___flneg@f1+1)^(0+1280),f,c
  6152   004F60  0E00               	movlw	0
  6153   004F62  1A05               	xorwf	(___flneg@f1+2)^(0+1280),f,c
  6154   004F64  0E80               	movlw	128
  6155   004F66  1A06               	xorwf	(___flneg@f1+3)^(0+1280),f,c
  6156   004F68                     l4923:
  6157   004F68  C503  F503         	movff	___flneg@f1,?___flneg
  6158   004F6C  C504  F504         	movff	___flneg@f1+1,?___flneg+1
  6159   004F70  C505  F505         	movff	___flneg@f1+2,?___flneg+2
  6160   004F74  C506  F506         	movff	___flneg@f1+3,?___flneg+3
  6161   004F78  0012               	return		;funcret
  6162   004F7A                     __end_of___flneg:
  6163                           	callstack 0
  6164                           
  6165 ;; *************** function ___fleq *****************
  6166 ;; Defined at:
  6167 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  ff1             4    2[COMRAM] int 
  6170 ;;  ff2             4    6[COMRAM] int 
  6171 ;; Auto vars:     Size  Location     Type
  6172 ;;		None
  6173 ;; Return value:  Size  Location     Type
  6174 ;;		None               void
  6175 ;; Registers used:
  6176 ;;		wreg, status,2, status,0
  6177 ;; Tracked objects:
  6178 ;;		On entry : 0/0
  6179 ;;		On exit  : 0/0
  6180 ;;		Unchanged: 0/0
  6181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6182 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;Total ram usage:       12 bytes
  6187 ;; Hardware stack levels used: 1
  6188 ;; Hardware stack levels required when called: 5
  6189 ;; This function calls:
  6190 ;;		Nothing
  6191 ;; This function is called by:
  6192 ;;		_efgtoa
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text23
  6197   0047C8                     __ptext23:
  6198                           	callstack 0
  6199   0047C8                     ___fleq:
  6200                           	callstack 115
  6201   0047C8  0E00               	movlw	0
  6202   0047CA  1403               	andwf	___fleq@ff1^(0+1280),w,c
  6203   0047CC  6E0B               	movwf	??___fleq^(0+1280),c
  6204   0047CE  0E00               	movlw	0
  6205   0047D0  1404               	andwf	(___fleq@ff1+1)^(0+1280),w,c
  6206   0047D2  6E0C               	movwf	(??___fleq+1)^(0+1280),c
  6207   0047D4  0E80               	movlw	128
  6208   0047D6  1405               	andwf	(___fleq@ff1+2)^(0+1280),w,c
  6209   0047D8  6E0D               	movwf	(??___fleq+2)^(0+1280),c
  6210   0047DA  0E7F               	movlw	127
  6211   0047DC  1406               	andwf	(___fleq@ff1+3)^(0+1280),w,c
  6212   0047DE  6E0E               	movwf	(??___fleq+3)^(0+1280),c
  6213   0047E0  500B               	movf	??___fleq^(0+1280),w,c
  6214   0047E2  100C               	iorwf	(??___fleq+1)^(0+1280),w,c
  6215   0047E4  100D               	iorwf	(??___fleq+2)^(0+1280),w,c
  6216   0047E6  100E               	iorwf	(??___fleq+3)^(0+1280),w,c
  6217   0047E8  A4D8               	btfss	status,2,c
  6218   0047EA  EFF9  F023         	goto	u4151
  6219   0047EE  EFFB  F023         	goto	u4150
  6220   0047F2                     u4151:
  6221   0047F2  EF03  F024         	goto	l4885
  6222   0047F6                     u4150:
  6223   0047F6  0E00               	movlw	0
  6224   0047F8  6E03               	movwf	___fleq@ff1^(0+1280),c
  6225   0047FA  0E00               	movlw	0
  6226   0047FC  6E04               	movwf	(___fleq@ff1+1)^(0+1280),c
  6227   0047FE  0E00               	movlw	0
  6228   004800  6E05               	movwf	(___fleq@ff1+2)^(0+1280),c
  6229   004802  0E00               	movlw	0
  6230   004804  6E06               	movwf	(___fleq@ff1+3)^(0+1280),c
  6231   004806                     l4885:
  6232   004806  0E00               	movlw	0
  6233   004808  1407               	andwf	___fleq@ff2^(0+1280),w,c
  6234   00480A  6E0B               	movwf	??___fleq^(0+1280),c
  6235   00480C  0E00               	movlw	0
  6236   00480E  1408               	andwf	(___fleq@ff2+1)^(0+1280),w,c
  6237   004810  6E0C               	movwf	(??___fleq+1)^(0+1280),c
  6238   004812  0E80               	movlw	128
  6239   004814  1409               	andwf	(___fleq@ff2+2)^(0+1280),w,c
  6240   004816  6E0D               	movwf	(??___fleq+2)^(0+1280),c
  6241   004818  0E7F               	movlw	127
  6242   00481A  140A               	andwf	(___fleq@ff2+3)^(0+1280),w,c
  6243   00481C  6E0E               	movwf	(??___fleq+3)^(0+1280),c
  6244   00481E  500B               	movf	??___fleq^(0+1280),w,c
  6245   004820  100C               	iorwf	(??___fleq+1)^(0+1280),w,c
  6246   004822  100D               	iorwf	(??___fleq+2)^(0+1280),w,c
  6247   004824  100E               	iorwf	(??___fleq+3)^(0+1280),w,c
  6248   004826  A4D8               	btfss	status,2,c
  6249   004828  EF18  F024         	goto	u4161
  6250   00482C  EF1A  F024         	goto	u4160
  6251   004830                     u4161:
  6252   004830  EF22  F024         	goto	l4889
  6253   004834                     u4160:
  6254   004834  0E00               	movlw	0
  6255   004836  6E07               	movwf	___fleq@ff2^(0+1280),c
  6256   004838  0E00               	movlw	0
  6257   00483A  6E08               	movwf	(___fleq@ff2+1)^(0+1280),c
  6258   00483C  0E00               	movlw	0
  6259   00483E  6E09               	movwf	(___fleq@ff2+2)^(0+1280),c
  6260   004840  0E00               	movlw	0
  6261   004842  6E0A               	movwf	(___fleq@ff2+3)^(0+1280),c
  6262   004844                     l4889:
  6263   004844  5007               	movf	___fleq@ff2^(0+1280),w,c
  6264   004846  1803               	xorwf	___fleq@ff1^(0+1280),w,c
  6265   004848  E10F               	bnz	u4170
  6266   00484A  5008               	movf	(___fleq@ff2+1)^(0+1280),w,c
  6267   00484C  1804               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
  6268   00484E  E10C               	bnz	u4170
  6269   004850  5009               	movf	(___fleq@ff2+2)^(0+1280),w,c
  6270   004852  1805               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
  6271   004854  E109               	bnz	u4170
  6272   004856  500A               	movf	(___fleq@ff2+3)^(0+1280),w,c
  6273   004858  1806               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
  6274   00485A  B4D8               	btfsc	status,2,c
  6275   00485C  EF32  F024         	goto	u4171
  6276   004860  EF34  F024         	goto	u4170
  6277   004864                     u4171:
  6278   004864  EF37  F024         	goto	l4893
  6279   004868                     u4170:
  6280   004868  90D8               	bcf	status,0,c
  6281   00486A  EF38  F024         	goto	l1432
  6282   00486E                     l4893:
  6283   00486E  80D8               	bsf	status,0,c
  6284   004870                     l1432:
  6285   004870  0012               	return		;funcret
  6286   004872                     __end_of___fleq:
  6287                           	callstack 0
  6288                           
  6289 ;; *************** function _dtoa *****************
  6290 ;; Defined at:
  6291 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  fp              2   74[COMRAM] PTR struct _IO_FILE
  6294 ;;		 -> NULL(0), 
  6295 ;;  d               4   76[COMRAM] long 
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;  i               2   87[COMRAM] int 
  6298 ;;  p               2   84[COMRAM] int 
  6299 ;;  w               2   82[COMRAM] int 
  6300 ;;  s               1   86[COMRAM] unsigned char 
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  1    wreg      void 
  6303 ;; Registers used:
  6304 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6310 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;Total ram usage:       15 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; Hardware stack levels required when called: 10
  6317 ;; This function calls:
  6318 ;;		___aldiv
  6319 ;;		___almod
  6320 ;;		_abs
  6321 ;;		_pad
  6322 ;; This function is called by:
  6323 ;;		_vfpfcnvrt
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text24
  6328   003E82                     __ptext24:
  6329                           	callstack 0
  6330   003E82                     _dtoa:
  6331                           	callstack 111
  6332   003E82                     
  6333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  6334   003E82  BE50               	btfsc	(dtoa@d+3)^(0+1280),7,c
  6335   003E84  EF46  F01F         	goto	u4531
  6336   003E88  EF49  F01F         	goto	u4530
  6337   003E8C                     u4531:
  6338   003E8C  0E01               	movlw	1
  6339   003E8E  EF4A  F01F         	goto	u4540
  6340   003E92                     u4530:
  6341   003E92  0E00               	movlw	0
  6342   003E94                     u4540:
  6343   003E94  6E57               	movwf	dtoa@s^(0+1280),c
  6344                           
  6345                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  6346   003E96  0105               	movlb	5	; () banked
  6347   003E98  BFE2               	btfsc	(_prec+1)& (0+255),7,b
  6348   003E9A  EF53  F01F         	goto	u4550
  6349   003E9E  EF51  F01F         	goto	u4551
  6350   003EA2                     u4551:
  6351   003EA2  EF59  F01F         	goto	l1895
  6352   003EA6                     u4550:
  6353   003EA6                     
  6354                           ; BSR set to: 5
  6355   003EA6  0E00               	movlw	0
  6356   003EA8  6E56               	movwf	(dtoa@p+1)^(0+1280),c
  6357   003EAA  0E01               	movlw	1
  6358   003EAC  6E55               	movwf	dtoa@p^(0+1280),c
  6359   003EAE  EF5D  F01F         	goto	l1897
  6360   003EB2                     l1895:
  6361                           
  6362                           ; BSR set to: 5
  6363   003EB2  C5E1  F555         	movff	_prec,dtoa@p
  6364   003EB6  C5E2  F556         	movff	_prec+1,dtoa@p+1
  6365   003EBA                     l1897:
  6366                           
  6367                           ; BSR set to: 5
  6368                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6369   003EBA  C608  F553         	movff	_width,dtoa@w
  6370   003EBE  C609  F554         	movff	_width+1,dtoa@w+1
  6371   003EC2                     
  6372                           ; BSR set to: 5
  6373                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 536:     if (s
  6374   003EC2  5057               	movf	dtoa@s^(0+1280),w,c
  6375   003EC4  B4D8               	btfsc	status,2,c
  6376   003EC6  EF67  F01F         	goto	u4561
  6377   003ECA  EF69  F01F         	goto	u4560
  6378   003ECE                     u4561:
  6379   003ECE  EF80  F01F         	goto	l1898
  6380   003ED2                     u4560:
  6381   003ED2                     
  6382                           ; BSR set to: 5
  6383                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 541:         --w;
  6384   003ED2  0653               	decf	dtoa@w^(0+1280),f,c
  6385   003ED4  A0D8               	btfss	status,0,c
  6386   003ED6  0654               	decf	(dtoa@w+1)^(0+1280),f,c
  6387   003ED8                     
  6388                           ; BSR set to: 5
  6389                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6390   003ED8  5057               	movf	dtoa@s^(0+1280),w,c
  6391   003EDA  A4D8               	btfss	status,2,c
  6392   003EDC  EF72  F01F         	goto	u4571
  6393   003EE0  EF74  F01F         	goto	u4570
  6394   003EE4                     u4571:
  6395   003EE4  EF7A  F01F         	goto	l5069
  6396   003EE8                     u4570:
  6397   003EE8                     
  6398                           ; BSR set to: 5
  6399   003EE8  0E00               	movlw	0
  6400   003EEA  6E52               	movwf	(_dtoa$2649+1)^(0+1280),c
  6401   003EEC  0E2B               	movlw	43
  6402   003EEE  6E51               	movwf	_dtoa$2649^(0+1280),c
  6403   003EF0  EF7E  F01F         	goto	l5071
  6404   003EF4                     l5069:
  6405                           
  6406                           ; BSR set to: 5
  6407   003EF4  0E00               	movlw	0
  6408   003EF6  6E52               	movwf	(_dtoa$2649+1)^(0+1280),c
  6409   003EF8  0E2D               	movlw	45
  6410   003EFA  6E51               	movwf	_dtoa$2649^(0+1280),c
  6411   003EFC                     l5071:
  6412                           
  6413                           ; BSR set to: 5
  6414   003EFC  C551  F557         	movff	_dtoa$2649,dtoa@s
  6415   003F00                     l1898:
  6416                           
  6417                           ; BSR set to: 5
  6418                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6419   003F00  0E00               	movlw	0
  6420   003F02  6E59               	movwf	(dtoa@i+1)^(0+1280),c
  6421   003F04  0E4F               	movlw	79
  6422   003F06  6E58               	movwf	dtoa@i^(0+1280),c
  6423   003F08                     
  6424                           ; BSR set to: 5
  6425                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6426   003F08  0E00               	movlw	0
  6427   003F0A  0106               	movlb	6	; () banked
  6428   003F0C  6F61               	movwf	(_dbuf+79)& (0+255),b
  6429                           
  6430                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6431   003F0E  EFCD  F01F         	goto	l5085
  6432   003F12                     l5075:
  6433                           
  6434                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 564:         --i;
  6435   003F12  0658               	decf	dtoa@i^(0+1280),f,c
  6436   003F14  A0D8               	btfss	status,0,c
  6437   003F16  0659               	decf	(dtoa@i+1)^(0+1280),f,c
  6438   003F18                     
  6439                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6440   003F18  0E12               	movlw	low _dbuf
  6441   003F1A  2458               	addwf	dtoa@i^(0+1280),w,c
  6442   003F1C  6ED9               	movwf	fsr2l,c
  6443   003F1E  0E06               	movlw	high _dbuf
  6444   003F20  2059               	addwfc	(dtoa@i+1)^(0+1280),w,c
  6445   003F22  6EDA               	movwf	fsr2h,c
  6446   003F24  C54D  F503         	movff	dtoa@d,___almod@dividend
  6447   003F28  C54E  F504         	movff	dtoa@d+1,___almod@dividend+1
  6448   003F2C  C54F  F505         	movff	dtoa@d+2,___almod@dividend+2
  6449   003F30  C550  F506         	movff	dtoa@d+3,___almod@dividend+3
  6450   003F34  0E0A               	movlw	10
  6451   003F36  6E07               	movwf	___almod@divisor^(0+1280),c
  6452   003F38  0E00               	movlw	0
  6453   003F3A  6E08               	movwf	(___almod@divisor+1)^(0+1280),c
  6454   003F3C  0E00               	movlw	0
  6455   003F3E  6E09               	movwf	(___almod@divisor+2)^(0+1280),c
  6456   003F40  0E00               	movlw	0
  6457   003F42  6E0A               	movwf	(___almod@divisor+3)^(0+1280),c
  6458   003F44  ECA8  F022         	call	___almod	;wreg free
  6459   003F48  C503  F547         	movff	?___almod,abs@a
  6460   003F4C  C504  F548         	movff	?___almod+1,abs@a+1
  6461   003F50  ECD8  F027         	call	_abs	;wreg free
  6462   003F54  5047               	movf	?_abs^(0+1280),w,c
  6463   003F56  0F30               	addlw	48
  6464   003F58  6EDF               	movwf	indf2,c
  6465   003F5A                     
  6466                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 567:         --p;
  6467   003F5A  0655               	decf	dtoa@p^(0+1280),f,c
  6468   003F5C  A0D8               	btfss	status,0,c
  6469   003F5E  0656               	decf	(dtoa@p+1)^(0+1280),f,c
  6470   003F60                     
  6471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 571:         --w;
  6472   003F60  0653               	decf	dtoa@w^(0+1280),f,c
  6473   003F62  A0D8               	btfss	status,0,c
  6474   003F64  0654               	decf	(dtoa@w+1)^(0+1280),f,c
  6475   003F66                     
  6476                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6477   003F66  C54D  F503         	movff	dtoa@d,___aldiv@dividend
  6478   003F6A  C54E  F504         	movff	dtoa@d+1,___aldiv@dividend+1
  6479   003F6E  C54F  F505         	movff	dtoa@d+2,___aldiv@dividend+2
  6480   003F72  C550  F506         	movff	dtoa@d+3,___aldiv@dividend+3
  6481   003F76  0E0A               	movlw	10
  6482   003F78  6E07               	movwf	___aldiv@divisor^(0+1280),c
  6483   003F7A  0E00               	movlw	0
  6484   003F7C  6E08               	movwf	(___aldiv@divisor+1)^(0+1280),c
  6485   003F7E  0E00               	movlw	0
  6486   003F80  6E09               	movwf	(___aldiv@divisor+2)^(0+1280),c
  6487   003F82  0E00               	movlw	0
  6488   003F84  6E0A               	movwf	(___aldiv@divisor+3)^(0+1280),c
  6489   003F86  EC9D  F020         	call	___aldiv	;wreg free
  6490   003F8A  C503  F54D         	movff	?___aldiv,dtoa@d
  6491   003F8E  C504  F54E         	movff	?___aldiv+1,dtoa@d+1
  6492   003F92  C505  F54F         	movff	?___aldiv+2,dtoa@d+2
  6493   003F96  C506  F550         	movff	?___aldiv+3,dtoa@d+3
  6494   003F9A                     l5085:
  6495                           
  6496                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6497   003F9A  BE59               	btfsc	(dtoa@i+1)^(0+1280),7,c
  6498   003F9C  EFD8  F01F         	goto	u4581
  6499   003FA0  5059               	movf	(dtoa@i+1)^(0+1280),w,c
  6500   003FA2  E108               	bnz	u4580
  6501   003FA4  0458               	decf	dtoa@i^(0+1280),w,c
  6502   003FA6  A0D8               	btfss	status,0,c
  6503   003FA8  EFD8  F01F         	goto	u4581
  6504   003FAC  EFDA  F01F         	goto	u4580
  6505   003FB0                     u4581:
  6506   003FB0  EFF2  F01F         	goto	l5091
  6507   003FB4                     u4580:
  6508   003FB4  504D               	movf	dtoa@d^(0+1280),w,c
  6509   003FB6  104E               	iorwf	(dtoa@d+1)^(0+1280),w,c
  6510   003FB8  104F               	iorwf	(dtoa@d+2)^(0+1280),w,c
  6511   003FBA  1050               	iorwf	(dtoa@d+3)^(0+1280),w,c
  6512   003FBC  A4D8               	btfss	status,2,c
  6513   003FBE  EFE3  F01F         	goto	u4591
  6514   003FC2  EFE5  F01F         	goto	u4590
  6515   003FC6                     u4591:
  6516   003FC6  EF89  F01F         	goto	l5075
  6517   003FCA                     u4590:
  6518   003FCA  BE56               	btfsc	(dtoa@p+1)^(0+1280),7,c
  6519   003FCC  EFF2  F01F         	goto	u4600
  6520   003FD0  5056               	movf	(dtoa@p+1)^(0+1280),w,c
  6521   003FD2  E106               	bnz	u4601
  6522   003FD4  0455               	decf	dtoa@p^(0+1280),w,c
  6523   003FD6  B0D8               	btfsc	status,0,c
  6524   003FD8  EFF0  F01F         	goto	u4601
  6525   003FDC  EFF2  F01F         	goto	u4600
  6526   003FE0                     u4601:
  6527   003FE0  EF89  F01F         	goto	l5075
  6528   003FE4                     u4600:
  6529   003FE4                     l5091:
  6530                           
  6531                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6532   003FE4  5057               	movf	dtoa@s^(0+1280),w,c
  6533   003FE6  B4D8               	btfsc	status,2,c
  6534   003FE8  EFF8  F01F         	goto	u4611
  6535   003FEC  EFFA  F01F         	goto	u4610
  6536   003FF0                     u4611:
  6537   003FF0  EF05  F020         	goto	l5097
  6538   003FF4                     u4610:
  6539   003FF4                     
  6540                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 577:         --i;
  6541   003FF4  0658               	decf	dtoa@i^(0+1280),f,c
  6542   003FF6  A0D8               	btfss	status,0,c
  6543   003FF8  0659               	decf	(dtoa@i+1)^(0+1280),f,c
  6544   003FFA                     
  6545                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6546   003FFA  0E12               	movlw	low _dbuf
  6547   003FFC  2458               	addwf	dtoa@i^(0+1280),w,c
  6548   003FFE  6ED9               	movwf	fsr2l,c
  6549   004000  0E06               	movlw	high _dbuf
  6550   004002  2059               	addwfc	(dtoa@i+1)^(0+1280),w,c
  6551   004004  6EDA               	movwf	fsr2h,c
  6552   004006  C557  F4DF         	movff	dtoa@s,indf2
  6553   00400A                     l5097:
  6554                           
  6555                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6556   00400A  C54B  F515         	movff	dtoa@fp,pad@fp
  6557   00400E  C54C  F516         	movff	dtoa@fp+1,pad@fp+1
  6558   004012  0E12               	movlw	low _dbuf
  6559   004014  2458               	addwf	dtoa@i^(0+1280),w,c
  6560   004016  6E17               	movwf	pad@buf^(0+1280),c
  6561   004018  0E06               	movlw	high _dbuf
  6562   00401A  2059               	addwfc	(dtoa@i+1)^(0+1280),w,c
  6563   00401C  6E18               	movwf	(pad@buf+1)^(0+1280),c
  6564   00401E  C553  F519         	movff	dtoa@w,pad@p
  6565   004022  C554  F51A         	movff	dtoa@w+1,pad@p+1
  6566   004026  EC4C  F025         	call	_pad	;wreg free
  6567   00402A  0012               	return		;funcret
  6568   00402C                     __end_of_dtoa:
  6569                           	callstack 0
  6570                           
  6571 ;; *************** function _pad *****************
  6572 ;; Defined at:
  6573 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  6576 ;;		 -> NULL(0), 
  6577 ;;  buf             2   22[COMRAM] PTR unsigned char 
  6578 ;;		 -> dbuf(80), 
  6579 ;;  p               2   24[COMRAM] int 
  6580 ;; Auto vars:     Size  Location     Type
  6581 ;;  i               2   27[COMRAM] int 
  6582 ;; Return value:  Size  Location     Type
  6583 ;;                  1    wreg      void 
  6584 ;; Registers used:
  6585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6586 ;; Tracked objects:
  6587 ;;		On entry : 0/0
  6588 ;;		On exit  : 0/0
  6589 ;;		Unchanged: 0/0
  6590 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6591 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6593 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6594 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6595 ;;Total ram usage:        9 bytes
  6596 ;; Hardware stack levels used: 1
  6597 ;; Hardware stack levels required when called: 9
  6598 ;; This function calls:
  6599 ;;		_fputc
  6600 ;;		_fputs
  6601 ;; This function is called by:
  6602 ;;		_dtoa
  6603 ;;		_efgtoa
  6604 ;; This function uses a non-reentrant model
  6605 ;;
  6606                           
  6607                           	psect	text25
  6608   004A98                     __ptext25:
  6609                           	callstack 0
  6610   004A98                     _pad:
  6611                           	callstack 111
  6612   004A98                     
  6613                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  6614   004A98  BE1A               	btfsc	(pad@p+1)^(0+1280),7,c
  6615   004A9A  EF53  F025         	goto	u4310
  6616   004A9E  EF51  F025         	goto	u4311
  6617   004AA2                     u4311:
  6618   004AA2  EF57  F025         	goto	l1887
  6619   004AA6                     u4310:
  6620   004AA6                     
  6621                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6622   004AA6  0E00               	movlw	0
  6623   004AA8  6E1A               	movwf	(pad@p+1)^(0+1280),c
  6624   004AAA  0E00               	movlw	0
  6625   004AAC  6E19               	movwf	pad@p^(0+1280),c
  6626   004AAE                     l1887:
  6627                           
  6628                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6629   004AAE  0E00               	movlw	0
  6630   004AB0  6E1D               	movwf	(pad@i+1)^(0+1280),c
  6631   004AB2  0E00               	movlw	0
  6632   004AB4  6E1C               	movwf	pad@i^(0+1280),c
  6633                           
  6634                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6635   004AB6  EF69  F025         	goto	l4979
  6636   004ABA                     l4975:
  6637                           
  6638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6639   004ABA  0E00               	movlw	0
  6640   004ABC  6E06               	movwf	(fputc@c+1)^(0+1280),c
  6641   004ABE  0E20               	movlw	32
  6642   004AC0  6E05               	movwf	fputc@c^(0+1280),c
  6643   004AC2  C515  F507         	movff	pad@fp,fputc@fp
  6644   004AC6  C516  F508         	movff	pad@fp+1,fputc@fp+1
  6645   004ACA  EC1E  F023         	call	_fputc	;wreg free
  6646   004ACE                     
  6647                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6648   004ACE  4A1C               	infsnz	pad@i^(0+1280),f,c
  6649   004AD0  2A1D               	incf	(pad@i+1)^(0+1280),f,c
  6650   004AD2                     l4979:
  6651                           
  6652                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6653   004AD2  5019               	movf	pad@p^(0+1280),w,c
  6654   004AD4  5C1C               	subwf	pad@i^(0+1280),w,c
  6655   004AD6  501D               	movf	(pad@i+1)^(0+1280),w,c
  6656   004AD8  0A80               	xorlw	128
  6657   004ADA  6E1B               	movwf	??_pad^(0+1280),c
  6658   004ADC  501A               	movf	(pad@p+1)^(0+1280),w,c
  6659   004ADE  0A80               	xorlw	128
  6660   004AE0  581B               	subwfb	??_pad^(0+1280),w,c
  6661   004AE2  A0D8               	btfss	status,0,c
  6662   004AE4  EF76  F025         	goto	u4321
  6663   004AE8  EF78  F025         	goto	u4320
  6664   004AEC                     u4321:
  6665   004AEC  EF5D  F025         	goto	l4975
  6666   004AF0                     u4320:
  6667   004AF0                     
  6668                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6669   004AF0  C517  F50E         	movff	pad@buf,fputs@s
  6670   004AF4  C518  F50F         	movff	pad@buf+1,fputs@s+1
  6671   004AF8  C515  F510         	movff	pad@fp,fputs@fp
  6672   004AFC  C516  F511         	movff	pad@fp+1,fputs@fp+1
  6673   004B00  ECC3  F026         	call	_fputs	;wreg free
  6674   004B04  0012               	return		;funcret
  6675   004B06                     __end_of_pad:
  6676                           	callstack 0
  6677                           
  6678 ;; *************** function _fputs *****************
  6679 ;; Defined at:
  6680 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  s               2   13[COMRAM] PTR const unsigned char 
  6683 ;;		 -> dbuf(80), 
  6684 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  6685 ;;		 -> NULL(0), 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  i               2   18[COMRAM] int 
  6688 ;;  c               1   17[COMRAM] unsigned char 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  2   13[COMRAM] int 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6693 ;; Tracked objects:
  6694 ;;		On entry : 0/0
  6695 ;;		On exit  : 0/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6698 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;Total ram usage:        7 bytes
  6703 ;; Hardware stack levels used: 1
  6704 ;; Hardware stack levels required when called: 8
  6705 ;; This function calls:
  6706 ;;		_fputc
  6707 ;; This function is called by:
  6708 ;;		_pad
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text26
  6713   004D86                     __ptext26:
  6714                           	callstack 0
  6715   004D86                     _fputs:
  6716                           	callstack 111
  6717   004D86  0E00               	movlw	0
  6718   004D88  6E14               	movwf	(fputs@i+1)^(0+1280),c
  6719   004D8A  0E00               	movlw	0
  6720   004D8C  6E13               	movwf	fputs@i^(0+1280),c
  6721   004D8E  EFD4  F026         	goto	l4515
  6722   004D92                     l4511:
  6723   004D92  C512  F505         	movff	fputs@c,fputc@c
  6724   004D96  6A06               	clrf	(fputc@c+1)^(0+1280),c
  6725   004D98  C510  F507         	movff	fputs@fp,fputc@fp
  6726   004D9C  C511  F508         	movff	fputs@fp+1,fputc@fp+1
  6727   004DA0  EC1E  F023         	call	_fputc	;wreg free
  6728   004DA4  4A13               	infsnz	fputs@i^(0+1280),f,c
  6729   004DA6  2A14               	incf	(fputs@i+1)^(0+1280),f,c
  6730   004DA8                     l4515:
  6731   004DA8  5013               	movf	fputs@i^(0+1280),w,c
  6732   004DAA  240E               	addwf	fputs@s^(0+1280),w,c
  6733   004DAC  6ED9               	movwf	fsr2l,c
  6734   004DAE  5014               	movf	(fputs@i+1)^(0+1280),w,c
  6735   004DB0  200F               	addwfc	(fputs@s+1)^(0+1280),w,c
  6736   004DB2  6EDA               	movwf	fsr2h,c
  6737   004DB4  50DF               	movf	indf2,w,c
  6738   004DB6  6E12               	movwf	fputs@c^(0+1280),c
  6739   004DB8  5012               	movf	fputs@c^(0+1280),w,c
  6740   004DBA  A4D8               	btfss	status,2,c
  6741   004DBC  EFE2  F026         	goto	u3591
  6742   004DC0  EFE4  F026         	goto	u3590
  6743   004DC4                     u3591:
  6744   004DC4  EFC9  F026         	goto	l4511
  6745   004DC8                     u3590:
  6746   004DC8  0012               	return		;funcret
  6747   004DCA                     __end_of_fputs:
  6748                           	callstack 0
  6749                           
  6750 ;; *************** function _fputc *****************
  6751 ;; Defined at:
  6752 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  c               2    4[COMRAM] int 
  6755 ;;  fp              2    6[COMRAM] PTR struct _IO_FILE
  6756 ;;		 -> NULL(0), 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;		None
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  2    4[COMRAM] int 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;Total ram usage:        9 bytes
  6773 ;; Hardware stack levels used: 1
  6774 ;; Hardware stack levels required when called: 7
  6775 ;; This function calls:
  6776 ;;		_putch
  6777 ;; This function is called by:
  6778 ;;		_pad
  6779 ;;		_vfpfcnvrt
  6780 ;;		_fputs
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           	psect	text27
  6785   00463C                     __ptext27:
  6786                           	callstack 0
  6787   00463C                     _fputc:
  6788                           	callstack 114
  6789   00463C  5007               	movf	fputc@fp^(0+1280),w,c
  6790   00463E  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
  6791   004640  B4D8               	btfsc	status,2,c
  6792   004642  EF25  F023         	goto	u3161
  6793   004646  EF27  F023         	goto	u3160
  6794   00464A                     u3161:
  6795   00464A  EF30  F023         	goto	l4297
  6796   00464E                     u3160:
  6797   00464E  5007               	movf	fputc@fp^(0+1280),w,c
  6798   004650  1008               	iorwf	(fputc@fp+1)^(0+1280),w,c
  6799   004652  A4D8               	btfss	status,2,c
  6800   004654  EF2E  F023         	goto	u3171
  6801   004658  EF30  F023         	goto	u3170
  6802   00465C                     u3171:
  6803   00465C  EF35  F023         	goto	l4299
  6804   004660                     u3170:
  6805   004660                     l4297:
  6806   004660  5005               	movf	fputc@c^(0+1280),w,c
  6807   004662  ECD6  F028         	call	_putch
  6808   004666  EF82  F023         	goto	l2059
  6809   00466A                     l4299:
  6810   00466A  EE20 F00A          	lfsr	2,10
  6811   00466E  5007               	movf	fputc@fp^(0+1280),w,c
  6812   004670  26D9               	addwf	fsr2l,f,c
  6813   004672  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  6814   004674  22DA               	addwfc	fsr2h,f,c
  6815   004676  50DE               	movf	postinc2,w,c
  6816   004678  10DE               	iorwf	postinc2,w,c
  6817   00467A  B4D8               	btfsc	status,2,c
  6818   00467C  EF42  F023         	goto	u3181
  6819   004680  EF44  F023         	goto	u3180
  6820   004684                     u3181:
  6821   004684  EF5F  F023         	goto	l4303
  6822   004688                     u3180:
  6823   004688  EE20 F00A          	lfsr	2,10
  6824   00468C  5007               	movf	fputc@fp^(0+1280),w,c
  6825   00468E  26D9               	addwf	fsr2l,f,c
  6826   004690  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  6827   004692  22DA               	addwfc	fsr2h,f,c
  6828   004694  EE10 F003          	lfsr	1,3
  6829   004698  5007               	movf	fputc@fp^(0+1280),w,c
  6830   00469A  26E1               	addwf	fsr1l,f,c
  6831   00469C  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  6832   00469E  22E2               	addwfc	fsr1h,f,c
  6833   0046A0  50DE               	movf	postinc2,w,c
  6834   0046A2  5CE6               	subwf	postinc1,w,c
  6835   0046A4  50E6               	movf	postinc1,w,c
  6836   0046A6  0A80               	xorlw	128
  6837   0046A8  6E0D               	movwf	(??_fputc+4)^(0+1280),c
  6838   0046AA  50DE               	movf	postinc2,w,c
  6839   0046AC  0A80               	xorlw	128
  6840   0046AE  580D               	subwfb	(??_fputc+4)^(0+1280),w,c
  6841   0046B0  B0D8               	btfsc	status,0,c
  6842   0046B2  EF5D  F023         	goto	u3191
  6843   0046B6  EF5F  F023         	goto	u3190
  6844   0046BA                     u3191:
  6845   0046BA  EF82  F023         	goto	l2059
  6846   0046BE                     u3190:
  6847   0046BE                     l4303:
  6848   0046BE  EE20 F003          	lfsr	2,3
  6849   0046C2  5007               	movf	fputc@fp^(0+1280),w,c
  6850   0046C4  26D9               	addwf	fsr2l,f,c
  6851   0046C6  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  6852   0046C8  22DA               	addwfc	fsr2h,f,c
  6853   0046CA  C4DE F509          	movff	postinc2,??_fputc
  6854   0046CE  C4DD F50A          	movff	postdec2,??_fputc+1
  6855   0046D2  C507  F4D9         	movff	fputc@fp,fsr2l
  6856   0046D6  C508  F4DA         	movff	fputc@fp+1,fsr2h
  6857   0046DA  C4DE F50B          	movff	postinc2,??_fputc+2
  6858   0046DE  C4DD F50C          	movff	postdec2,??_fputc+3
  6859   0046E2  5009               	movf	??_fputc^(0+1280),w,c
  6860   0046E4  240B               	addwf	(??_fputc+2)^(0+1280),w,c
  6861   0046E6  6ED9               	movwf	fsr2l,c
  6862   0046E8  500A               	movf	(??_fputc+1)^(0+1280),w,c
  6863   0046EA  200C               	addwfc	(??_fputc+3)^(0+1280),w,c
  6864   0046EC  6EDA               	movwf	fsr2h,c
  6865   0046EE  C505  F4DF         	movff	fputc@c,indf2
  6866   0046F2  EE20 F003          	lfsr	2,3
  6867   0046F6  5007               	movf	fputc@fp^(0+1280),w,c
  6868   0046F8  26D9               	addwf	fsr2l,f,c
  6869   0046FA  5008               	movf	(fputc@fp+1)^(0+1280),w,c
  6870   0046FC  22DA               	addwfc	fsr2h,f,c
  6871   0046FE  2ADE               	incf	postinc2,f,c
  6872   004700  0E00               	movlw	0
  6873   004702  22DD               	addwfc	postdec2,f,c
  6874   004704                     l2059:
  6875   004704  0012               	return		;funcret
  6876   004706                     __end_of_fputc:
  6877                           	callstack 0
  6878                           
  6879 ;; *************** function _putch *****************
  6880 ;; Defined at:
  6881 ;;		line 299 in file "mcc_generated_files/uart/src/uart1.c"
  6882 ;; Parameters:    Size  Location     Type
  6883 ;;  txData          1    wreg     unsigned char 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  txData          1    3[COMRAM] unsigned char 
  6886 ;; Return value:  Size  Location     Type
  6887 ;;                  1    wreg      void 
  6888 ;; Registers used:
  6889 ;;		wreg, status,2, cstack
  6890 ;; Tracked objects:
  6891 ;;		On entry : 0/0
  6892 ;;		On exit  : 0/0
  6893 ;;		Unchanged: 0/0
  6894 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6899 ;;Total ram usage:        1 bytes
  6900 ;; Hardware stack levels used: 1
  6901 ;; Hardware stack levels required when called: 6
  6902 ;; This function calls:
  6903 ;;		_UART1_IsTxReady
  6904 ;;		_UART1_Write
  6905 ;; This function is called by:
  6906 ;;		_fputc
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text28
  6911   0051AC                     __ptext28:
  6912                           	callstack 0
  6913   0051AC                     _putch:
  6914                           	callstack 114
  6915                           
  6916                           ;incstack = 0
  6917                           ;putch@txData stored from wreg
  6918   0051AC  6E04               	movwf	putch@txData^(0+1280),c
  6919   0051AE                     l4287:
  6920   0051AE  EC3B  F028         	call	_UART1_IsTxReady	;wreg free
  6921   0051B2  0900               	iorlw	0
  6922   0051B4  B4D8               	btfsc	status,2,c
  6923   0051B6  EFDF  F028         	goto	u3151
  6924   0051BA  EFE1  F028         	goto	u3150
  6925   0051BE                     u3151:
  6926   0051BE  EFD7  F028         	goto	l4287
  6927   0051C2                     u3150:
  6928   0051C2                     
  6929                           ;mcc_generated_files/uart/src/uart1.c: 302:     return UART1_Write(txData);;	Return valu
      +                          e of _putch is never used
  6930   0051C2  5004               	movf	putch@txData^(0+1280),w,c
  6931   0051C4  EC8D  F029         	call	_UART1_Write
  6932   0051C8  0012               	return		;funcret
  6933   0051CA                     __end_of_putch:
  6934                           	callstack 0
  6935                           
  6936 ;; *************** function _UART1_Write *****************
  6937 ;; Defined at:
  6938 ;;		line 287 in file "mcc_generated_files/uart/src/uart1.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  txData          1    wreg     unsigned char 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  txData          1    2[COMRAM] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  1    wreg      void 
  6945 ;; Registers used:
  6946 ;;		wreg
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;Total ram usage:        1 bytes
  6957 ;; Hardware stack levels used: 1
  6958 ;; Hardware stack levels required when called: 5
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_putch
  6963 ;; This function uses a non-reentrant model
  6964 ;;
  6965                           
  6966                           	psect	text29
  6967   00531A                     __ptext29:
  6968                           	callstack 0
  6969   00531A                     _UART1_Write:
  6970                           	callstack 114
  6971                           
  6972                           ;incstack = 0
  6973                           ;UART1_Write@txData stored from wreg
  6974   00531A  6E03               	movwf	UART1_Write@txData^(0+1280),c
  6975   00531C                     
  6976                           ;mcc_generated_files/uart/src/uart1.c: 287: void UART1_Write(uint8_t txData);mcc_generat
      +                          ed_files/uart/src/uart1.c: 288: {;mcc_generated_files/uart/src/uart1.c: 289:     U1TXB =
      +                           txData;
  6977   00531C  C503  F2A3         	movff	UART1_Write@txData,675	;volatile
  6978   005320  0012               	return		;funcret
  6979   005322                     __end_of_UART1_Write:
  6980                           	callstack 0
  6981                           
  6982 ;; *************** function _UART1_IsTxReady *****************
  6983 ;; Defined at:
  6984 ;;		line 247 in file "mcc_generated_files/uart/src/uart1.c"
  6985 ;; Parameters:    Size  Location     Type
  6986 ;;		None
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;		None
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  1    wreg      _Bool 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7001 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7002 ;;Total ram usage:        1 bytes
  7003 ;; Hardware stack levels used: 1
  7004 ;; Hardware stack levels required when called: 5
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_putch
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text30
  7013   005076                     __ptext30:
  7014                           	callstack 0
  7015   005076                     _UART1_IsTxReady:
  7016                           	callstack 114
  7017   005076                     
  7018                           ;mcc_generated_files/uart/src/uart1.c: 249:     return (_Bool)(U1FIFObits.TXBE && U1CON0
      +                          bits.TXEN);
  7019   005076  0E00               	movlw	0
  7020   005078  6E03               	movwf	_UART1_IsTxReady$1897^(0+1280),c
  7021   00507A  0102               	movlb	2	; () banked
  7022   00507C  ABB0               	btfss	176,5,b	;volatile
  7023   00507E  EF43  F028         	goto	u3131
  7024   005082  EF45  F028         	goto	u3130
  7025   005086                     u3131:
  7026   005086  EF4E  F028         	goto	l896
  7027   00508A                     u3130:
  7028   00508A                     
  7029                           ; BSR set to: 2
  7030   00508A  ABAB               	btfss	171,5,b	;volatile
  7031   00508C  EF4A  F028         	goto	u3141
  7032   005090  EF4C  F028         	goto	u3140
  7033   005094                     u3141:
  7034   005094  EF4E  F028         	goto	l896
  7035   005098                     u3140:
  7036   005098                     
  7037                           ; BSR set to: 2
  7038   005098  0E01               	movlw	1
  7039   00509A  6E03               	movwf	_UART1_IsTxReady$1897^(0+1280),c
  7040   00509C                     l896:
  7041                           
  7042                           ; BSR set to: 2
  7043   00509C  5003               	movf	_UART1_IsTxReady$1897^(0+1280),w,c
  7044   00509E                     
  7045                           ; BSR set to: 2
  7046   00509E  0012               	return		;funcret
  7047   0050A0                     __end_of_UART1_IsTxReady:
  7048                           	callstack 0
  7049                           
  7050 ;; *************** function ___almod *****************
  7051 ;; Defined at:
  7052 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\almod.c"
  7053 ;; Parameters:    Size  Location     Type
  7054 ;;  dividend        4    2[COMRAM] long 
  7055 ;;  divisor         4    6[COMRAM] long 
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;  sign            1   11[COMRAM] unsigned char 
  7058 ;;  counter         1   10[COMRAM] unsigned char 
  7059 ;; Return value:  Size  Location     Type
  7060 ;;                  4    2[COMRAM] long 
  7061 ;; Registers used:
  7062 ;;		wreg, status,2, status,0
  7063 ;; Tracked objects:
  7064 ;;		On entry : 0/0
  7065 ;;		On exit  : 0/0
  7066 ;;		Unchanged: 0/0
  7067 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7068 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7071 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7072 ;;Total ram usage:       10 bytes
  7073 ;; Hardware stack levels used: 1
  7074 ;; Hardware stack levels required when called: 5
  7075 ;; This function calls:
  7076 ;;		Nothing
  7077 ;; This function is called by:
  7078 ;;		_dtoa
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           	psect	text31
  7083   004550                     __ptext31:
  7084                           	callstack 0
  7085   004550                     ___almod:
  7086                           	callstack 115
  7087   004550  0E00               	movlw	0
  7088   004552  6E0C               	movwf	___almod@sign^(0+1280),c
  7089   004554  BE06               	btfsc	(___almod@dividend+3)^(0+1280),7,c
  7090   004556  EFB1  F022         	goto	u3670
  7091   00455A  EFAF  F022         	goto	u3671
  7092   00455E                     u3671:
  7093   00455E  EFBB  F022         	goto	l4579
  7094   004562                     u3670:
  7095   004562  1E06               	comf	(___almod@dividend+3)^(0+1280),f,c
  7096   004564  1E05               	comf	(___almod@dividend+2)^(0+1280),f,c
  7097   004566  1E04               	comf	(___almod@dividend+1)^(0+1280),f,c
  7098   004568  6C03               	negf	___almod@dividend^(0+1280),c
  7099   00456A  0E00               	movlw	0
  7100   00456C  2204               	addwfc	(___almod@dividend+1)^(0+1280),f,c
  7101   00456E  2205               	addwfc	(___almod@dividend+2)^(0+1280),f,c
  7102   004570  2206               	addwfc	(___almod@dividend+3)^(0+1280),f,c
  7103   004572  0E01               	movlw	1
  7104   004574  6E0C               	movwf	___almod@sign^(0+1280),c
  7105   004576                     l4579:
  7106   004576  BE0A               	btfsc	(___almod@divisor+3)^(0+1280),7,c
  7107   004578  EFC2  F022         	goto	u3680
  7108   00457C  EFC0  F022         	goto	u3681
  7109   004580                     u3681:
  7110   004580  EFCA  F022         	goto	l4583
  7111   004584                     u3680:
  7112   004584  1E0A               	comf	(___almod@divisor+3)^(0+1280),f,c
  7113   004586  1E09               	comf	(___almod@divisor+2)^(0+1280),f,c
  7114   004588  1E08               	comf	(___almod@divisor+1)^(0+1280),f,c
  7115   00458A  6C07               	negf	___almod@divisor^(0+1280),c
  7116   00458C  0E00               	movlw	0
  7117   00458E  2208               	addwfc	(___almod@divisor+1)^(0+1280),f,c
  7118   004590  2209               	addwfc	(___almod@divisor+2)^(0+1280),f,c
  7119   004592  220A               	addwfc	(___almod@divisor+3)^(0+1280),f,c
  7120   004594                     l4583:
  7121   004594  5007               	movf	___almod@divisor^(0+1280),w,c
  7122   004596  1008               	iorwf	(___almod@divisor+1)^(0+1280),w,c
  7123   004598  1009               	iorwf	(___almod@divisor+2)^(0+1280),w,c
  7124   00459A  100A               	iorwf	(___almod@divisor+3)^(0+1280),w,c
  7125   00459C  B4D8               	btfsc	status,2,c
  7126   00459E  EFD3  F022         	goto	u3691
  7127   0045A2  EFD5  F022         	goto	u3690
  7128   0045A6                     u3691:
  7129   0045A6  EF05  F023         	goto	l4599
  7130   0045AA                     u3690:
  7131   0045AA  0E01               	movlw	1
  7132   0045AC  6E0B               	movwf	___almod@counter^(0+1280),c
  7133   0045AE  EFDF  F022         	goto	l4589
  7134   0045B2                     l4587:
  7135   0045B2  90D8               	bcf	status,0,c
  7136   0045B4  3607               	rlcf	___almod@divisor^(0+1280),f,c
  7137   0045B6  3608               	rlcf	(___almod@divisor+1)^(0+1280),f,c
  7138   0045B8  3609               	rlcf	(___almod@divisor+2)^(0+1280),f,c
  7139   0045BA  360A               	rlcf	(___almod@divisor+3)^(0+1280),f,c
  7140   0045BC  2A0B               	incf	___almod@counter^(0+1280),f,c
  7141   0045BE                     l4589:
  7142   0045BE  AE0A               	btfss	(___almod@divisor+3)^(0+1280),7,c
  7143   0045C0  EFE4  F022         	goto	u3701
  7144   0045C4  EFE6  F022         	goto	u3700
  7145   0045C8                     u3701:
  7146   0045C8  EFD9  F022         	goto	l4587
  7147   0045CC                     u3700:
  7148   0045CC                     l4591:
  7149   0045CC  5007               	movf	___almod@divisor^(0+1280),w,c
  7150   0045CE  5C03               	subwf	___almod@dividend^(0+1280),w,c
  7151   0045D0  5008               	movf	(___almod@divisor+1)^(0+1280),w,c
  7152   0045D2  5804               	subwfb	(___almod@dividend+1)^(0+1280),w,c
  7153   0045D4  5009               	movf	(___almod@divisor+2)^(0+1280),w,c
  7154   0045D6  5805               	subwfb	(___almod@dividend+2)^(0+1280),w,c
  7155   0045D8  500A               	movf	(___almod@divisor+3)^(0+1280),w,c
  7156   0045DA  5806               	subwfb	(___almod@dividend+3)^(0+1280),w,c
  7157   0045DC  A0D8               	btfss	status,0,c
  7158   0045DE  EFF3  F022         	goto	u3711
  7159   0045E2  EFF5  F022         	goto	u3710
  7160   0045E6                     u3711:
  7161   0045E6  EFFD  F022         	goto	l4595
  7162   0045EA                     u3710:
  7163   0045EA  5007               	movf	___almod@divisor^(0+1280),w,c
  7164   0045EC  5E03               	subwf	___almod@dividend^(0+1280),f,c
  7165   0045EE  5008               	movf	(___almod@divisor+1)^(0+1280),w,c
  7166   0045F0  5A04               	subwfb	(___almod@dividend+1)^(0+1280),f,c
  7167   0045F2  5009               	movf	(___almod@divisor+2)^(0+1280),w,c
  7168   0045F4  5A05               	subwfb	(___almod@dividend+2)^(0+1280),f,c
  7169   0045F6  500A               	movf	(___almod@divisor+3)^(0+1280),w,c
  7170   0045F8  5A06               	subwfb	(___almod@dividend+3)^(0+1280),f,c
  7171   0045FA                     l4595:
  7172   0045FA  90D8               	bcf	status,0,c
  7173   0045FC  320A               	rrcf	(___almod@divisor+3)^(0+1280),f,c
  7174   0045FE  3209               	rrcf	(___almod@divisor+2)^(0+1280),f,c
  7175   004600  3208               	rrcf	(___almod@divisor+1)^(0+1280),f,c
  7176   004602  3207               	rrcf	___almod@divisor^(0+1280),f,c
  7177   004604  2E0B               	decfsz	___almod@counter^(0+1280),f,c
  7178   004606  EFE6  F022         	goto	l4591
  7179   00460A                     l4599:
  7180   00460A  500C               	movf	___almod@sign^(0+1280),w,c
  7181   00460C  B4D8               	btfsc	status,2,c
  7182   00460E  EF0B  F023         	goto	u3721
  7183   004612  EF0D  F023         	goto	u3720
  7184   004616                     u3721:
  7185   004616  EF15  F023         	goto	l4603
  7186   00461A                     u3720:
  7187   00461A  1E06               	comf	(___almod@dividend+3)^(0+1280),f,c
  7188   00461C  1E05               	comf	(___almod@dividend+2)^(0+1280),f,c
  7189   00461E  1E04               	comf	(___almod@dividend+1)^(0+1280),f,c
  7190   004620  6C03               	negf	___almod@dividend^(0+1280),c
  7191   004622  0E00               	movlw	0
  7192   004624  2204               	addwfc	(___almod@dividend+1)^(0+1280),f,c
  7193   004626  2205               	addwfc	(___almod@dividend+2)^(0+1280),f,c
  7194   004628  2206               	addwfc	(___almod@dividend+3)^(0+1280),f,c
  7195   00462A                     l4603:
  7196   00462A  C503  F503         	movff	___almod@dividend,?___almod
  7197   00462E  C504  F504         	movff	___almod@dividend+1,?___almod+1
  7198   004632  C505  F505         	movff	___almod@dividend+2,?___almod+2
  7199   004636  C506  F506         	movff	___almod@dividend+3,?___almod+3
  7200   00463A  0012               	return		;funcret
  7201   00463C                     __end_of___almod:
  7202                           	callstack 0
  7203                           
  7204 ;; *************** function ___aldiv *****************
  7205 ;; Defined at:
  7206 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  dividend        4    2[COMRAM] long 
  7209 ;;  divisor         4    6[COMRAM] long 
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;  quotient        4   12[COMRAM] long 
  7212 ;;  sign            1   11[COMRAM] unsigned char 
  7213 ;;  counter         1   10[COMRAM] unsigned char 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  4    2[COMRAM] long 
  7216 ;; Registers used:
  7217 ;;		wreg, status,2, status,0
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7224 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7226 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7227 ;;Total ram usage:       14 bytes
  7228 ;; Hardware stack levels used: 1
  7229 ;; Hardware stack levels required when called: 5
  7230 ;; This function calls:
  7231 ;;		Nothing
  7232 ;; This function is called by:
  7233 ;;		_dtoa
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237                           	psect	text32
  7238   00413A                     __ptext32:
  7239                           	callstack 0
  7240   00413A                     ___aldiv:
  7241                           	callstack 115
  7242   00413A  0E00               	movlw	0
  7243   00413C  6E0C               	movwf	___aldiv@sign^(0+1280),c
  7244   00413E  BE0A               	btfsc	(___aldiv@divisor+3)^(0+1280),7,c
  7245   004140  EFA6  F020         	goto	u3610
  7246   004144  EFA4  F020         	goto	u3611
  7247   004148                     u3611:
  7248   004148  EFB0  F020         	goto	l4535
  7249   00414C                     u3610:
  7250   00414C  1E0A               	comf	(___aldiv@divisor+3)^(0+1280),f,c
  7251   00414E  1E09               	comf	(___aldiv@divisor+2)^(0+1280),f,c
  7252   004150  1E08               	comf	(___aldiv@divisor+1)^(0+1280),f,c
  7253   004152  6C07               	negf	___aldiv@divisor^(0+1280),c
  7254   004154  0E00               	movlw	0
  7255   004156  2208               	addwfc	(___aldiv@divisor+1)^(0+1280),f,c
  7256   004158  2209               	addwfc	(___aldiv@divisor+2)^(0+1280),f,c
  7257   00415A  220A               	addwfc	(___aldiv@divisor+3)^(0+1280),f,c
  7258   00415C  0E01               	movlw	1
  7259   00415E  6E0C               	movwf	___aldiv@sign^(0+1280),c
  7260   004160                     l4535:
  7261   004160  BE06               	btfsc	(___aldiv@dividend+3)^(0+1280),7,c
  7262   004162  EFB7  F020         	goto	u3620
  7263   004166  EFB5  F020         	goto	u3621
  7264   00416A                     u3621:
  7265   00416A  EFC1  F020         	goto	l4541
  7266   00416E                     u3620:
  7267   00416E  1E06               	comf	(___aldiv@dividend+3)^(0+1280),f,c
  7268   004170  1E05               	comf	(___aldiv@dividend+2)^(0+1280),f,c
  7269   004172  1E04               	comf	(___aldiv@dividend+1)^(0+1280),f,c
  7270   004174  6C03               	negf	___aldiv@dividend^(0+1280),c
  7271   004176  0E00               	movlw	0
  7272   004178  2204               	addwfc	(___aldiv@dividend+1)^(0+1280),f,c
  7273   00417A  2205               	addwfc	(___aldiv@dividend+2)^(0+1280),f,c
  7274   00417C  2206               	addwfc	(___aldiv@dividend+3)^(0+1280),f,c
  7275   00417E  0E01               	movlw	1
  7276   004180  1A0C               	xorwf	___aldiv@sign^(0+1280),f,c
  7277   004182                     l4541:
  7278   004182  0E00               	movlw	0
  7279   004184  6E0D               	movwf	___aldiv@quotient^(0+1280),c
  7280   004186  0E00               	movlw	0
  7281   004188  6E0E               	movwf	(___aldiv@quotient+1)^(0+1280),c
  7282   00418A  0E00               	movlw	0
  7283   00418C  6E0F               	movwf	(___aldiv@quotient+2)^(0+1280),c
  7284   00418E  0E00               	movlw	0
  7285   004190  6E10               	movwf	(___aldiv@quotient+3)^(0+1280),c
  7286   004192  5007               	movf	___aldiv@divisor^(0+1280),w,c
  7287   004194  1008               	iorwf	(___aldiv@divisor+1)^(0+1280),w,c
  7288   004196  1009               	iorwf	(___aldiv@divisor+2)^(0+1280),w,c
  7289   004198  100A               	iorwf	(___aldiv@divisor+3)^(0+1280),w,c
  7290   00419A  B4D8               	btfsc	status,2,c
  7291   00419C  EFD2  F020         	goto	u3631
  7292   0041A0  EFD4  F020         	goto	u3630
  7293   0041A4                     u3631:
  7294   0041A4  EF0A  F021         	goto	l4563
  7295   0041A8                     u3630:
  7296   0041A8  0E01               	movlw	1
  7297   0041AA  6E0B               	movwf	___aldiv@counter^(0+1280),c
  7298   0041AC  EFDE  F020         	goto	l4549
  7299   0041B0                     l4547:
  7300   0041B0  90D8               	bcf	status,0,c
  7301   0041B2  3607               	rlcf	___aldiv@divisor^(0+1280),f,c
  7302   0041B4  3608               	rlcf	(___aldiv@divisor+1)^(0+1280),f,c
  7303   0041B6  3609               	rlcf	(___aldiv@divisor+2)^(0+1280),f,c
  7304   0041B8  360A               	rlcf	(___aldiv@divisor+3)^(0+1280),f,c
  7305   0041BA  2A0B               	incf	___aldiv@counter^(0+1280),f,c
  7306   0041BC                     l4549:
  7307   0041BC  AE0A               	btfss	(___aldiv@divisor+3)^(0+1280),7,c
  7308   0041BE  EFE3  F020         	goto	u3641
  7309   0041C2  EFE5  F020         	goto	u3640
  7310   0041C6                     u3641:
  7311   0041C6  EFD8  F020         	goto	l4547
  7312   0041CA                     u3640:
  7313   0041CA                     l4551:
  7314   0041CA  90D8               	bcf	status,0,c
  7315   0041CC  360D               	rlcf	___aldiv@quotient^(0+1280),f,c
  7316   0041CE  360E               	rlcf	(___aldiv@quotient+1)^(0+1280),f,c
  7317   0041D0  360F               	rlcf	(___aldiv@quotient+2)^(0+1280),f,c
  7318   0041D2  3610               	rlcf	(___aldiv@quotient+3)^(0+1280),f,c
  7319   0041D4  5007               	movf	___aldiv@divisor^(0+1280),w,c
  7320   0041D6  5C03               	subwf	___aldiv@dividend^(0+1280),w,c
  7321   0041D8  5008               	movf	(___aldiv@divisor+1)^(0+1280),w,c
  7322   0041DA  5804               	subwfb	(___aldiv@dividend+1)^(0+1280),w,c
  7323   0041DC  5009               	movf	(___aldiv@divisor+2)^(0+1280),w,c
  7324   0041DE  5805               	subwfb	(___aldiv@dividend+2)^(0+1280),w,c
  7325   0041E0  500A               	movf	(___aldiv@divisor+3)^(0+1280),w,c
  7326   0041E2  5806               	subwfb	(___aldiv@dividend+3)^(0+1280),w,c
  7327   0041E4  A0D8               	btfss	status,0,c
  7328   0041E6  EFF7  F020         	goto	u3651
  7329   0041EA  EFF9  F020         	goto	u3650
  7330   0041EE                     u3651:
  7331   0041EE  EF02  F021         	goto	l4559
  7332   0041F2                     u3650:
  7333   0041F2  5007               	movf	___aldiv@divisor^(0+1280),w,c
  7334   0041F4  5E03               	subwf	___aldiv@dividend^(0+1280),f,c
  7335   0041F6  5008               	movf	(___aldiv@divisor+1)^(0+1280),w,c
  7336   0041F8  5A04               	subwfb	(___aldiv@dividend+1)^(0+1280),f,c
  7337   0041FA  5009               	movf	(___aldiv@divisor+2)^(0+1280),w,c
  7338   0041FC  5A05               	subwfb	(___aldiv@dividend+2)^(0+1280),f,c
  7339   0041FE  500A               	movf	(___aldiv@divisor+3)^(0+1280),w,c
  7340   004200  5A06               	subwfb	(___aldiv@dividend+3)^(0+1280),f,c
  7341   004202  800D               	bsf	___aldiv@quotient^(0+1280),0,c
  7342   004204                     l4559:
  7343   004204  90D8               	bcf	status,0,c
  7344   004206  320A               	rrcf	(___aldiv@divisor+3)^(0+1280),f,c
  7345   004208  3209               	rrcf	(___aldiv@divisor+2)^(0+1280),f,c
  7346   00420A  3208               	rrcf	(___aldiv@divisor+1)^(0+1280),f,c
  7347   00420C  3207               	rrcf	___aldiv@divisor^(0+1280),f,c
  7348   00420E  2E0B               	decfsz	___aldiv@counter^(0+1280),f,c
  7349   004210  EFE5  F020         	goto	l4551
  7350   004214                     l4563:
  7351   004214  500C               	movf	___aldiv@sign^(0+1280),w,c
  7352   004216  B4D8               	btfsc	status,2,c
  7353   004218  EF10  F021         	goto	u3661
  7354   00421C  EF12  F021         	goto	u3660
  7355   004220                     u3661:
  7356   004220  EF1A  F021         	goto	l4567
  7357   004224                     u3660:
  7358   004224  1E10               	comf	(___aldiv@quotient+3)^(0+1280),f,c
  7359   004226  1E0F               	comf	(___aldiv@quotient+2)^(0+1280),f,c
  7360   004228  1E0E               	comf	(___aldiv@quotient+1)^(0+1280),f,c
  7361   00422A  6C0D               	negf	___aldiv@quotient^(0+1280),c
  7362   00422C  0E00               	movlw	0
  7363   00422E  220E               	addwfc	(___aldiv@quotient+1)^(0+1280),f,c
  7364   004230  220F               	addwfc	(___aldiv@quotient+2)^(0+1280),f,c
  7365   004232  2210               	addwfc	(___aldiv@quotient+3)^(0+1280),f,c
  7366   004234                     l4567:
  7367   004234  C50D  F503         	movff	___aldiv@quotient,?___aldiv
  7368   004238  C50E  F504         	movff	___aldiv@quotient+1,?___aldiv+1
  7369   00423C  C50F  F505         	movff	___aldiv@quotient+2,?___aldiv+2
  7370   004240  C510  F506         	movff	___aldiv@quotient+3,?___aldiv+3
  7371   004244  0012               	return		;funcret
  7372   004246                     __end_of___aldiv:
  7373                           	callstack 0
  7374                           
  7375 ;; *************** function _closeHand *****************
  7376 ;; Defined at:
  7377 ;;		line 181 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  7378 ;; Parameters:    Size  Location     Type
  7379 ;;		None
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;		None
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7395 ;;Total ram usage:        0 bytes
  7396 ;; Hardware stack levels used: 1
  7397 ;; Hardware stack levels required when called: 8
  7398 ;; This function calls:
  7399 ;;		_set3
  7400 ;; This function is called by:
  7401 ;;		_ejecutarModoAutomatico
  7402 ;; This function uses a non-reentrant model
  7403 ;;
  7404                           
  7405                           	psect	text33
  7406   0050F2                     __ptext33:
  7407                           	callstack 0
  7408   0050F2                     _closeHand:
  7409                           	callstack 116
  7410   0050F2                     
  7411                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 182:     if (!detener)
  7412   0050F2  0105               	movlb	5	; () banked
  7413   0050F4  51EE               	movf	_detener& (0+255),w,b	;volatile
  7414   0050F6  A4D8               	btfss	status,2,c
  7415   0050F8  EF80  F028         	goto	u6961
  7416   0050FC  EF82  F028         	goto	u6960
  7417   005100                     u6961:
  7418   005100  EF8C  F028         	goto	l1162
  7419   005104                     u6960:
  7420   005104                     
  7421                           ; BSR set to: 5
  7422                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 183:     {;C:/Users/jhon-/MPLABXP
      +                          rojects/robot.X/ServoControl.c: 184:         set3(10.0);
  7423   005104  0E00               	movlw	0
  7424   005106  6F6C               	movwf	set3@theta3_desired& (0+255),b
  7425   005108  0E00               	movlw	0
  7426   00510A  6F6D               	movwf	(set3@theta3_desired+1)& (0+255),b
  7427   00510C  0E20               	movlw	32
  7428   00510E  6F6E               	movwf	(set3@theta3_desired+2)& (0+255),b
  7429   005110  0E41               	movlw	65
  7430   005112  6F6F               	movwf	(set3@theta3_desired+3)& (0+255),b
  7431   005114  EC55  F01B         	call	_set3	;wreg free
  7432   005118                     l1162:
  7433   005118  0012               	return		;funcret
  7434   00511A                     __end_of_closeHand:
  7435                           	callstack 0
  7436                           
  7437 ;; *************** function _set3 *****************
  7438 ;; Defined at:
  7439 ;;		line 150 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  7440 ;; Parameters:    Size  Location     Type
  7441 ;;  theta3_desir    4   12[BANK5 ] float 
  7442 ;; Auto vars:     Size  Location     Type
  7443 ;;		None
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  1    wreg      void 
  7446 ;; Registers used:
  7447 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7453 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7455 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7456 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7457 ;;Total ram usage:        6 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; Hardware stack levels required when called: 7
  7460 ;; This function calls:
  7461 ;;		___fladd
  7462 ;;		___flge
  7463 ;;		___flsub
  7464 ;;		___fltol
  7465 ;;		___xxtofl
  7466 ;;		_abs
  7467 ;;		_setServoAngle
  7468 ;; This function is called by:
  7469 ;;		_openHand
  7470 ;;		_closeHand
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text34
  7475   0036AA                     __ptext34:
  7476                           	callstack 0
  7477   0036AA                     _set3:
  7478                           	callstack 116
  7479   0036AA                     
  7480                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 151:     if (theta3_desired < 0.0
      +                          ) {
  7481   0036AA  0105               	movlb	5	; () banked
  7482   0036AC  BF6F               	btfsc	(set3@theta3_desired+3)& (0+255),7,b
  7483   0036AE  EF5D  F01B         	goto	u6890
  7484   0036B2  EF5B  F01B         	goto	u6891
  7485   0036B6                     u6891:
  7486   0036B6  EF67  F01B         	goto	l6873
  7487   0036BA                     u6890:
  7488   0036BA                     
  7489                           ; BSR set to: 5
  7490                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 152:     theta3_desired = 0.0;
  7491   0036BA  0E00               	movlw	0
  7492   0036BC  6F6C               	movwf	set3@theta3_desired& (0+255),b
  7493   0036BE  0E00               	movlw	0
  7494   0036C0  6F6D               	movwf	(set3@theta3_desired+1)& (0+255),b
  7495   0036C2  0E00               	movlw	0
  7496   0036C4  6F6E               	movwf	(set3@theta3_desired+2)& (0+255),b
  7497   0036C6  0E00               	movlw	0
  7498   0036C8  6F6F               	movwf	(set3@theta3_desired+3)& (0+255),b
  7499                           
  7500                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 153:     } else if (theta3_desire
      +                          d > 90.0) {
  7501   0036CA  EF0C  F01C         	goto	l6889
  7502   0036CE                     l6873:
  7503                           
  7504                           ; BSR set to: 5
  7505   0036CE  0E00               	movlw	0
  7506   0036D0  6F60               	movwf	___flge@ff1& (0+255),b
  7507   0036D2  0E00               	movlw	0
  7508   0036D4  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7509   0036D6  0EB4               	movlw	180
  7510   0036D8  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7511   0036DA  0E42               	movlw	66
  7512   0036DC  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7513   0036DE  C56C  F564         	movff	set3@theta3_desired,___flge@ff2
  7514   0036E2  C56D  F565         	movff	set3@theta3_desired+1,___flge@ff2+1
  7515   0036E6  C56E  F566         	movff	set3@theta3_desired+2,___flge@ff2+2
  7516   0036EA  C56F  F567         	movff	set3@theta3_desired+3,___flge@ff2+3
  7517   0036EE  EC23  F021         	call	___flge	;wreg free
  7518   0036F2  0105               	movlb	5	; () banked
  7519   0036F4  B0D8               	btfsc	status,0,c
  7520   0036F6  EF7F  F01B         	goto	u6901
  7521   0036FA  EF81  F01B         	goto	u6900
  7522   0036FE                     u6901:
  7523   0036FE  EF0C  F01C         	goto	l6889
  7524   003702                     u6900:
  7525   003702                     
  7526                           ; BSR set to: 5
  7527                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 154:         theta3_desired = 90.
      +                          0;
  7528   003702  0E00               	movlw	0
  7529   003704  6F6C               	movwf	set3@theta3_desired& (0+255),b
  7530   003706  0E00               	movlw	0
  7531   003708  6F6D               	movwf	(set3@theta3_desired+1)& (0+255),b
  7532   00370A  0EB4               	movlw	180
  7533   00370C  6F6E               	movwf	(set3@theta3_desired+2)& (0+255),b
  7534   00370E  0E42               	movlw	66
  7535   003710  6F6F               	movwf	(set3@theta3_desired+3)& (0+255),b
  7536   003712  EF0C  F01C         	goto	l6889
  7537   003716                     l6877:
  7538                           
  7539                           ; BSR set to: 5
  7540                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 157:         if (theta3 < theta3_
      +                          desired) theta3 += 1.0;
  7541   003716  C5D5  F560         	movff	_theta3,___flge@ff1
  7542   00371A  C5D6  F561         	movff	_theta3+1,___flge@ff1+1
  7543   00371E  C5D7  F562         	movff	_theta3+2,___flge@ff1+2
  7544   003722  C5D8  F563         	movff	_theta3+3,___flge@ff1+3
  7545   003726  C56C  F564         	movff	set3@theta3_desired,___flge@ff2
  7546   00372A  C56D  F565         	movff	set3@theta3_desired+1,___flge@ff2+1
  7547   00372E  C56E  F566         	movff	set3@theta3_desired+2,___flge@ff2+2
  7548   003732  C56F  F567         	movff	set3@theta3_desired+3,___flge@ff2+3
  7549   003736  EC23  F021         	call	___flge	;wreg free
  7550   00373A  0105               	movlb	5	; () banked
  7551   00373C  B0D8               	btfsc	status,0,c
  7552   00373E  EFA3  F01B         	goto	u6911
  7553   003742  EFA5  F01B         	goto	u6910
  7554   003746                     u6911:
  7555   003746  EFC1  F01B         	goto	l6881
  7556   00374A                     u6910:
  7557   00374A                     
  7558                           ; BSR set to: 5
  7559   00374A  C5D5  F503         	movff	_theta3,___fladd@b
  7560   00374E  C5D6  F504         	movff	_theta3+1,___fladd@b+1
  7561   003752  C5D7  F505         	movff	_theta3+2,___fladd@b+2
  7562   003756  C5D8  F506         	movff	_theta3+3,___fladd@b+3
  7563   00375A  0E00               	movlw	0
  7564   00375C  6E07               	movwf	___fladd@a^(0+1280),c
  7565   00375E  0E00               	movlw	0
  7566   003760  6E08               	movwf	(___fladd@a+1)^(0+1280),c
  7567   003762  0E80               	movlw	128
  7568   003764  6E09               	movwf	(___fladd@a+2)^(0+1280),c
  7569   003766  0E3F               	movlw	63
  7570   003768  6E0A               	movwf	(___fladd@a+3)^(0+1280),c
  7571   00376A  ECAC  F00F         	call	___fladd	;wreg free
  7572   00376E  C503  F5D5         	movff	?___fladd,_theta3
  7573   003772  C504  F5D6         	movff	?___fladd+1,_theta3+1
  7574   003776  C505  F5D7         	movff	?___fladd+2,_theta3+2
  7575   00377A  C506  F5D8         	movff	?___fladd+3,_theta3+3
  7576   00377E  EFF5  F01B         	goto	l6885
  7577   003782                     l6881:
  7578                           
  7579                           ; BSR set to: 5
  7580   003782  C56C  F560         	movff	set3@theta3_desired,___flge@ff1
  7581   003786  C56D  F561         	movff	set3@theta3_desired+1,___flge@ff1+1
  7582   00378A  C56E  F562         	movff	set3@theta3_desired+2,___flge@ff1+2
  7583   00378E  C56F  F563         	movff	set3@theta3_desired+3,___flge@ff1+3
  7584   003792  C5D5  F564         	movff	_theta3,___flge@ff2
  7585   003796  C5D6  F565         	movff	_theta3+1,___flge@ff2+1
  7586   00379A  C5D7  F566         	movff	_theta3+2,___flge@ff2+2
  7587   00379E  C5D8  F567         	movff	_theta3+3,___flge@ff2+3
  7588   0037A2  EC23  F021         	call	___flge	;wreg free
  7589   0037A6  0105               	movlb	5	; () banked
  7590   0037A8  B0D8               	btfsc	status,0,c
  7591   0037AA  EFD9  F01B         	goto	u6921
  7592   0037AE  EFDB  F01B         	goto	u6920
  7593   0037B2                     u6921:
  7594   0037B2  EFF5  F01B         	goto	l6885
  7595   0037B6                     u6920:
  7596   0037B6                     
  7597                           ; BSR set to: 5
  7598   0037B6  C5D5  F535         	movff	_theta3,___flsub@b
  7599   0037BA  C5D6  F536         	movff	_theta3+1,___flsub@b+1
  7600   0037BE  C5D7  F537         	movff	_theta3+2,___flsub@b+2
  7601   0037C2  C5D8  F538         	movff	_theta3+3,___flsub@b+3
  7602   0037C6  0E00               	movlw	0
  7603   0037C8  6E39               	movwf	___flsub@a^(0+1280),c
  7604   0037CA  0E00               	movlw	0
  7605   0037CC  6E3A               	movwf	(___flsub@a+1)^(0+1280),c
  7606   0037CE  0E80               	movlw	128
  7607   0037D0  6E3B               	movwf	(___flsub@a+2)^(0+1280),c
  7608   0037D2  0E3F               	movlw	63
  7609   0037D4  6E3C               	movwf	(___flsub@a+3)^(0+1280),c
  7610   0037D6  ECA0  F026         	call	___flsub	;wreg free
  7611   0037DA  C535  F5D5         	movff	?___flsub,_theta3
  7612   0037DE  C536  F5D6         	movff	?___flsub+1,_theta3+1
  7613   0037E2  C537  F5D7         	movff	?___flsub+2,_theta3+2
  7614   0037E6  C538  F5D8         	movff	?___flsub+3,_theta3+3
  7615   0037EA                     l6885:
  7616                           
  7617                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 159:         setServoAngle(3, the
      +                          ta3);
  7618   0037EA  C5D5  F547         	movff	_theta3,setServoAngle@angulo
  7619   0037EE  C5D6  F548         	movff	_theta3+1,setServoAngle@angulo+1
  7620   0037F2  C5D7  F549         	movff	_theta3+2,setServoAngle@angulo+2
  7621   0037F6  C5D8  F54A         	movff	_theta3+3,setServoAngle@angulo+3
  7622   0037FA  0E03               	movlw	3
  7623   0037FC  EC16  F020         	call	_setServoAngle
  7624   003800                     
  7625                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 160:         _delay((unsigned lon
      +                          g)((20)*(64000000/4000.0)));
  7626   003800  0E02               	movlw	2
  7627   003802  6E5A               	movwf	(??_set3+1)^(0+1280),c
  7628   003804  0EA0               	movlw	160
  7629   003806  6E59               	movwf	??_set3^(0+1280),c
  7630   003808  0E92               	movlw	146
  7631   00380A                     u7037:
  7632   00380A  2EE8               	decfsz	wreg,f,c
  7633   00380C  D7FE               	bra	u7037
  7634   00380E  2E59               	decfsz	??_set3^(0+1280),f,c
  7635   003810  D7FC               	bra	u7037
  7636   003812  2E5A               	decfsz	(??_set3+1)^(0+1280),f,c
  7637   003814  D7FA               	bra	u7037
  7638   003816  D000               	nop2	
  7639   003818                     l6889:
  7640                           
  7641                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 156:     while (abs(theta3 - thet
      +                          a3_desired) > 0.1 && !detener) {
  7642   003818  0ECD               	movlw	205
  7643   00381A  0105               	movlb	5	; () banked
  7644   00381C  6F60               	movwf	___flge@ff1& (0+255),b
  7645   00381E  0ECC               	movlw	204
  7646   003820  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  7647   003822  0ECC               	movlw	204
  7648   003824  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  7649   003826  0E3D               	movlw	61
  7650   003828  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  7651   00382A  C56C  F539         	movff	set3@theta3_desired,___flsub@a
  7652   00382E  C56D  F53A         	movff	set3@theta3_desired+1,___flsub@a+1
  7653   003832  C56E  F53B         	movff	set3@theta3_desired+2,___flsub@a+2
  7654   003836  C56F  F53C         	movff	set3@theta3_desired+3,___flsub@a+3
  7655   00383A  C5D5  F535         	movff	_theta3,___flsub@b
  7656   00383E  C5D6  F536         	movff	_theta3+1,___flsub@b+1
  7657   003842  C5D7  F537         	movff	_theta3+2,___flsub@b+2
  7658   003846  C5D8  F538         	movff	_theta3+3,___flsub@b+3
  7659   00384A  ECA0  F026         	call	___flsub	;wreg free
  7660   00384E  C535  F53D         	movff	?___flsub,___fltol@f1
  7661   003852  C536  F53E         	movff	?___flsub+1,___fltol@f1+1
  7662   003856  C537  F53F         	movff	?___flsub+2,___fltol@f1+2
  7663   00385A  C538  F540         	movff	?___flsub+3,___fltol@f1+3
  7664   00385E  ECA6  F021         	call	___fltol	;wreg free
  7665   003862  C53D  F547         	movff	?___fltol,abs@a
  7666   003866  C53E  F548         	movff	?___fltol+1,abs@a+1
  7667   00386A  ECD8  F027         	call	_abs	;wreg free
  7668   00386E  C547  F54B         	movff	?_abs,___xxtofl@val
  7669   003872  C548  F54C         	movff	?_abs+1,___xxtofl@val+1
  7670   003876  0E00               	movlw	0
  7671   003878  BE4C               	btfsc	(___xxtofl@val+1)^(0+1280),7,c
  7672   00387A  0EFF               	movlw	-1
  7673   00387C  6E4D               	movwf	(___xxtofl@val+2)^(0+1280),c
  7674   00387E  6E4E               	movwf	(___xxtofl@val+3)^(0+1280),c
  7675   003880  0E01               	movlw	1
  7676   003882  EC67  F01E         	call	___xxtofl
  7677   003886  C54B  F564         	movff	?___xxtofl,___flge@ff2
  7678   00388A  C54C  F565         	movff	?___xxtofl+1,___flge@ff2+1
  7679   00388E  C54D  F566         	movff	?___xxtofl+2,___flge@ff2+2
  7680   003892  C54E  F567         	movff	?___xxtofl+3,___flge@ff2+3
  7681   003896  EC23  F021         	call	___flge	;wreg free
  7682   00389A  0105               	movlb	5	; () banked
  7683   00389C  B0D8               	btfsc	status,0,c
  7684   00389E  EF53  F01C         	goto	u6931
  7685   0038A2  EF55  F01C         	goto	u6930
  7686   0038A6                     u6931:
  7687   0038A6  EF5D  F01C         	goto	l6893
  7688   0038AA                     u6930:
  7689   0038AA                     
  7690                           ; BSR set to: 5
  7691   0038AA  51EE               	movf	_detener& (0+255),w,b	;volatile
  7692   0038AC  B4D8               	btfsc	status,2,c
  7693   0038AE  EF5B  F01C         	goto	u6941
  7694   0038B2  EF5D  F01C         	goto	u6940
  7695   0038B6                     u6941:
  7696   0038B6  EF8B  F01B         	goto	l6877
  7697   0038BA                     u6940:
  7698   0038BA                     l6893:
  7699                           
  7700                           ; BSR set to: 5
  7701                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 162:     detener = 0;
  7702   0038BA  0E00               	movlw	0
  7703   0038BC  6FEE               	movwf	_detener& (0+255),b	;volatile
  7704   0038BE                     
  7705                           ; BSR set to: 5
  7706   0038BE  0012               	return		;funcret
  7707   0038C0                     __end_of_set3:
  7708                           	callstack 0
  7709                           
  7710 ;; *************** function _abs *****************
  7711 ;; Defined at:
  7712 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  a               2   70[COMRAM] int 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;		None
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  2   70[COMRAM] int 
  7719 ;; Registers used:
  7720 ;;		wreg, status,2, status,0
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7730 ;;Total ram usage:        4 bytes
  7731 ;; Hardware stack levels used: 1
  7732 ;; Hardware stack levels required when called: 5
  7733 ;; This function calls:
  7734 ;;		Nothing
  7735 ;; This function is called by:
  7736 ;;		_set0
  7737 ;;		_set1
  7738 ;;		_set2
  7739 ;;		_set3
  7740 ;;		_dtoa
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text35
  7745   004FB0                     __ptext35:
  7746                           	callstack 0
  7747   004FB0                     _abs:
  7748                           	callstack 115
  7749   004FB0  BE48               	btfsc	(abs@a+1)^(0+1280),7,c
  7750   004FB2  EFDD  F027         	goto	u3601
  7751   004FB6  EFDF  F027         	goto	u3600
  7752   004FBA                     u3601:
  7753   004FBA  EFE5  F027         	goto	l1848
  7754   004FBE                     u3600:
  7755   004FBE  C547  F547         	movff	abs@a,?_abs
  7756   004FC2  C548  F548         	movff	abs@a+1,?_abs+1
  7757   004FC6  EFF1  F027         	goto	l1851
  7758   004FCA                     l1848:
  7759   004FCA  C547  F549         	movff	abs@a,??_abs
  7760   004FCE  C548  F54A         	movff	abs@a+1,??_abs+1
  7761   004FD2  1E49               	comf	??_abs^(0+1280),f,c
  7762   004FD4  1E4A               	comf	(??_abs+1)^(0+1280),f,c
  7763   004FD6  4A49               	infsnz	??_abs^(0+1280),f,c
  7764   004FD8  2A4A               	incf	(??_abs+1)^(0+1280),f,c
  7765   004FDA  C549  F547         	movff	??_abs,?_abs
  7766   004FDE  C54A  F548         	movff	??_abs+1,?_abs+1
  7767   004FE2                     l1851:
  7768   004FE2  0012               	return		;funcret
  7769   004FE4                     __end_of_abs:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function ___xxtofl *****************
  7773 ;; Defined at:
  7774 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  sign            1    wreg     unsigned char 
  7777 ;;  val             4   74[COMRAM] long 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  sign            1   82[COMRAM] unsigned char 
  7780 ;;  arg             4   84[COMRAM] unsigned long 
  7781 ;;  exp             1   83[COMRAM] unsigned char 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  4   74[COMRAM] unsigned char 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7792 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7793 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7794 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7795 ;;Total ram usage:       14 bytes
  7796 ;; Hardware stack levels used: 1
  7797 ;; Hardware stack levels required when called: 5
  7798 ;; This function calls:
  7799 ;;		Nothing
  7800 ;; This function is called by:
  7801 ;;		_set0
  7802 ;;		_set1
  7803 ;;		_set2
  7804 ;;		_set3
  7805 ;;		_controlServoMotor
  7806 ;; This function uses a non-reentrant model
  7807 ;;
  7808                           
  7809                           	psect	text36
  7810   003CCE                     __ptext36:
  7811                           	callstack 0
  7812   003CCE                     ___xxtofl:
  7813                           	callstack 117
  7814                           
  7815                           ;incstack = 0
  7816                           ;___xxtofl@sign stored from wreg
  7817   003CCE  6E53               	movwf	___xxtofl@sign^(0+1280),c
  7818   003CD0  5053               	movf	___xxtofl@sign^(0+1280),w,c
  7819   003CD2  B4D8               	btfsc	status,2,c
  7820   003CD4  EF6E  F01E         	goto	u5031
  7821   003CD8  EF70  F01E         	goto	u5030
  7822   003CDC                     u5031:
  7823   003CDC  EF92  F01E         	goto	l1828
  7824   003CE0                     u5030:
  7825   003CE0  BE4E               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
  7826   003CE2  EF77  F01E         	goto	u5040
  7827   003CE6  EF75  F01E         	goto	u5041
  7828   003CEA                     u5041:
  7829   003CEA  EF92  F01E         	goto	l1828
  7830   003CEE                     u5040:
  7831   003CEE  C54B  F54F         	movff	___xxtofl@val,??___xxtofl
  7832   003CF2  C54C  F550         	movff	___xxtofl@val+1,??___xxtofl+1
  7833   003CF6  C54D  F551         	movff	___xxtofl@val+2,??___xxtofl+2
  7834   003CFA  C54E  F552         	movff	___xxtofl@val+3,??___xxtofl+3
  7835   003CFE  1E4F               	comf	??___xxtofl^(0+1280),f,c
  7836   003D00  1E50               	comf	(??___xxtofl+1)^(0+1280),f,c
  7837   003D02  1E51               	comf	(??___xxtofl+2)^(0+1280),f,c
  7838   003D04  1E52               	comf	(??___xxtofl+3)^(0+1280),f,c
  7839   003D06  2A4F               	incf	??___xxtofl^(0+1280),f,c
  7840   003D08  0E00               	movlw	0
  7841   003D0A  2250               	addwfc	(??___xxtofl+1)^(0+1280),f,c
  7842   003D0C  2251               	addwfc	(??___xxtofl+2)^(0+1280),f,c
  7843   003D0E  2252               	addwfc	(??___xxtofl+3)^(0+1280),f,c
  7844   003D10  C54F  F555         	movff	??___xxtofl,___xxtofl@arg
  7845   003D14  C550  F556         	movff	??___xxtofl+1,___xxtofl@arg+1
  7846   003D18  C551  F557         	movff	??___xxtofl+2,___xxtofl@arg+2
  7847   003D1C  C552  F558         	movff	??___xxtofl+3,___xxtofl@arg+3
  7848   003D20  EF9A  F01E         	goto	l5519
  7849   003D24                     l1828:
  7850   003D24  C54B  F555         	movff	___xxtofl@val,___xxtofl@arg
  7851   003D28  C54C  F556         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7852   003D2C  C54D  F557         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7853   003D30  C54E  F558         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7854   003D34                     l5519:
  7855   003D34  504B               	movf	___xxtofl@val^(0+1280),w,c
  7856   003D36  104C               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
  7857   003D38  104D               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
  7858   003D3A  104E               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
  7859   003D3C  A4D8               	btfss	status,2,c
  7860   003D3E  EFA3  F01E         	goto	u5051
  7861   003D42  EFA5  F01E         	goto	u5050
  7862   003D46                     u5051:
  7863   003D46  EFAF  F01E         	goto	l5525
  7864   003D4A                     u5050:
  7865   003D4A  0E00               	movlw	0
  7866   003D4C  6E4B               	movwf	?___xxtofl^(0+1280),c
  7867   003D4E  0E00               	movlw	0
  7868   003D50  6E4C               	movwf	(?___xxtofl+1)^(0+1280),c
  7869   003D52  0E00               	movlw	0
  7870   003D54  6E4D               	movwf	(?___xxtofl+2)^(0+1280),c
  7871   003D56  0E00               	movlw	0
  7872   003D58  6E4E               	movwf	(?___xxtofl+3)^(0+1280),c
  7873   003D5A  EF40  F01F         	goto	l1831
  7874   003D5E                     l5525:
  7875   003D5E  0E96               	movlw	150
  7876   003D60  6E54               	movwf	___xxtofl@exp^(0+1280),c
  7877   003D62  EFB9  F01E         	goto	l5529
  7878   003D66                     l5527:
  7879   003D66  2A54               	incf	___xxtofl@exp^(0+1280),f,c
  7880   003D68  90D8               	bcf	status,0,c
  7881   003D6A  3258               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  7882   003D6C  3257               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  7883   003D6E  3256               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  7884   003D70  3255               	rrcf	___xxtofl@arg^(0+1280),f,c
  7885   003D72                     l5529:
  7886   003D72  0E00               	movlw	0
  7887   003D74  1455               	andwf	___xxtofl@arg^(0+1280),w,c
  7888   003D76  6E4F               	movwf	??___xxtofl^(0+1280),c
  7889   003D78  0E00               	movlw	0
  7890   003D7A  1456               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  7891   003D7C  6E50               	movwf	(??___xxtofl+1)^(0+1280),c
  7892   003D7E  0E00               	movlw	0
  7893   003D80  1457               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  7894   003D82  6E51               	movwf	(??___xxtofl+2)^(0+1280),c
  7895   003D84  0EFE               	movlw	254
  7896   003D86  1458               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  7897   003D88  6E52               	movwf	(??___xxtofl+3)^(0+1280),c
  7898   003D8A  504F               	movf	??___xxtofl^(0+1280),w,c
  7899   003D8C  1050               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  7900   003D8E  1051               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  7901   003D90  1052               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  7902   003D92  A4D8               	btfss	status,2,c
  7903   003D94  EFCE  F01E         	goto	u5061
  7904   003D98  EFD0  F01E         	goto	u5060
  7905   003D9C                     u5061:
  7906   003D9C  EFB3  F01E         	goto	l5527
  7907   003DA0                     u5060:
  7908   003DA0  EFDE  F01E         	goto	l1835
  7909   003DA4                     l5531:
  7910   003DA4  2A54               	incf	___xxtofl@exp^(0+1280),f,c
  7911   003DA6  0E01               	movlw	1
  7912   003DA8  2655               	addwf	___xxtofl@arg^(0+1280),f,c
  7913   003DAA  0E00               	movlw	0
  7914   003DAC  2256               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
  7915   003DAE  2257               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
  7916   003DB0  2258               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
  7917   003DB2  90D8               	bcf	status,0,c
  7918   003DB4  3258               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  7919   003DB6  3257               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  7920   003DB8  3256               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  7921   003DBA  3255               	rrcf	___xxtofl@arg^(0+1280),f,c
  7922   003DBC                     l1835:
  7923   003DBC  0E00               	movlw	0
  7924   003DBE  1455               	andwf	___xxtofl@arg^(0+1280),w,c
  7925   003DC0  6E4F               	movwf	??___xxtofl^(0+1280),c
  7926   003DC2  0E00               	movlw	0
  7927   003DC4  1456               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  7928   003DC6  6E50               	movwf	(??___xxtofl+1)^(0+1280),c
  7929   003DC8  0E00               	movlw	0
  7930   003DCA  1457               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  7931   003DCC  6E51               	movwf	(??___xxtofl+2)^(0+1280),c
  7932   003DCE  0EFF               	movlw	255
  7933   003DD0  1458               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  7934   003DD2  6E52               	movwf	(??___xxtofl+3)^(0+1280),c
  7935   003DD4  504F               	movf	??___xxtofl^(0+1280),w,c
  7936   003DD6  1050               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  7937   003DD8  1051               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  7938   003DDA  1052               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  7939   003DDC  A4D8               	btfss	status,2,c
  7940   003DDE  EFF3  F01E         	goto	u5071
  7941   003DE2  EFF5  F01E         	goto	u5070
  7942   003DE6                     u5071:
  7943   003DE6  EFD2  F01E         	goto	l5531
  7944   003DEA                     u5070:
  7945   003DEA  EFFD  F01E         	goto	l5539
  7946   003DEE                     l5537:
  7947   003DEE  0654               	decf	___xxtofl@exp^(0+1280),f,c
  7948   003DF0  90D8               	bcf	status,0,c
  7949   003DF2  3655               	rlcf	___xxtofl@arg^(0+1280),f,c
  7950   003DF4  3656               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
  7951   003DF6  3657               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
  7952   003DF8  3658               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
  7953   003DFA                     l5539:
  7954   003DFA  BE57               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
  7955   003DFC  EF02  F01F         	goto	u5081
  7956   003E00  EF04  F01F         	goto	u5080
  7957   003E04                     u5081:
  7958   003E04  EF0C  F01F         	goto	l1842
  7959   003E08                     u5080:
  7960   003E08  0E02               	movlw	2
  7961   003E0A  6054               	cpfslt	___xxtofl@exp^(0+1280),c
  7962   003E0C  EF0A  F01F         	goto	u5091
  7963   003E10  EF0C  F01F         	goto	u5090
  7964   003E14                     u5091:
  7965   003E14  EFF7  F01E         	goto	l5537
  7966   003E18                     u5090:
  7967   003E18                     l1842:
  7968   003E18  B054               	btfsc	___xxtofl@exp^(0+1280),0,c
  7969   003E1A  EF11  F01F         	goto	u5101
  7970   003E1E  EF13  F01F         	goto	u5100
  7971   003E22                     u5101:
  7972   003E22  EF14  F01F         	goto	l5545
  7973   003E26                     u5100:
  7974   003E26  9E57               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
  7975   003E28                     l5545:
  7976   003E28  90D8               	bcf	status,0,c
  7977   003E2A  3254               	rrcf	___xxtofl@exp^(0+1280),f,c
  7978   003E2C  C554  F54F         	movff	___xxtofl@exp,??___xxtofl
  7979   003E30  6A50               	clrf	(??___xxtofl+1)^(0+1280),c
  7980   003E32  6A51               	clrf	(??___xxtofl+2)^(0+1280),c
  7981   003E34  6A52               	clrf	(??___xxtofl+3)^(0+1280),c
  7982   003E36  C54F  F552         	movff	??___xxtofl,??___xxtofl+3
  7983   003E3A  6A51               	clrf	(??___xxtofl+2)^(0+1280),c
  7984   003E3C  6A50               	clrf	(??___xxtofl+1)^(0+1280),c
  7985   003E3E  6A4F               	clrf	??___xxtofl^(0+1280),c
  7986   003E40  504F               	movf	??___xxtofl^(0+1280),w,c
  7987   003E42  1255               	iorwf	___xxtofl@arg^(0+1280),f,c
  7988   003E44  5050               	movf	(??___xxtofl+1)^(0+1280),w,c
  7989   003E46  1256               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  7990   003E48  5051               	movf	(??___xxtofl+2)^(0+1280),w,c
  7991   003E4A  1257               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  7992   003E4C  5052               	movf	(??___xxtofl+3)^(0+1280),w,c
  7993   003E4E  1258               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  7994   003E50  5053               	movf	___xxtofl@sign^(0+1280),w,c
  7995   003E52  B4D8               	btfsc	status,2,c
  7996   003E54  EF2E  F01F         	goto	u5111
  7997   003E58  EF30  F01F         	goto	u5110
  7998   003E5C                     u5111:
  7999   003E5C  EF38  F01F         	goto	l5555
  8000   003E60                     u5110:
  8001   003E60  BE4E               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
  8002   003E62  EF37  F01F         	goto	u5120
  8003   003E66  EF35  F01F         	goto	u5121
  8004   003E6A                     u5121:
  8005   003E6A  EF38  F01F         	goto	l5555
  8006   003E6E                     u5120:
  8007   003E6E  8E58               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  8008   003E70                     l5555:
  8009   003E70  C555  F54B         	movff	___xxtofl@arg,?___xxtofl
  8010   003E74  C556  F54C         	movff	___xxtofl@arg+1,?___xxtofl+1
  8011   003E78  C557  F54D         	movff	___xxtofl@arg+2,?___xxtofl+2
  8012   003E7C  C558  F54E         	movff	___xxtofl@arg+3,?___xxtofl+3
  8013   003E80                     l1831:
  8014   003E80  0012               	return		;funcret
  8015   003E82                     __end_of___xxtofl:
  8016                           	callstack 0
  8017                           
  8018 ;; *************** function ___flsub *****************
  8019 ;; Defined at:
  8020 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  b               4   52[COMRAM] unsigned char 
  8023 ;;  a               4   56[COMRAM] unsigned char 
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;		None
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  4   52[COMRAM] unsigned char 
  8028 ;; Registers used:
  8029 ;;		wreg, status,2, status,0, cstack
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8035 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;Total ram usage:        8 bytes
  8040 ;; Hardware stack levels used: 1
  8041 ;; Hardware stack levels required when called: 6
  8042 ;; This function calls:
  8043 ;;		___fladd
  8044 ;; This function is called by:
  8045 ;;		_set0
  8046 ;;		_set1
  8047 ;;		_set2
  8048 ;;		_set3
  8049 ;;		_efgtoa
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text37
  8054   004D40                     __ptext37:
  8055                           	callstack 0
  8056   004D40                     ___flsub:
  8057                           	callstack 114
  8058   004D40  0E00               	movlw	0
  8059   004D42  1A39               	xorwf	___flsub@a^(0+1280),f,c
  8060   004D44  0E00               	movlw	0
  8061   004D46  1A3A               	xorwf	(___flsub@a+1)^(0+1280),f,c
  8062   004D48  0E00               	movlw	0
  8063   004D4A  1A3B               	xorwf	(___flsub@a+2)^(0+1280),f,c
  8064   004D4C  0E80               	movlw	128
  8065   004D4E  1A3C               	xorwf	(___flsub@a+3)^(0+1280),f,c
  8066   004D50  C535  F503         	movff	___flsub@b,___fladd@b
  8067   004D54  C536  F504         	movff	___flsub@b+1,___fladd@b+1
  8068   004D58  C537  F505         	movff	___flsub@b+2,___fladd@b+2
  8069   004D5C  C538  F506         	movff	___flsub@b+3,___fladd@b+3
  8070   004D60  C539  F507         	movff	___flsub@a,___fladd@a
  8071   004D64  C53A  F508         	movff	___flsub@a+1,___fladd@a+1
  8072   004D68  C53B  F509         	movff	___flsub@a+2,___fladd@a+2
  8073   004D6C  C53C  F50A         	movff	___flsub@a+3,___fladd@a+3
  8074   004D70  ECAC  F00F         	call	___fladd	;wreg free
  8075   004D74  C503  F535         	movff	?___fladd,?___flsub
  8076   004D78  C504  F536         	movff	?___fladd+1,?___flsub+1
  8077   004D7C  C505  F537         	movff	?___fladd+2,?___flsub+2
  8078   004D80  C506  F538         	movff	?___fladd+3,?___flsub+3
  8079   004D84  0012               	return		;funcret
  8080   004D86                     __end_of___flsub:
  8081                           	callstack 0
  8082                           
  8083 ;; *************** function ___fladd *****************
  8084 ;; Defined at:
  8085 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  b               4    2[COMRAM] unsigned char 
  8088 ;;  a               4    6[COMRAM] unsigned char 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;  grs             1   17[COMRAM] unsigned char 
  8091 ;;  bexp            1   16[COMRAM] unsigned char 
  8092 ;;  aexp            1   15[COMRAM] unsigned char 
  8093 ;;  signs           1   14[COMRAM] unsigned char 
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  4    2[COMRAM] unsigned char 
  8096 ;; Registers used:
  8097 ;;		wreg, status,2, status,0
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8103 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8104 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;Total ram usage:       16 bytes
  8108 ;; Hardware stack levels used: 1
  8109 ;; Hardware stack levels required when called: 5
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_set0
  8114 ;;		_set1
  8115 ;;		_set2
  8116 ;;		_set3
  8117 ;;		___flsub
  8118 ;;		_efgtoa
  8119 ;; This function uses a non-reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text38
  8123   001F58                     __ptext38:
  8124                           	callstack 0
  8125   001F58                     ___fladd:
  8126                           	callstack 114
  8127   001F58  5006               	movf	(___fladd@b+3)^(0+1280),w,c
  8128   001F5A  0B80               	andlw	128
  8129   001F5C  6E0F               	movwf	___fladd@signs^(0+1280),c
  8130   001F5E  5006               	movf	(___fladd@b+3)^(0+1280),w,c
  8131   001F60  2406               	addwf	(___fladd@b+3)^(0+1280),w,c
  8132   001F62  6E11               	movwf	___fladd@bexp^(0+1280),c
  8133   001F64  AE05               	btfss	(___fladd@b+2)^(0+1280),7,c
  8134   001F66  EFB7  F00F         	goto	u3201
  8135   001F6A  EFB9  F00F         	goto	u3200
  8136   001F6E                     u3201:
  8137   001F6E  EFBA  F00F         	goto	l4313
  8138   001F72                     u3200:
  8139   001F72  8011               	bsf	___fladd@bexp^(0+1280),0,c
  8140   001F74                     l4313:
  8141   001F74  5011               	movf	___fladd@bexp^(0+1280),w,c
  8142   001F76  B4D8               	btfsc	status,2,c
  8143   001F78  EFC0  F00F         	goto	u3211
  8144   001F7C  EFC2  F00F         	goto	u3210
  8145   001F80                     u3211:
  8146   001F80  EFD7  F00F         	goto	l4323
  8147   001F84                     u3210:
  8148   001F84  2811               	incf	___fladd@bexp^(0+1280),w,c
  8149   001F86  A4D8               	btfss	status,2,c
  8150   001F88  EFC8  F00F         	goto	u3221
  8151   001F8C  EFCA  F00F         	goto	u3220
  8152   001F90                     u3221:
  8153   001F90  EFD2  F00F         	goto	l4319
  8154   001F94                     u3220:
  8155   001F94  0E00               	movlw	0
  8156   001F96  6E03               	movwf	___fladd@b^(0+1280),c
  8157   001F98  0E00               	movlw	0
  8158   001F9A  6E04               	movwf	(___fladd@b+1)^(0+1280),c
  8159   001F9C  0E00               	movlw	0
  8160   001F9E  6E05               	movwf	(___fladd@b+2)^(0+1280),c
  8161   001FA0  0E00               	movlw	0
  8162   001FA2  6E06               	movwf	(___fladd@b+3)^(0+1280),c
  8163   001FA4                     l4319:
  8164   001FA4  8E05               	bsf	(___fladd@b+2)^(0+1280),7,c
  8165   001FA6  0E00               	movlw	0
  8166   001FA8  6E06               	movwf	(___fladd@b+3)^(0+1280),c
  8167   001FAA  EFDF  F00F         	goto	l4325
  8168   001FAE                     l4323:
  8169   001FAE  0E00               	movlw	0
  8170   001FB0  6E03               	movwf	___fladd@b^(0+1280),c
  8171   001FB2  0E00               	movlw	0
  8172   001FB4  6E04               	movwf	(___fladd@b+1)^(0+1280),c
  8173   001FB6  0E00               	movlw	0
  8174   001FB8  6E05               	movwf	(___fladd@b+2)^(0+1280),c
  8175   001FBA  0E00               	movlw	0
  8176   001FBC  6E06               	movwf	(___fladd@b+3)^(0+1280),c
  8177   001FBE                     l4325:
  8178   001FBE  500A               	movf	(___fladd@a+3)^(0+1280),w,c
  8179   001FC0  0B80               	andlw	128
  8180   001FC2  6E10               	movwf	___fladd@aexp^(0+1280),c
  8181   001FC4  500F               	movf	___fladd@signs^(0+1280),w,c
  8182   001FC6  1810               	xorwf	___fladd@aexp^(0+1280),w,c
  8183   001FC8  B4D8               	btfsc	status,2,c
  8184   001FCA  EFE9  F00F         	goto	u3231
  8185   001FCE  EFEB  F00F         	goto	u3230
  8186   001FD2                     u3231:
  8187   001FD2  EFEC  F00F         	goto	l4331
  8188   001FD6                     u3230:
  8189   001FD6  8C0F               	bsf	___fladd@signs^(0+1280),6,c
  8190   001FD8                     l4331:
  8191   001FD8  500A               	movf	(___fladd@a+3)^(0+1280),w,c
  8192   001FDA  240A               	addwf	(___fladd@a+3)^(0+1280),w,c
  8193   001FDC  6E10               	movwf	___fladd@aexp^(0+1280),c
  8194   001FDE  AE09               	btfss	(___fladd@a+2)^(0+1280),7,c
  8195   001FE0  EFF4  F00F         	goto	u3241
  8196   001FE4  EFF6  F00F         	goto	u3240
  8197   001FE8                     u3241:
  8198   001FE8  EFF7  F00F         	goto	l4337
  8199   001FEC                     u3240:
  8200   001FEC  8010               	bsf	___fladd@aexp^(0+1280),0,c
  8201   001FEE                     l4337:
  8202   001FEE  5010               	movf	___fladd@aexp^(0+1280),w,c
  8203   001FF0  B4D8               	btfsc	status,2,c
  8204   001FF2  EFFD  F00F         	goto	u3251
  8205   001FF6  EFFF  F00F         	goto	u3250
  8206   001FFA                     u3251:
  8207   001FFA  EF14  F010         	goto	l4347
  8208   001FFE                     u3250:
  8209   001FFE  2810               	incf	___fladd@aexp^(0+1280),w,c
  8210   002000  A4D8               	btfss	status,2,c
  8211   002002  EF05  F010         	goto	u3261
  8212   002006  EF07  F010         	goto	u3260
  8213   00200A                     u3261:
  8214   00200A  EF0F  F010         	goto	l4343
  8215   00200E                     u3260:
  8216   00200E  0E00               	movlw	0
  8217   002010  6E07               	movwf	___fladd@a^(0+1280),c
  8218   002012  0E00               	movlw	0
  8219   002014  6E08               	movwf	(___fladd@a+1)^(0+1280),c
  8220   002016  0E00               	movlw	0
  8221   002018  6E09               	movwf	(___fladd@a+2)^(0+1280),c
  8222   00201A  0E00               	movlw	0
  8223   00201C  6E0A               	movwf	(___fladd@a+3)^(0+1280),c
  8224   00201E                     l4343:
  8225   00201E  8E09               	bsf	(___fladd@a+2)^(0+1280),7,c
  8226   002020  0E00               	movlw	0
  8227   002022  6E0A               	movwf	(___fladd@a+3)^(0+1280),c
  8228   002024  EF1C  F010         	goto	l4349
  8229   002028                     l4347:
  8230   002028  0E00               	movlw	0
  8231   00202A  6E07               	movwf	___fladd@a^(0+1280),c
  8232   00202C  0E00               	movlw	0
  8233   00202E  6E08               	movwf	(___fladd@a+1)^(0+1280),c
  8234   002030  0E00               	movlw	0
  8235   002032  6E09               	movwf	(___fladd@a+2)^(0+1280),c
  8236   002034  0E00               	movlw	0
  8237   002036  6E0A               	movwf	(___fladd@a+3)^(0+1280),c
  8238   002038                     l4349:
  8239   002038  5011               	movf	___fladd@bexp^(0+1280),w,c
  8240   00203A  5C10               	subwf	___fladd@aexp^(0+1280),w,c
  8241   00203C  B0D8               	btfsc	status,0,c
  8242   00203E  EF23  F010         	goto	u3271
  8243   002042  EF25  F010         	goto	u3270
  8244   002046                     u3271:
  8245   002046  EF4C  F010         	goto	l4385
  8246   00204A                     u3270:
  8247   00204A  AC0F               	btfss	___fladd@signs^(0+1280),6,c
  8248   00204C  EF2A  F010         	goto	u3281
  8249   002050  EF2C  F010         	goto	u3280
  8250   002054                     u3281:
  8251   002054  EF2E  F010         	goto	l4355
  8252   002058                     u3280:
  8253   002058  0E80               	movlw	128
  8254   00205A  1A0F               	xorwf	___fladd@signs^(0+1280),f,c
  8255   00205C                     l4355:
  8256   00205C  C511  F512         	movff	___fladd@bexp,___fladd@grs
  8257   002060  C510  F511         	movff	___fladd@aexp,___fladd@bexp
  8258   002064  C512  F510         	movff	___fladd@grs,___fladd@aexp
  8259   002068  C503  F512         	movff	___fladd@b,___fladd@grs
  8260   00206C  C507  F503         	movff	___fladd@a,___fladd@b
  8261   002070  C512  F507         	movff	___fladd@grs,___fladd@a
  8262   002074  C504  F512         	movff	___fladd@b+1,___fladd@grs
  8263   002078  C508  F504         	movff	___fladd@a+1,___fladd@b+1
  8264   00207C  C512  F508         	movff	___fladd@grs,___fladd@a+1
  8265   002080  C505  F512         	movff	___fladd@b+2,___fladd@grs
  8266   002084  C509  F505         	movff	___fladd@a+2,___fladd@b+2
  8267   002088  C512  F509         	movff	___fladd@grs,___fladd@a+2
  8268   00208C  C506  F512         	movff	___fladd@b+3,___fladd@grs
  8269   002090  C50A  F506         	movff	___fladd@a+3,___fladd@b+3
  8270   002094  C512  F50A         	movff	___fladd@grs,___fladd@a+3
  8271   002098                     l4385:
  8272   002098  0E00               	movlw	0
  8273   00209A  6E12               	movwf	___fladd@grs^(0+1280),c
  8274   00209C  5011               	movf	___fladd@bexp^(0+1280),w,c
  8275   00209E  C510  F50B         	movff	___fladd@aexp,??___fladd
  8276   0020A2  6A0C               	clrf	(??___fladd+1)^(0+1280),c
  8277   0020A4  5E0B               	subwf	??___fladd^(0+1280),f,c
  8278   0020A6  0E00               	movlw	0
  8279   0020A8  5A0C               	subwfb	(??___fladd+1)^(0+1280),f,c
  8280   0020AA  BE0C               	btfsc	(??___fladd+1)^(0+1280),7,c
  8281   0020AC  EF61  F010         	goto	u3291
  8282   0020B0  500C               	movf	(??___fladd+1)^(0+1280),w,c
  8283   0020B2  E109               	bnz	u3290
  8284   0020B4  0E1A               	movlw	26
  8285   0020B6  5C0B               	subwf	??___fladd^(0+1280),w,c
  8286   0020B8  A0D8               	btfss	status,0,c
  8287   0020BA  EF61  F010         	goto	u3291
  8288   0020BE  EF63  F010         	goto	u3290
  8289   0020C2                     u3291:
  8290   0020C2  EF9A  F010         	goto	l1702
  8291   0020C6                     u3290:
  8292   0020C6  5003               	movf	___fladd@b^(0+1280),w,c
  8293   0020C8  1004               	iorwf	(___fladd@b+1)^(0+1280),w,c
  8294   0020CA  1005               	iorwf	(___fladd@b+2)^(0+1280),w,c
  8295   0020CC  1006               	iorwf	(___fladd@b+3)^(0+1280),w,c
  8296   0020CE  A4D8               	btfss	status,2,c
  8297   0020D0  EF6C  F010         	goto	u3301
  8298   0020D4  EF6F  F010         	goto	u3300
  8299   0020D8                     u3301:
  8300   0020D8  0E01               	movlw	1
  8301   0020DA  EF70  F010         	goto	u3310
  8302   0020DE                     u3300:
  8303   0020DE  0E00               	movlw	0
  8304   0020E0                     u3310:
  8305   0020E0  6E12               	movwf	___fladd@grs^(0+1280),c
  8306   0020E2  0E00               	movlw	0
  8307   0020E4  6E03               	movwf	___fladd@b^(0+1280),c
  8308   0020E6  0E00               	movlw	0
  8309   0020E8  6E04               	movwf	(___fladd@b+1)^(0+1280),c
  8310   0020EA  0E00               	movlw	0
  8311   0020EC  6E05               	movwf	(___fladd@b+2)^(0+1280),c
  8312   0020EE  0E00               	movlw	0
  8313   0020F0  6E06               	movwf	(___fladd@b+3)^(0+1280),c
  8314   0020F2  C510  F511         	movff	___fladd@aexp,___fladd@bexp
  8315   0020F6  EFA3  F010         	goto	l1701
  8316   0020FA                     l1703:
  8317   0020FA  A012               	btfss	___fladd@grs^(0+1280),0,c
  8318   0020FC  EF82  F010         	goto	u3321
  8319   002100  EF84  F010         	goto	u3320
  8320   002104                     u3321:
  8321   002104  EF8A  F010         	goto	l4397
  8322   002108                     u3320:
  8323   002108  90D8               	bcf	status,0,c
  8324   00210A  3012               	rrcf	___fladd@grs^(0+1280),w,c
  8325   00210C  0901               	iorlw	1
  8326   00210E  6E12               	movwf	___fladd@grs^(0+1280),c
  8327   002110  EF8C  F010         	goto	l4399
  8328   002114                     l4397:
  8329   002114  90D8               	bcf	status,0,c
  8330   002116  3212               	rrcf	___fladd@grs^(0+1280),f,c
  8331   002118                     l4399:
  8332   002118  A003               	btfss	___fladd@b^(0+1280),0,c
  8333   00211A  EF91  F010         	goto	u3331
  8334   00211E  EF93  F010         	goto	u3330
  8335   002122                     u3331:
  8336   002122  EF94  F010         	goto	l4403
  8337   002126                     u3330:
  8338   002126  8E12               	bsf	___fladd@grs^(0+1280),7,c
  8339   002128                     l4403:
  8340   002128  3406               	rlcf	(___fladd@b+3)^(0+1280),w,c
  8341   00212A  3206               	rrcf	(___fladd@b+3)^(0+1280),f,c
  8342   00212C  3205               	rrcf	(___fladd@b+2)^(0+1280),f,c
  8343   00212E  3204               	rrcf	(___fladd@b+1)^(0+1280),f,c
  8344   002130  3203               	rrcf	___fladd@b^(0+1280),f,c
  8345   002132  2A11               	incf	___fladd@bexp^(0+1280),f,c
  8346   002134                     l1702:
  8347   002134  5010               	movf	___fladd@aexp^(0+1280),w,c
  8348   002136  5C11               	subwf	___fladd@bexp^(0+1280),w,c
  8349   002138  A0D8               	btfss	status,0,c
  8350   00213A  EFA1  F010         	goto	u3341
  8351   00213E  EFA3  F010         	goto	u3340
  8352   002142                     u3341:
  8353   002142  EF7D  F010         	goto	l1703
  8354   002146                     u3340:
  8355   002146                     l1701:
  8356   002146  BC0F               	btfsc	___fladd@signs^(0+1280),6,c
  8357   002148  EFA8  F010         	goto	u3351
  8358   00214C  EFAA  F010         	goto	u3350
  8359   002150                     u3351:
  8360   002150  EFEA  F010         	goto	l4431
  8361   002154                     u3350:
  8362   002154  5011               	movf	___fladd@bexp^(0+1280),w,c
  8363   002156  A4D8               	btfss	status,2,c
  8364   002158  EFB0  F010         	goto	u3361
  8365   00215C  EFB2  F010         	goto	u3360
  8366   002160                     u3361:
  8367   002160  EFBC  F010         	goto	l4413
  8368   002164                     u3360:
  8369   002164  0E00               	movlw	0
  8370   002166  6E03               	movwf	?___fladd^(0+1280),c
  8371   002168  0E00               	movlw	0
  8372   00216A  6E04               	movwf	(?___fladd+1)^(0+1280),c
  8373   00216C  0E00               	movlw	0
  8374   00216E  6E05               	movwf	(?___fladd+2)^(0+1280),c
  8375   002170  0E00               	movlw	0
  8376   002172  6E06               	movwf	(?___fladd+3)^(0+1280),c
  8377   002174  EF0B  F012         	goto	l1710
  8378   002178                     l4413:
  8379   002178  5007               	movf	___fladd@a^(0+1280),w,c
  8380   00217A  2603               	addwf	___fladd@b^(0+1280),f,c
  8381   00217C  5008               	movf	(___fladd@a+1)^(0+1280),w,c
  8382   00217E  2204               	addwfc	(___fladd@b+1)^(0+1280),f,c
  8383   002180  5009               	movf	(___fladd@a+2)^(0+1280),w,c
  8384   002182  2205               	addwfc	(___fladd@b+2)^(0+1280),f,c
  8385   002184  500A               	movf	(___fladd@a+3)^(0+1280),w,c
  8386   002186  2206               	addwfc	(___fladd@b+3)^(0+1280),f,c
  8387   002188  A006               	btfss	(___fladd@b+3)^(0+1280),0,c
  8388   00218A  EFC9  F010         	goto	u3371
  8389   00218E  EFCB  F010         	goto	u3370
  8390   002192                     u3371:
  8391   002192  EF77  F011         	goto	l4467
  8392   002196                     u3370:
  8393   002196  A012               	btfss	___fladd@grs^(0+1280),0,c
  8394   002198  EFD0  F010         	goto	u3381
  8395   00219C  EFD2  F010         	goto	u3380
  8396   0021A0                     u3381:
  8397   0021A0  EFD8  F010         	goto	l4421
  8398   0021A4                     u3380:
  8399   0021A4  90D8               	bcf	status,0,c
  8400   0021A6  3012               	rrcf	___fladd@grs^(0+1280),w,c
  8401   0021A8  0901               	iorlw	1
  8402   0021AA  6E12               	movwf	___fladd@grs^(0+1280),c
  8403   0021AC  EFDA  F010         	goto	l4423
  8404   0021B0                     l4421:
  8405   0021B0  90D8               	bcf	status,0,c
  8406   0021B2  3212               	rrcf	___fladd@grs^(0+1280),f,c
  8407   0021B4                     l4423:
  8408   0021B4  A003               	btfss	___fladd@b^(0+1280),0,c
  8409   0021B6  EFDF  F010         	goto	u3391
  8410   0021BA  EFE1  F010         	goto	u3390
  8411   0021BE                     u3391:
  8412   0021BE  EFE2  F010         	goto	l4427
  8413   0021C2                     u3390:
  8414   0021C2  8E12               	bsf	___fladd@grs^(0+1280),7,c
  8415   0021C4                     l4427:
  8416   0021C4  3406               	rlcf	(___fladd@b+3)^(0+1280),w,c
  8417   0021C6  3206               	rrcf	(___fladd@b+3)^(0+1280),f,c
  8418   0021C8  3205               	rrcf	(___fladd@b+2)^(0+1280),f,c
  8419   0021CA  3204               	rrcf	(___fladd@b+1)^(0+1280),f,c
  8420   0021CC  3203               	rrcf	___fladd@b^(0+1280),f,c
  8421   0021CE  2A11               	incf	___fladd@bexp^(0+1280),f,c
  8422   0021D0  EF77  F011         	goto	l4467
  8423   0021D4                     l4431:
  8424   0021D4  5007               	movf	___fladd@a^(0+1280),w,c
  8425   0021D6  5C03               	subwf	___fladd@b^(0+1280),w,c
  8426   0021D8  5008               	movf	(___fladd@a+1)^(0+1280),w,c
  8427   0021DA  5804               	subwfb	(___fladd@b+1)^(0+1280),w,c
  8428   0021DC  5009               	movf	(___fladd@a+2)^(0+1280),w,c
  8429   0021DE  5805               	subwfb	(___fladd@b+2)^(0+1280),w,c
  8430   0021E0  5006               	movf	(___fladd@b+3)^(0+1280),w,c
  8431   0021E2  0A80               	xorlw	128
  8432   0021E4  6E0B               	movwf	??___fladd^(0+1280),c
  8433   0021E6  500A               	movf	(___fladd@a+3)^(0+1280),w,c
  8434   0021E8  0A80               	xorlw	128
  8435   0021EA  580B               	subwfb	??___fladd^(0+1280),w,c
  8436   0021EC  B0D8               	btfsc	status,0,c
  8437   0021EE  EFFB  F010         	goto	u3401
  8438   0021F2  EFFD  F010         	goto	u3400
  8439   0021F6                     u3401:
  8440   0021F6  EF28  F011         	goto	l4441
  8441   0021FA                     u3400:
  8442   0021FA  5003               	movf	___fladd@b^(0+1280),w,c
  8443   0021FC  5C07               	subwf	___fladd@a^(0+1280),w,c
  8444   0021FE  6E0B               	movwf	??___fladd^(0+1280),c
  8445   002200  5004               	movf	(___fladd@b+1)^(0+1280),w,c
  8446   002202  5808               	subwfb	(___fladd@a+1)^(0+1280),w,c
  8447   002204  6E0C               	movwf	(??___fladd+1)^(0+1280),c
  8448   002206  5005               	movf	(___fladd@b+2)^(0+1280),w,c
  8449   002208  5809               	subwfb	(___fladd@a+2)^(0+1280),w,c
  8450   00220A  6E0D               	movwf	(??___fladd+2)^(0+1280),c
  8451   00220C  5006               	movf	(___fladd@b+3)^(0+1280),w,c
  8452   00220E  580A               	subwfb	(___fladd@a+3)^(0+1280),w,c
  8453   002210  6E0E               	movwf	(??___fladd+3)^(0+1280),c
  8454   002212  0EFF               	movlw	255
  8455   002214  240B               	addwf	??___fladd^(0+1280),w,c
  8456   002216  6E03               	movwf	___fladd@b^(0+1280),c
  8457   002218  0EFF               	movlw	255
  8458   00221A  200C               	addwfc	(??___fladd+1)^(0+1280),w,c
  8459   00221C  6E04               	movwf	(___fladd@b+1)^(0+1280),c
  8460   00221E  0EFF               	movlw	255
  8461   002220  200D               	addwfc	(??___fladd+2)^(0+1280),w,c
  8462   002222  6E05               	movwf	(___fladd@b+2)^(0+1280),c
  8463   002224  0EFF               	movlw	255
  8464   002226  200E               	addwfc	(??___fladd+3)^(0+1280),w,c
  8465   002228  6E06               	movwf	(___fladd@b+3)^(0+1280),c
  8466   00222A  0E80               	movlw	128
  8467   00222C  1A0F               	xorwf	___fladd@signs^(0+1280),f,c
  8468   00222E  6C12               	negf	___fladd@grs^(0+1280),c
  8469   002230  5012               	movf	___fladd@grs^(0+1280),w,c
  8470   002232  A4D8               	btfss	status,2,c
  8471   002234  EF1E  F011         	goto	u3411
  8472   002238  EF20  F011         	goto	u3410
  8473   00223C                     u3411:
  8474   00223C  EF30  F011         	goto	l1718
  8475   002240                     u3410:
  8476   002240  0E01               	movlw	1
  8477   002242  2603               	addwf	___fladd@b^(0+1280),f,c
  8478   002244  0E00               	movlw	0
  8479   002246  2204               	addwfc	(___fladd@b+1)^(0+1280),f,c
  8480   002248  2205               	addwfc	(___fladd@b+2)^(0+1280),f,c
  8481   00224A  2206               	addwfc	(___fladd@b+3)^(0+1280),f,c
  8482   00224C  EF30  F011         	goto	l1718
  8483   002250                     l4441:
  8484   002250  5007               	movf	___fladd@a^(0+1280),w,c
  8485   002252  5E03               	subwf	___fladd@b^(0+1280),f,c
  8486   002254  5008               	movf	(___fladd@a+1)^(0+1280),w,c
  8487   002256  5A04               	subwfb	(___fladd@b+1)^(0+1280),f,c
  8488   002258  5009               	movf	(___fladd@a+2)^(0+1280),w,c
  8489   00225A  5A05               	subwfb	(___fladd@b+2)^(0+1280),f,c
  8490   00225C  500A               	movf	(___fladd@a+3)^(0+1280),w,c
  8491   00225E  5A06               	subwfb	(___fladd@b+3)^(0+1280),f,c
  8492   002260                     l1718:
  8493   002260  5003               	movf	___fladd@b^(0+1280),w,c
  8494   002262  1004               	iorwf	(___fladd@b+1)^(0+1280),w,c
  8495   002264  1005               	iorwf	(___fladd@b+2)^(0+1280),w,c
  8496   002266  1006               	iorwf	(___fladd@b+3)^(0+1280),w,c
  8497   002268  A4D8               	btfss	status,2,c
  8498   00226A  EF39  F011         	goto	u3421
  8499   00226E  EF3B  F011         	goto	u3420
  8500   002272                     u3421:
  8501   002272  EF70  F011         	goto	l4465
  8502   002276                     u3420:
  8503   002276  5012               	movf	___fladd@grs^(0+1280),w,c
  8504   002278  A4D8               	btfss	status,2,c
  8505   00227A  EF41  F011         	goto	u3431
  8506   00227E  EF43  F011         	goto	u3430
  8507   002282                     u3431:
  8508   002282  EF70  F011         	goto	l4465
  8509   002286                     u3430:
  8510   002286  0E00               	movlw	0
  8511   002288  6E03               	movwf	?___fladd^(0+1280),c
  8512   00228A  0E00               	movlw	0
  8513   00228C  6E04               	movwf	(?___fladd+1)^(0+1280),c
  8514   00228E  0E00               	movlw	0
  8515   002290  6E05               	movwf	(?___fladd+2)^(0+1280),c
  8516   002292  0E00               	movlw	0
  8517   002294  6E06               	movwf	(?___fladd+3)^(0+1280),c
  8518   002296  EF0B  F012         	goto	l1710
  8519   00229A                     l4449:
  8520   00229A  90D8               	bcf	status,0,c
  8521   00229C  3603               	rlcf	___fladd@b^(0+1280),f,c
  8522   00229E  3604               	rlcf	(___fladd@b+1)^(0+1280),f,c
  8523   0022A0  3605               	rlcf	(___fladd@b+2)^(0+1280),f,c
  8524   0022A2  3606               	rlcf	(___fladd@b+3)^(0+1280),f,c
  8525   0022A4  AE12               	btfss	___fladd@grs^(0+1280),7,c
  8526   0022A6  EF57  F011         	goto	u3441
  8527   0022AA  EF59  F011         	goto	u3440
  8528   0022AE                     u3441:
  8529   0022AE  EF5A  F011         	goto	l4455
  8530   0022B2                     u3440:
  8531   0022B2  8003               	bsf	___fladd@b^(0+1280),0,c
  8532   0022B4                     l4455:
  8533   0022B4  A012               	btfss	___fladd@grs^(0+1280),0,c
  8534   0022B6  EF5F  F011         	goto	u3451
  8535   0022BA  EF61  F011         	goto	u3450
  8536   0022BE                     u3451:
  8537   0022BE  EF65  F011         	goto	l4459
  8538   0022C2                     u3450:
  8539   0022C2  80D8               	bsf	status,0,c
  8540   0022C4  3612               	rlcf	___fladd@grs^(0+1280),f,c
  8541   0022C6  EF67  F011         	goto	l4461
  8542   0022CA                     l4459:
  8543   0022CA  90D8               	bcf	status,0,c
  8544   0022CC  3612               	rlcf	___fladd@grs^(0+1280),f,c
  8545   0022CE                     l4461:
  8546   0022CE  5011               	movf	___fladd@bexp^(0+1280),w,c
  8547   0022D0  B4D8               	btfsc	status,2,c
  8548   0022D2  EF6D  F011         	goto	u3461
  8549   0022D6  EF6F  F011         	goto	u3460
  8550   0022DA                     u3461:
  8551   0022DA  EF70  F011         	goto	l4465
  8552   0022DE                     u3460:
  8553   0022DE  0611               	decf	___fladd@bexp^(0+1280),f,c
  8554   0022E0                     l4465:
  8555   0022E0  AE05               	btfss	(___fladd@b+2)^(0+1280),7,c
  8556   0022E2  EF75  F011         	goto	u3471
  8557   0022E6  EF77  F011         	goto	u3470
  8558   0022EA                     u3471:
  8559   0022EA  EF4D  F011         	goto	l4449
  8560   0022EE                     u3470:
  8561   0022EE                     l4467:
  8562   0022EE  0E00               	movlw	0
  8563   0022F0  6E10               	movwf	___fladd@aexp^(0+1280),c
  8564   0022F2  AE12               	btfss	___fladd@grs^(0+1280),7,c
  8565   0022F4  EF7E  F011         	goto	u3481
  8566   0022F8  EF80  F011         	goto	u3480
  8567   0022FC                     u3481:
  8568   0022FC  EF98  F011         	goto	l1727
  8569   002300                     u3480:
  8570   002300  C512  F50B         	movff	___fladd@grs,??___fladd
  8571   002304  0E7F               	movlw	127
  8572   002306  160B               	andwf	??___fladd^(0+1280),f,c
  8573   002308  B4D8               	btfsc	status,2,c
  8574   00230A  EF89  F011         	goto	u3491
  8575   00230E  EF8B  F011         	goto	u3490
  8576   002312                     u3491:
  8577   002312  EF8F  F011         	goto	l1728
  8578   002316                     u3490:
  8579   002316                     l4473:
  8580   002316  0E01               	movlw	1
  8581   002318  6E10               	movwf	___fladd@aexp^(0+1280),c
  8582   00231A  EF98  F011         	goto	l1727
  8583   00231E                     l1728:
  8584   00231E  A003               	btfss	___fladd@b^(0+1280),0,c
  8585   002320  EF94  F011         	goto	u3501
  8586   002324  EF96  F011         	goto	u3500
  8587   002328                     u3501:
  8588   002328  EF98  F011         	goto	l1727
  8589   00232C                     u3500:
  8590   00232C  EF8B  F011         	goto	l4473
  8591   002330                     l1727:
  8592   002330  5010               	movf	___fladd@aexp^(0+1280),w,c
  8593   002332  B4D8               	btfsc	status,2,c
  8594   002334  EF9E  F011         	goto	u3511
  8595   002338  EFA0  F011         	goto	u3510
  8596   00233C                     u3511:
  8597   00233C  EFCB  F011         	goto	l4485
  8598   002340                     u3510:
  8599   002340  0E01               	movlw	1
  8600   002342  2603               	addwf	___fladd@b^(0+1280),f,c
  8601   002344  0E00               	movlw	0
  8602   002346  2204               	addwfc	(___fladd@b+1)^(0+1280),f,c
  8603   002348  2205               	addwfc	(___fladd@b+2)^(0+1280),f,c
  8604   00234A  2206               	addwfc	(___fladd@b+3)^(0+1280),f,c
  8605   00234C  A006               	btfss	(___fladd@b+3)^(0+1280),0,c
  8606   00234E  EFAB  F011         	goto	u3521
  8607   002352  EFAD  F011         	goto	u3520
  8608   002356                     u3521:
  8609   002356  EFCB  F011         	goto	l4485
  8610   00235A                     u3520:
  8611   00235A  C503  F50B         	movff	___fladd@b,??___fladd
  8612   00235E  C504  F50C         	movff	___fladd@b+1,??___fladd+1
  8613   002362  C505  F50D         	movff	___fladd@b+2,??___fladd+2
  8614   002366  C506  F50E         	movff	___fladd@b+3,??___fladd+3
  8615   00236A  340E               	rlcf	(??___fladd+3)^(0+1280),w,c
  8616   00236C  320E               	rrcf	(??___fladd+3)^(0+1280),f,c
  8617   00236E  320D               	rrcf	(??___fladd+2)^(0+1280),f,c
  8618   002370  320C               	rrcf	(??___fladd+1)^(0+1280),f,c
  8619   002372  320B               	rrcf	??___fladd^(0+1280),f,c
  8620   002374  C50B  F503         	movff	??___fladd,___fladd@b
  8621   002378  C50C  F504         	movff	??___fladd+1,___fladd@b+1
  8622   00237C  C50D  F505         	movff	??___fladd+2,___fladd@b+2
  8623   002380  C50E  F506         	movff	??___fladd+3,___fladd@b+3
  8624   002384  2811               	incf	___fladd@bexp^(0+1280),w,c
  8625   002386  B4D8               	btfsc	status,2,c
  8626   002388  EFC8  F011         	goto	u3531
  8627   00238C  EFCA  F011         	goto	u3530
  8628   002390                     u3531:
  8629   002390  EFCB  F011         	goto	l4485
  8630   002394                     u3530:
  8631   002394  2A11               	incf	___fladd@bexp^(0+1280),f,c
  8632   002396                     l4485:
  8633   002396  2811               	incf	___fladd@bexp^(0+1280),w,c
  8634   002398  B4D8               	btfsc	status,2,c
  8635   00239A  EFD1  F011         	goto	u3541
  8636   00239E  EFD3  F011         	goto	u3540
  8637   0023A2                     u3541:
  8638   0023A2  EFDB  F011         	goto	l4489
  8639   0023A6                     u3540:
  8640   0023A6  5011               	movf	___fladd@bexp^(0+1280),w,c
  8641   0023A8  A4D8               	btfss	status,2,c
  8642   0023AA  EFD9  F011         	goto	u3551
  8643   0023AE  EFDB  F011         	goto	u3550
  8644   0023B2                     u3551:
  8645   0023B2  EFED  F011         	goto	l4493
  8646   0023B6                     u3550:
  8647   0023B6                     l4489:
  8648   0023B6  0E00               	movlw	0
  8649   0023B8  6E03               	movwf	___fladd@b^(0+1280),c
  8650   0023BA  0E00               	movlw	0
  8651   0023BC  6E04               	movwf	(___fladd@b+1)^(0+1280),c
  8652   0023BE  0E00               	movlw	0
  8653   0023C0  6E05               	movwf	(___fladd@b+2)^(0+1280),c
  8654   0023C2  0E00               	movlw	0
  8655   0023C4  6E06               	movwf	(___fladd@b+3)^(0+1280),c
  8656   0023C6  5011               	movf	___fladd@bexp^(0+1280),w,c
  8657   0023C8  A4D8               	btfss	status,2,c
  8658   0023CA  EFE9  F011         	goto	u3561
  8659   0023CE  EFEB  F011         	goto	u3560
  8660   0023D2                     u3561:
  8661   0023D2  EFED  F011         	goto	l4493
  8662   0023D6                     u3560:
  8663   0023D6  0E00               	movlw	0
  8664   0023D8  6E0F               	movwf	___fladd@signs^(0+1280),c
  8665   0023DA                     l4493:
  8666   0023DA  A011               	btfss	___fladd@bexp^(0+1280),0,c
  8667   0023DC  EFF2  F011         	goto	u3571
  8668   0023E0  EFF4  F011         	goto	u3570
  8669   0023E4                     u3571:
  8670   0023E4  EFF7  F011         	goto	l4497
  8671   0023E8                     u3570:
  8672   0023E8  8E05               	bsf	(___fladd@b+2)^(0+1280),7,c
  8673   0023EA  EFF8  F011         	goto	l4499
  8674   0023EE                     l4497:
  8675   0023EE  9E05               	bcf	(___fladd@b+2)^(0+1280),7,c
  8676   0023F0                     l4499:
  8677   0023F0  90D8               	bcf	status,0,c
  8678   0023F2  3011               	rrcf	___fladd@bexp^(0+1280),w,c
  8679   0023F4  6E06               	movwf	(___fladd@b+3)^(0+1280),c
  8680   0023F6  AE0F               	btfss	___fladd@signs^(0+1280),7,c
  8681   0023F8  EF00  F012         	goto	u3581
  8682   0023FC  EF02  F012         	goto	u3580
  8683   002400                     u3581:
  8684   002400  EF03  F012         	goto	l4505
  8685   002404                     u3580:
  8686   002404  8E06               	bsf	(___fladd@b+3)^(0+1280),7,c
  8687   002406                     l4505:
  8688   002406  C503  F503         	movff	___fladd@b,?___fladd
  8689   00240A  C504  F504         	movff	___fladd@b+1,?___fladd+1
  8690   00240E  C505  F505         	movff	___fladd@b+2,?___fladd+2
  8691   002412  C506  F506         	movff	___fladd@b+3,?___fladd+3
  8692   002416                     l1710:
  8693   002416  0012               	return		;funcret
  8694   002418                     __end_of___fladd:
  8695                           	callstack 0
  8696                           
  8697 ;; *************** function ___flge *****************
  8698 ;; Defined at:
  8699 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  ff1             4    0[BANK5 ] unsigned char 
  8702 ;;  ff2             4    4[BANK5 ] unsigned char 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;		None               void
  8707 ;; Registers used:
  8708 ;;		wreg, status,2, status,0
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8714 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;Total ram usage:       12 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; Hardware stack levels required when called: 5
  8721 ;; This function calls:
  8722 ;;		Nothing
  8723 ;; This function is called by:
  8724 ;;		_set0
  8725 ;;		_set1
  8726 ;;		_set2
  8727 ;;		_set3
  8728 ;;		_efgtoa
  8729 ;; This function uses a non-reentrant model
  8730 ;;
  8731                           
  8732                           	psect	text39
  8733   004246                     __ptext39:
  8734                           	callstack 0
  8735   004246                     ___flge:
  8736                           	callstack 115
  8737   004246  0E00               	movlw	0
  8738   004248  0105               	movlb	5	; () banked
  8739   00424A  1560               	andwf	___flge@ff1& (0+255),w,b
  8740   00424C  6F68               	movwf	??___flge& (0+255),b
  8741   00424E  0E00               	movlw	0
  8742   004250  1561               	andwf	(___flge@ff1+1)& (0+255),w,b
  8743   004252  6F69               	movwf	(??___flge+1)& (0+255),b
  8744   004254  0E80               	movlw	128
  8745   004256  1562               	andwf	(___flge@ff1+2)& (0+255),w,b
  8746   004258  6F6A               	movwf	(??___flge+2)& (0+255),b
  8747   00425A  0E7F               	movlw	127
  8748   00425C  1563               	andwf	(___flge@ff1+3)& (0+255),w,b
  8749   00425E  6F6B               	movwf	(??___flge+3)& (0+255),b
  8750   004260  5168               	movf	??___flge& (0+255),w,b
  8751   004262  1169               	iorwf	(??___flge+1)& (0+255),w,b
  8752   004264  116A               	iorwf	(??___flge+2)& (0+255),w,b
  8753   004266  116B               	iorwf	(??___flge+3)& (0+255),w,b
  8754   004268  A4D8               	btfss	status,2,c
  8755   00426A  EF39  F021         	goto	u6271
  8756   00426E  EF3B  F021         	goto	u6270
  8757   004272                     u6271:
  8758   004272  EF43  F021         	goto	l6429
  8759   004276                     u6270:
  8760   004276                     
  8761                           ; BSR set to: 5
  8762   004276  0E00               	movlw	0
  8763   004278  6F60               	movwf	___flge@ff1& (0+255),b
  8764   00427A  0E00               	movlw	0
  8765   00427C  6F61               	movwf	(___flge@ff1+1)& (0+255),b
  8766   00427E  0E00               	movlw	0
  8767   004280  6F62               	movwf	(___flge@ff1+2)& (0+255),b
  8768   004282  0E00               	movlw	0
  8769   004284  6F63               	movwf	(___flge@ff1+3)& (0+255),b
  8770   004286                     l6429:
  8771                           
  8772                           ; BSR set to: 5
  8773   004286  0E00               	movlw	0
  8774   004288  1564               	andwf	___flge@ff2& (0+255),w,b
  8775   00428A  6F68               	movwf	??___flge& (0+255),b
  8776   00428C  0E00               	movlw	0
  8777   00428E  1565               	andwf	(___flge@ff2+1)& (0+255),w,b
  8778   004290  6F69               	movwf	(??___flge+1)& (0+255),b
  8779   004292  0E80               	movlw	128
  8780   004294  1566               	andwf	(___flge@ff2+2)& (0+255),w,b
  8781   004296  6F6A               	movwf	(??___flge+2)& (0+255),b
  8782   004298  0E7F               	movlw	127
  8783   00429A  1567               	andwf	(___flge@ff2+3)& (0+255),w,b
  8784   00429C  6F6B               	movwf	(??___flge+3)& (0+255),b
  8785   00429E  5168               	movf	??___flge& (0+255),w,b
  8786   0042A0  1169               	iorwf	(??___flge+1)& (0+255),w,b
  8787   0042A2  116A               	iorwf	(??___flge+2)& (0+255),w,b
  8788   0042A4  116B               	iorwf	(??___flge+3)& (0+255),w,b
  8789   0042A6  A4D8               	btfss	status,2,c
  8790   0042A8  EF58  F021         	goto	u6281
  8791   0042AC  EF5A  F021         	goto	u6280
  8792   0042B0                     u6281:
  8793   0042B0  EF62  F021         	goto	l6433
  8794   0042B4                     u6280:
  8795   0042B4                     
  8796                           ; BSR set to: 5
  8797   0042B4  0E00               	movlw	0
  8798   0042B6  6F64               	movwf	___flge@ff2& (0+255),b
  8799   0042B8  0E00               	movlw	0
  8800   0042BA  6F65               	movwf	(___flge@ff2+1)& (0+255),b
  8801   0042BC  0E00               	movlw	0
  8802   0042BE  6F66               	movwf	(___flge@ff2+2)& (0+255),b
  8803   0042C0  0E00               	movlw	0
  8804   0042C2  6F67               	movwf	(___flge@ff2+3)& (0+255),b
  8805   0042C4                     l6433:
  8806                           
  8807                           ; BSR set to: 5
  8808   0042C4  AF63               	btfss	(___flge@ff1+3)& (0+255),7,b
  8809   0042C6  EF67  F021         	goto	u6291
  8810   0042CA  EF69  F021         	goto	u6290
  8811   0042CE                     u6291:
  8812   0042CE  EF72  F021         	goto	l6437
  8813   0042D2                     u6290:
  8814   0042D2                     
  8815                           ; BSR set to: 5
  8816   0042D2  6D60               	negf	___flge@ff1& (0+255),b
  8817   0042D4  1F61               	comf	(___flge@ff1+1)& (0+255),f,b
  8818   0042D6  B0D8               	btfsc	status,0,c
  8819   0042D8  2B61               	incf	(___flge@ff1+1)& (0+255),f,b
  8820   0042DA  1F62               	comf	(___flge@ff1+2)& (0+255),f,b
  8821   0042DC  B0D8               	btfsc	status,0,c
  8822   0042DE  2B62               	incf	(___flge@ff1+2)& (0+255),f,b
  8823   0042E0  0E80               	movlw	128
  8824   0042E2  5763               	subfwb	(___flge@ff1+3)& (0+255),f,b
  8825   0042E4                     l6437:
  8826                           
  8827                           ; BSR set to: 5
  8828   0042E4  AF67               	btfss	(___flge@ff2+3)& (0+255),7,b
  8829   0042E6  EF77  F021         	goto	u6301
  8830   0042EA  EF79  F021         	goto	u6300
  8831   0042EE                     u6301:
  8832   0042EE  EF82  F021         	goto	l1438
  8833   0042F2                     u6300:
  8834   0042F2                     
  8835                           ; BSR set to: 5
  8836   0042F2  6D64               	negf	___flge@ff2& (0+255),b
  8837   0042F4  1F65               	comf	(___flge@ff2+1)& (0+255),f,b
  8838   0042F6  B0D8               	btfsc	status,0,c
  8839   0042F8  2B65               	incf	(___flge@ff2+1)& (0+255),f,b
  8840   0042FA  1F66               	comf	(___flge@ff2+2)& (0+255),f,b
  8841   0042FC  B0D8               	btfsc	status,0,c
  8842   0042FE  2B66               	incf	(___flge@ff2+2)& (0+255),f,b
  8843   004300  0E80               	movlw	128
  8844   004302  5767               	subfwb	(___flge@ff2+3)& (0+255),f,b
  8845   004304                     l1438:
  8846                           
  8847                           ; BSR set to: 5
  8848   004304  0E00               	movlw	0
  8849   004306  1B60               	xorwf	___flge@ff1& (0+255),f,b
  8850   004308  0E00               	movlw	0
  8851   00430A  1B61               	xorwf	(___flge@ff1+1)& (0+255),f,b
  8852   00430C  0E00               	movlw	0
  8853   00430E  1B62               	xorwf	(___flge@ff1+2)& (0+255),f,b
  8854   004310  0E80               	movlw	128
  8855   004312  1B63               	xorwf	(___flge@ff1+3)& (0+255),f,b
  8856   004314  0E00               	movlw	0
  8857   004316  1B64               	xorwf	___flge@ff2& (0+255),f,b
  8858   004318  0E00               	movlw	0
  8859   00431A  1B65               	xorwf	(___flge@ff2+1)& (0+255),f,b
  8860   00431C  0E00               	movlw	0
  8861   00431E  1B66               	xorwf	(___flge@ff2+2)& (0+255),f,b
  8862   004320  0E80               	movlw	128
  8863   004322  1B67               	xorwf	(___flge@ff2+3)& (0+255),f,b
  8864   004324  5164               	movf	___flge@ff2& (0+255),w,b
  8865   004326  5D60               	subwf	___flge@ff1& (0+255),w,b
  8866   004328  5165               	movf	(___flge@ff2+1)& (0+255),w,b
  8867   00432A  5961               	subwfb	(___flge@ff1+1)& (0+255),w,b
  8868   00432C  5166               	movf	(___flge@ff2+2)& (0+255),w,b
  8869   00432E  5962               	subwfb	(___flge@ff1+2)& (0+255),w,b
  8870   004330  5167               	movf	(___flge@ff2+3)& (0+255),w,b
  8871   004332  5963               	subwfb	(___flge@ff1+3)& (0+255),w,b
  8872   004334  B0D8               	btfsc	status,0,c
  8873   004336  EF9F  F021         	goto	u6311
  8874   00433A  EFA1  F021         	goto	u6310
  8875   00433E                     u6311:
  8876   00433E  EFA4  F021         	goto	l6443
  8877   004342                     u6310:
  8878   004342                     
  8879                           ; BSR set to: 5
  8880   004342  90D8               	bcf	status,0,c
  8881   004344  EFA5  F021         	goto	l1443
  8882   004348                     l6443:
  8883                           
  8884                           ; BSR set to: 5
  8885   004348  80D8               	bsf	status,0,c
  8886   00434A                     l1443:
  8887                           
  8888                           ; BSR set to: 5
  8889   00434A  0012               	return		;funcret
  8890   00434C                     __end_of___flge:
  8891                           	callstack 0
  8892                           
  8893 ;; *************** function _closeGate *****************
  8894 ;; Defined at:
  8895 ;;		line 203 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  8896 ;; Parameters:    Size  Location     Type
  8897 ;;		None
  8898 ;; Auto vars:     Size  Location     Type
  8899 ;;		None
  8900 ;; Return value:  Size  Location     Type
  8901 ;;                  1    wreg      void 
  8902 ;; Registers used:
  8903 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8904 ;; Tracked objects:
  8905 ;;		On entry : 0/0
  8906 ;;		On exit  : 0/0
  8907 ;;		Unchanged: 0/0
  8908 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8913 ;;Total ram usage:        0 bytes
  8914 ;; Hardware stack levels used: 1
  8915 ;; Hardware stack levels required when called: 7
  8916 ;; This function calls:
  8917 ;;		_setServoAngle
  8918 ;; This function is called by:
  8919 ;;		_ejecutarModoAutomatico
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text40
  8924   0050A0                     __ptext40:
  8925                           	callstack 0
  8926   0050A0                     _closeGate:
  8927                           	callstack 117
  8928   0050A0                     
  8929                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 204:     if (!detener)
  8930   0050A0  0105               	movlb	5	; () banked
  8931   0050A2  51EE               	movf	_detener& (0+255),w,b	;volatile
  8932   0050A4  A4D8               	btfss	status,2,c
  8933   0050A6  EF57  F028         	goto	u5451
  8934   0050AA  EF59  F028         	goto	u5450
  8935   0050AE                     u5451:
  8936   0050AE  EF64  F028         	goto	l1170
  8937   0050B2                     u5450:
  8938   0050B2                     
  8939                           ; BSR set to: 5
  8940                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 205:     {;C:/Users/jhon-/MPLABXP
      +                          rojects/robot.X/ServoControl.c: 206:         setServoAngle(4, 90.0);
  8941   0050B2  0E00               	movlw	0
  8942   0050B4  6E47               	movwf	setServoAngle@angulo^(0+1280),c
  8943   0050B6  0E00               	movlw	0
  8944   0050B8  6E48               	movwf	(setServoAngle@angulo+1)^(0+1280),c
  8945   0050BA  0EB4               	movlw	180
  8946   0050BC  6E49               	movwf	(setServoAngle@angulo+2)^(0+1280),c
  8947   0050BE  0E42               	movlw	66
  8948   0050C0  6E4A               	movwf	(setServoAngle@angulo+3)^(0+1280),c
  8949   0050C2  0E04               	movlw	4
  8950   0050C4  EC16  F020         	call	_setServoAngle
  8951   0050C8                     l1170:
  8952   0050C8  0012               	return		;funcret
  8953   0050CA                     __end_of_closeGate:
  8954                           	callstack 0
  8955                           
  8956 ;; *************** function _setServoAngle *****************
  8957 ;; Defined at:
  8958 ;;		line 43 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  servo           1    wreg     unsigned char 
  8961 ;;  angulo          4   70[COMRAM] float 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  servo           1   74[COMRAM] unsigned char 
  8964 ;;  pwmValue        2   75[COMRAM] unsigned int 
  8965 ;; Return value:  Size  Location     Type
  8966 ;;                  1    wreg      void 
  8967 ;; Registers used:
  8968 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  8974 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8978 ;;Total ram usage:        7 bytes
  8979 ;; Hardware stack levels used: 1
  8980 ;; Hardware stack levels required when called: 6
  8981 ;; This function calls:
  8982 ;;		_PWM1_16BIT_LoadBufferRegisters
  8983 ;;		_PWM1_16BIT_SetSlice1Output1DutyCycleRegister
  8984 ;;		_PWM1_16BIT_SetSlice1Output2DutyCycleRegister
  8985 ;;		_PWM2_16BIT_LoadBufferRegisters
  8986 ;;		_PWM2_16BIT_SetSlice1Output1DutyCycleRegister
  8987 ;;		_PWM2_16BIT_SetSlice1Output2DutyCycleRegister
  8988 ;;		_PWM3_16BIT_LoadBufferRegisters
  8989 ;;		_PWM3_16BIT_SetSlice1Output1DutyCycleRegister
  8990 ;;		_PWM3_16BIT_SetSlice1Output2DutyCycleRegister
  8991 ;;		___fldiv
  8992 ;;		___flmul
  8993 ;;		___fltol
  8994 ;; This function is called by:
  8995 ;;		_set0
  8996 ;;		_set1
  8997 ;;		_set2
  8998 ;;		_set3
  8999 ;;		_openGate
  9000 ;;		_closeGate
  9001 ;; This function uses a non-reentrant model
  9002 ;;
  9003                           
  9004                           	psect	text41
  9005   00402C                     __ptext41:
  9006                           	callstack 0
  9007   00402C                     _setServoAngle:
  9008                           	callstack 116
  9009                           
  9010                           ;incstack = 0
  9011                           ;setServoAngle@servo stored from wreg
  9012   00402C  6E4B               	movwf	setServoAngle@servo^(0+1280),c
  9013   00402E                     
  9014                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 44:     unsigned int pwmValue = (
      +                          uint16_t)(((float)angulo / 180.0 * (65535 - 0)) + 0);
  9015   00402E  0E00               	movlw	0
  9016   004030  6E20               	movwf	___flmul@a^(0+1280),c
  9017   004032  0EFF               	movlw	255
  9018   004034  6E21               	movwf	(___flmul@a+1)^(0+1280),c
  9019   004036  0E7F               	movlw	127
  9020   004038  6E22               	movwf	(___flmul@a+2)^(0+1280),c
  9021   00403A  0E47               	movlw	71
  9022   00403C  6E23               	movwf	(___flmul@a+3)^(0+1280),c
  9023   00403E  0E00               	movlw	0
  9024   004040  6E07               	movwf	___fldiv@a^(0+1280),c
  9025   004042  0E00               	movlw	0
  9026   004044  6E08               	movwf	(___fldiv@a+1)^(0+1280),c
  9027   004046  0E34               	movlw	52
  9028   004048  6E09               	movwf	(___fldiv@a+2)^(0+1280),c
  9029   00404A  0E43               	movlw	67
  9030   00404C  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
  9031   00404E  C547  F503         	movff	setServoAngle@angulo,___fldiv@b
  9032   004052  C548  F504         	movff	setServoAngle@angulo+1,___fldiv@b+1
  9033   004056  C549  F505         	movff	setServoAngle@angulo+2,___fldiv@b+2
  9034   00405A  C54A  F506         	movff	setServoAngle@angulo+3,___fldiv@b+3
  9035   00405E  EC04  F016         	call	___fldiv	;wreg free
  9036   004062  C503  F51C         	movff	?___fldiv,___flmul@b
  9037   004066  C504  F51D         	movff	?___fldiv+1,___flmul@b+1
  9038   00406A  C505  F51E         	movff	?___fldiv+2,___flmul@b+2
  9039   00406E  C506  F51F         	movff	?___fldiv+3,___flmul@b+3
  9040   004072  EC0C  F012         	call	___flmul	;wreg free
  9041   004076  C51C  F53D         	movff	?___flmul,___fltol@f1
  9042   00407A  C51D  F53E         	movff	?___flmul+1,___fltol@f1+1
  9043   00407E  C51E  F53F         	movff	?___flmul+2,___fltol@f1+2
  9044   004082  C51F  F540         	movff	?___flmul+3,___fltol@f1+3
  9045   004086  ECA6  F021         	call	___fltol	;wreg free
  9046   00408A  C53D  F54C         	movff	?___fltol,setServoAngle@pwmValue
  9047   00408E  C53E  F54D         	movff	?___fltol+1,setServoAngle@pwmValue+1
  9048                           
  9049                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 45:     switch (servo) {
  9050   004092  EF81  F020         	goto	l5511
  9051   004096                     l5485:
  9052                           
  9053                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 48:             PWM1_16BIT_SetSli
      +                          ce1Output1DutyCycleRegister(pwmValue);
  9054   004096  C54C  F503         	movff	setServoAngle@pwmValue,PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue
  9055   00409A  C54D  F504         	movff	setServoAngle@pwmValue+1,PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerVal
      +                          ue+1
  9056   00409E  EC47  F029         	call	_PWM1_16BIT_SetSlice1Output1DutyCycleRegister	;wreg free
  9057   0040A2                     l5487:
  9058                           
  9059                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 50:             PWM1_16BIT_LoadBu
      +                          fferRegisters();
  9060   0040A2  ECA6  F029         	call	_PWM1_16BIT_LoadBufferRegisters	;wreg free
  9061                           
  9062                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 51:             break;
  9063   0040A6  EF9C  F020         	goto	l1095
  9064   0040AA                     l5489:
  9065                           
  9066                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 54:             PWM1_16BIT_SetSli
      +                          ce1Output2DutyCycleRegister(pwmValue);
  9067   0040AA  C54C  F503         	movff	setServoAngle@pwmValue,PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue
  9068   0040AE  C54D  F504         	movff	setServoAngle@pwmValue+1,PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerVal
      +                          ue+1
  9069   0040B2  EC42  F029         	call	_PWM1_16BIT_SetSlice1Output2DutyCycleRegister	;wreg free
  9070   0040B6  EF51  F020         	goto	l5487
  9071   0040BA                     l5493:
  9072                           
  9073                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 60:             PWM2_16BIT_SetSli
      +                          ce1Output1DutyCycleRegister(pwmValue);
  9074   0040BA  C54C  F503         	movff	setServoAngle@pwmValue,PWM2_16BIT_SetSlice1Output1DutyCycleRegister@registerValue
  9075   0040BE  C54D  F504         	movff	setServoAngle@pwmValue+1,PWM2_16BIT_SetSlice1Output1DutyCycleRegister@registerVal
      +                          ue+1
  9076   0040C2  EC3D  F029         	call	_PWM2_16BIT_SetSlice1Output1DutyCycleRegister	;wreg free
  9077   0040C6                     l5495:
  9078                           
  9079                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 62:             PWM2_16BIT_LoadBu
      +                          fferRegisters();
  9080   0040C6  ECA4  F029         	call	_PWM2_16BIT_LoadBufferRegisters	;wreg free
  9081                           
  9082                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 63:             break;
  9083   0040CA  EF9C  F020         	goto	l1095
  9084   0040CE                     l5497:
  9085                           
  9086                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 66:             PWM2_16BIT_SetSli
      +                          ce1Output2DutyCycleRegister(pwmValue);
  9087   0040CE  C54C  F503         	movff	setServoAngle@pwmValue,PWM2_16BIT_SetSlice1Output2DutyCycleRegister@registerValue
  9088   0040D2  C54D  F504         	movff	setServoAngle@pwmValue+1,PWM2_16BIT_SetSlice1Output2DutyCycleRegister@registerVal
      +                          ue+1
  9089   0040D6  EC38  F029         	call	_PWM2_16BIT_SetSlice1Output2DutyCycleRegister	;wreg free
  9090   0040DA  EF63  F020         	goto	l5495
  9091   0040DE                     l5501:
  9092                           
  9093                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 72:             PWM3_16BIT_SetSli
      +                          ce1Output1DutyCycleRegister(pwmValue);
  9094   0040DE  C54C  F503         	movff	setServoAngle@pwmValue,PWM3_16BIT_SetSlice1Output1DutyCycleRegister@registerValue
  9095   0040E2  C54D  F504         	movff	setServoAngle@pwmValue+1,PWM3_16BIT_SetSlice1Output1DutyCycleRegister@registerVal
      +                          ue+1
  9096   0040E6  EC33  F029         	call	_PWM3_16BIT_SetSlice1Output1DutyCycleRegister	;wreg free
  9097   0040EA                     l5503:
  9098                           
  9099                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 74:             PWM3_16BIT_LoadBu
      +                          fferRegisters();
  9100   0040EA  ECA2  F029         	call	_PWM3_16BIT_LoadBufferRegisters	;wreg free
  9101                           
  9102                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 75:             break;
  9103   0040EE  EF9C  F020         	goto	l1095
  9104   0040F2                     l5505:
  9105                           
  9106                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 78:             PWM3_16BIT_SetSli
      +                          ce1Output2DutyCycleRegister(pwmValue);
  9107   0040F2  C54C  F503         	movff	setServoAngle@pwmValue,PWM3_16BIT_SetSlice1Output2DutyCycleRegister@registerValue
  9108   0040F6  C54D  F504         	movff	setServoAngle@pwmValue+1,PWM3_16BIT_SetSlice1Output2DutyCycleRegister@registerVal
      +                          ue+1
  9109   0040FA  EC2E  F029         	call	_PWM3_16BIT_SetSlice1Output2DutyCycleRegister	;wreg free
  9110   0040FE  EF75  F020         	goto	l5503
  9111   004102                     l5511:
  9112   004102  504B               	movf	setServoAngle@servo^(0+1280),w,c
  9113                           
  9114                           ; Switch size 1, requested type "simple"
  9115                           ; Number of cases is 6, Range of values is 0 to 5
  9116                           ; switch strategies available:
  9117                           ; Name         Instructions Cycles
  9118                           ; simple_byte           19    10 (average)
  9119                           ;	Chosen strategy is simple_byte
  9120   004104  0A00               	xorlw	0	; case 0
  9121   004106  B4D8               	btfsc	status,2,c
  9122   004108  EF4B  F020         	goto	l5485
  9123   00410C  0A01               	xorlw	1	; case 1
  9124   00410E  B4D8               	btfsc	status,2,c
  9125   004110  EF55  F020         	goto	l5489
  9126   004114  0A03               	xorlw	3	; case 2
  9127   004116  B4D8               	btfsc	status,2,c
  9128   004118  EF5D  F020         	goto	l5493
  9129   00411C  0A01               	xorlw	1	; case 3
  9130   00411E  B4D8               	btfsc	status,2,c
  9131   004120  EF67  F020         	goto	l5497
  9132   004124  0A07               	xorlw	7	; case 4
  9133   004126  B4D8               	btfsc	status,2,c
  9134   004128  EF6F  F020         	goto	l5501
  9135   00412C  0A01               	xorlw	1	; case 5
  9136   00412E  B4D8               	btfsc	status,2,c
  9137   004130  EF79  F020         	goto	l5505
  9138   004134  EF9C  F020         	goto	l1095
  9139   004138                     l1095:
  9140   004138  0012               	return		;funcret
  9141   00413A                     __end_of_setServoAngle:
  9142                           	callstack 0
  9143                           
  9144 ;; *************** function ___fltol *****************
  9145 ;; Defined at:
  9146 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;  f1              4   60[COMRAM] void 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  exp1            1   69[COMRAM] unsigned char 
  9151 ;;  sign1           1   68[COMRAM] unsigned char 
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  4   60[COMRAM] long 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9161 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9164 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9165 ;;Total ram usage:       10 bytes
  9166 ;; Hardware stack levels used: 1
  9167 ;; Hardware stack levels required when called: 5
  9168 ;; This function calls:
  9169 ;;		Nothing
  9170 ;; This function is called by:
  9171 ;;		_setServoAngle
  9172 ;;		_set0
  9173 ;;		_set1
  9174 ;;		_set2
  9175 ;;		_set3
  9176 ;;		_efgtoa
  9177 ;;		_controlServoMotor
  9178 ;; This function uses a non-reentrant model
  9179 ;;
  9180                           
  9181                           	psect	text42
  9182   00434C                     __ptext42:
  9183                           	callstack 0
  9184   00434C                     ___fltol:
  9185                           	callstack 115
  9186   00434C  343F               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  9187   00434E  3440               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  9188   004350  6E46               	movwf	___fltol@exp1^(0+1280),c
  9189   004352  5046               	movf	___fltol@exp1^(0+1280),w,c
  9190   004354  A4D8               	btfss	status,2,c
  9191   004356  EFAF  F021         	goto	u4241
  9192   00435A  EFB1  F021         	goto	u4240
  9193   00435E                     u4241:
  9194   00435E  EFBB  F021         	goto	l4933
  9195   004362                     u4240:
  9196   004362                     l4929:
  9197   004362  0E00               	movlw	0
  9198   004364  6E3D               	movwf	?___fltol^(0+1280),c
  9199   004366  0E00               	movlw	0
  9200   004368  6E3E               	movwf	(?___fltol+1)^(0+1280),c
  9201   00436A  0E00               	movlw	0
  9202   00436C  6E3F               	movwf	(?___fltol+2)^(0+1280),c
  9203   00436E  0E00               	movlw	0
  9204   004370  6E40               	movwf	(?___fltol+3)^(0+1280),c
  9205   004372  EF28  F022         	goto	l1470
  9206   004376                     l4933:
  9207   004376  C53D  F541         	movff	___fltol@f1,??___fltol
  9208   00437A  C53E  F542         	movff	___fltol@f1+1,??___fltol+1
  9209   00437E  C53F  F543         	movff	___fltol@f1+2,??___fltol+2
  9210   004382  C540  F544         	movff	___fltol@f1+3,??___fltol+3
  9211   004386  0E20               	movlw	32
  9212   004388  EFCB  F021         	goto	u4250
  9213   00438C                     u4255:
  9214   00438C  90D8               	bcf	status,0,c
  9215   00438E  3244               	rrcf	(??___fltol+3)^(0+1280),f,c
  9216   004390  3243               	rrcf	(??___fltol+2)^(0+1280),f,c
  9217   004392  3242               	rrcf	(??___fltol+1)^(0+1280),f,c
  9218   004394  3241               	rrcf	??___fltol^(0+1280),f,c
  9219   004396                     u4250:
  9220   004396  2EE8               	decfsz	wreg,f,c
  9221   004398  EFC6  F021         	goto	u4255
  9222   00439C  5041               	movf	??___fltol^(0+1280),w,c
  9223   00439E  6E45               	movwf	___fltol@sign1^(0+1280),c
  9224   0043A0  8E3F               	bsf	(___fltol@f1+2)^(0+1280),7,c
  9225   0043A2  0EFF               	movlw	255
  9226   0043A4  163D               	andwf	___fltol@f1^(0+1280),f,c
  9227   0043A6  0EFF               	movlw	255
  9228   0043A8  163E               	andwf	(___fltol@f1+1)^(0+1280),f,c
  9229   0043AA  0EFF               	movlw	255
  9230   0043AC  163F               	andwf	(___fltol@f1+2)^(0+1280),f,c
  9231   0043AE  0E00               	movlw	0
  9232   0043B0  1640               	andwf	(___fltol@f1+3)^(0+1280),f,c
  9233   0043B2  0E96               	movlw	150
  9234   0043B4  5E46               	subwf	___fltol@exp1^(0+1280),f,c
  9235   0043B6  BE46               	btfsc	___fltol@exp1^(0+1280),7,c
  9236   0043B8  EFE2  F021         	goto	u4260
  9237   0043BC  EFE0  F021         	goto	u4261
  9238   0043C0                     u4261:
  9239   0043C0  EFF8  F021         	goto	l4953
  9240   0043C4                     u4260:
  9241   0043C4  5046               	movf	___fltol@exp1^(0+1280),w,c
  9242   0043C6  0A80               	xorlw	128
  9243   0043C8  0F97               	addlw	151
  9244   0043CA  B0D8               	btfsc	status,0,c
  9245   0043CC  EFEA  F021         	goto	u4271
  9246   0043D0  EFEC  F021         	goto	u4270
  9247   0043D4                     u4271:
  9248   0043D4  EFEE  F021         	goto	l4949
  9249   0043D8                     u4270:
  9250   0043D8  EFB1  F021         	goto	l4929
  9251   0043DC                     l4949:
  9252   0043DC  90D8               	bcf	status,0,c
  9253   0043DE  3240               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  9254   0043E0  323F               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  9255   0043E2  323E               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  9256   0043E4  323D               	rrcf	___fltol@f1^(0+1280),f,c
  9257   0043E6  3E46               	incfsz	___fltol@exp1^(0+1280),f,c
  9258   0043E8  EFEE  F021         	goto	l4949
  9259   0043EC  EF10  F022         	goto	l4963
  9260   0043F0                     l4953:
  9261   0043F0  0E1F               	movlw	31
  9262   0043F2  6446               	cpfsgt	___fltol@exp1^(0+1280),c
  9263   0043F4  EFFE  F021         	goto	u4281
  9264   0043F8  EF00  F022         	goto	u4280
  9265   0043FC                     u4281:
  9266   0043FC  EF08  F022         	goto	l4961
  9267   004400                     u4280:
  9268   004400  EFB1  F021         	goto	l4929
  9269   004404                     l4959:
  9270   004404  90D8               	bcf	status,0,c
  9271   004406  363D               	rlcf	___fltol@f1^(0+1280),f,c
  9272   004408  363E               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  9273   00440A  363F               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  9274   00440C  3640               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  9275   00440E  0646               	decf	___fltol@exp1^(0+1280),f,c
  9276   004410                     l4961:
  9277   004410  5046               	movf	___fltol@exp1^(0+1280),w,c
  9278   004412  A4D8               	btfss	status,2,c
  9279   004414  EF0E  F022         	goto	u4291
  9280   004418  EF10  F022         	goto	u4290
  9281   00441C                     u4291:
  9282   00441C  EF02  F022         	goto	l4959
  9283   004420                     u4290:
  9284   004420                     l4963:
  9285   004420  5045               	movf	___fltol@sign1^(0+1280),w,c
  9286   004422  B4D8               	btfsc	status,2,c
  9287   004424  EF16  F022         	goto	u4301
  9288   004428  EF18  F022         	goto	u4300
  9289   00442C                     u4301:
  9290   00442C  EF20  F022         	goto	l4967
  9291   004430                     u4300:
  9292   004430  1E40               	comf	(___fltol@f1+3)^(0+1280),f,c
  9293   004432  1E3F               	comf	(___fltol@f1+2)^(0+1280),f,c
  9294   004434  1E3E               	comf	(___fltol@f1+1)^(0+1280),f,c
  9295   004436  6C3D               	negf	___fltol@f1^(0+1280),c
  9296   004438  0E00               	movlw	0
  9297   00443A  223E               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  9298   00443C  223F               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  9299   00443E  2240               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  9300   004440                     l4967:
  9301   004440  C53D  F53D         	movff	___fltol@f1,?___fltol
  9302   004444  C53E  F53E         	movff	___fltol@f1+1,?___fltol+1
  9303   004448  C53F  F53F         	movff	___fltol@f1+2,?___fltol+2
  9304   00444C  C540  F540         	movff	___fltol@f1+3,?___fltol+3
  9305   004450                     l1470:
  9306   004450  0012               	return		;funcret
  9307   004452                     __end_of___fltol:
  9308                           	callstack 0
  9309                           
  9310 ;; *************** function ___flmul *****************
  9311 ;; Defined at:
  9312 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;  b               4   27[COMRAM] long 
  9315 ;;  a               4   31[COMRAM] long 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  prod            4   46[COMRAM] struct .
  9318 ;;  grs             4   40[COMRAM] unsigned long 
  9319 ;;  temp            2   50[COMRAM] struct .
  9320 ;;  bexp            1   45[COMRAM] unsigned char 
  9321 ;;  aexp            1   44[COMRAM] unsigned char 
  9322 ;;  sign            1   39[COMRAM] unsigned char 
  9323 ;; Return value:  Size  Location     Type
  9324 ;;                  4   27[COMRAM] unsigned char 
  9325 ;; Registers used:
  9326 ;;		wreg, status,2, status,0, prodl, prodh
  9327 ;; Tracked objects:
  9328 ;;		On entry : 0/0
  9329 ;;		On exit  : 0/0
  9330 ;;		Unchanged: 0/0
  9331 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9332 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9333 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9334 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9335 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9336 ;;Total ram usage:       25 bytes
  9337 ;; Hardware stack levels used: 1
  9338 ;; Hardware stack levels required when called: 5
  9339 ;; This function calls:
  9340 ;;		Nothing
  9341 ;; This function is called by:
  9342 ;;		_setServoAngle
  9343 ;;		_efgtoa
  9344 ;;		_controlServoMotor
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           	psect	text43
  9349   002418                     __ptext43:
  9350                           	callstack 0
  9351   002418                     ___flmul:
  9352                           	callstack 115
  9353   002418  501F               	movf	(___flmul@b+3)^(0+1280),w,c
  9354   00241A  0B80               	andlw	128
  9355   00241C  6E28               	movwf	___flmul@sign^(0+1280),c
  9356   00241E  501F               	movf	(___flmul@b+3)^(0+1280),w,c
  9357   002420  241F               	addwf	(___flmul@b+3)^(0+1280),w,c
  9358   002422  6E2E               	movwf	___flmul@bexp^(0+1280),c
  9359   002424  AE1E               	btfss	(___flmul@b+2)^(0+1280),7,c
  9360   002426  EF17  F012         	goto	u3961
  9361   00242A  EF19  F012         	goto	u3960
  9362   00242E                     u3961:
  9363   00242E  EF1A  F012         	goto	l4751
  9364   002432                     u3960:
  9365   002432  802E               	bsf	___flmul@bexp^(0+1280),0,c
  9366   002434                     l4751:
  9367   002434  502E               	movf	___flmul@bexp^(0+1280),w,c
  9368   002436  B4D8               	btfsc	status,2,c
  9369   002438  EF20  F012         	goto	u3971
  9370   00243C  EF22  F012         	goto	u3970
  9371   002440                     u3971:
  9372   002440  EF35  F012         	goto	l4759
  9373   002444                     u3970:
  9374   002444  282E               	incf	___flmul@bexp^(0+1280),w,c
  9375   002446  A4D8               	btfss	status,2,c
  9376   002448  EF28  F012         	goto	u3981
  9377   00244C  EF2A  F012         	goto	u3980
  9378   002450                     u3981:
  9379   002450  EF32  F012         	goto	l4757
  9380   002454                     u3980:
  9381   002454  0E00               	movlw	0
  9382   002456  6E1C               	movwf	___flmul@b^(0+1280),c
  9383   002458  0E00               	movlw	0
  9384   00245A  6E1D               	movwf	(___flmul@b+1)^(0+1280),c
  9385   00245C  0E00               	movlw	0
  9386   00245E  6E1E               	movwf	(___flmul@b+2)^(0+1280),c
  9387   002460  0E00               	movlw	0
  9388   002462  6E1F               	movwf	(___flmul@b+3)^(0+1280),c
  9389   002464                     l4757:
  9390   002464  8E1E               	bsf	(___flmul@b+2)^(0+1280),7,c
  9391   002466  EF3D  F012         	goto	l4761
  9392   00246A                     l4759:
  9393   00246A  0E00               	movlw	0
  9394   00246C  6E1C               	movwf	___flmul@b^(0+1280),c
  9395   00246E  0E00               	movlw	0
  9396   002470  6E1D               	movwf	(___flmul@b+1)^(0+1280),c
  9397   002472  0E00               	movlw	0
  9398   002474  6E1E               	movwf	(___flmul@b+2)^(0+1280),c
  9399   002476  0E00               	movlw	0
  9400   002478  6E1F               	movwf	(___flmul@b+3)^(0+1280),c
  9401   00247A                     l4761:
  9402   00247A  5023               	movf	(___flmul@a+3)^(0+1280),w,c
  9403   00247C  0B80               	andlw	128
  9404   00247E  1A28               	xorwf	___flmul@sign^(0+1280),f,c
  9405   002480  5023               	movf	(___flmul@a+3)^(0+1280),w,c
  9406   002482  2423               	addwf	(___flmul@a+3)^(0+1280),w,c
  9407   002484  6E2D               	movwf	___flmul@aexp^(0+1280),c
  9408   002486  AE22               	btfss	(___flmul@a+2)^(0+1280),7,c
  9409   002488  EF48  F012         	goto	u3991
  9410   00248C  EF4A  F012         	goto	u3990
  9411   002490                     u3991:
  9412   002490  EF4B  F012         	goto	l4769
  9413   002494                     u3990:
  9414   002494  802D               	bsf	___flmul@aexp^(0+1280),0,c
  9415   002496                     l4769:
  9416   002496  502D               	movf	___flmul@aexp^(0+1280),w,c
  9417   002498  B4D8               	btfsc	status,2,c
  9418   00249A  EF51  F012         	goto	u4001
  9419   00249E  EF53  F012         	goto	u4000
  9420   0024A2                     u4001:
  9421   0024A2  EF66  F012         	goto	l4777
  9422   0024A6                     u4000:
  9423   0024A6  282D               	incf	___flmul@aexp^(0+1280),w,c
  9424   0024A8  A4D8               	btfss	status,2,c
  9425   0024AA  EF59  F012         	goto	u4011
  9426   0024AE  EF5B  F012         	goto	u4010
  9427   0024B2                     u4011:
  9428   0024B2  EF63  F012         	goto	l4775
  9429   0024B6                     u4010:
  9430   0024B6  0E00               	movlw	0
  9431   0024B8  6E20               	movwf	___flmul@a^(0+1280),c
  9432   0024BA  0E00               	movlw	0
  9433   0024BC  6E21               	movwf	(___flmul@a+1)^(0+1280),c
  9434   0024BE  0E00               	movlw	0
  9435   0024C0  6E22               	movwf	(___flmul@a+2)^(0+1280),c
  9436   0024C2  0E00               	movlw	0
  9437   0024C4  6E23               	movwf	(___flmul@a+3)^(0+1280),c
  9438   0024C6                     l4775:
  9439   0024C6  8E22               	bsf	(___flmul@a+2)^(0+1280),7,c
  9440   0024C8  EF6E  F012         	goto	l1787
  9441   0024CC                     l4777:
  9442   0024CC  0E00               	movlw	0
  9443   0024CE  6E20               	movwf	___flmul@a^(0+1280),c
  9444   0024D0  0E00               	movlw	0
  9445   0024D2  6E21               	movwf	(___flmul@a+1)^(0+1280),c
  9446   0024D4  0E00               	movlw	0
  9447   0024D6  6E22               	movwf	(___flmul@a+2)^(0+1280),c
  9448   0024D8  0E00               	movlw	0
  9449   0024DA  6E23               	movwf	(___flmul@a+3)^(0+1280),c
  9450   0024DC                     l1787:
  9451   0024DC  502D               	movf	___flmul@aexp^(0+1280),w,c
  9452   0024DE  B4D8               	btfsc	status,2,c
  9453   0024E0  EF74  F012         	goto	u4021
  9454   0024E4  EF76  F012         	goto	u4020
  9455   0024E8                     u4021:
  9456   0024E8  EF7E  F012         	goto	l4781
  9457   0024EC                     u4020:
  9458   0024EC  502E               	movf	___flmul@bexp^(0+1280),w,c
  9459   0024EE  A4D8               	btfss	status,2,c
  9460   0024F0  EF7C  F012         	goto	u4031
  9461   0024F4  EF7E  F012         	goto	u4030
  9462   0024F8                     u4031:
  9463   0024F8  EF88  F012         	goto	l4785
  9464   0024FC                     u4030:
  9465   0024FC                     l4781:
  9466   0024FC  0E00               	movlw	0
  9467   0024FE  6E1C               	movwf	?___flmul^(0+1280),c
  9468   002500  0E00               	movlw	0
  9469   002502  6E1D               	movwf	(?___flmul+1)^(0+1280),c
  9470   002504  0E00               	movlw	0
  9471   002506  6E1E               	movwf	(?___flmul+2)^(0+1280),c
  9472   002508  0E00               	movlw	0
  9473   00250A  6E1F               	movwf	(?___flmul+3)^(0+1280),c
  9474   00250C  EF20  F014         	goto	l1791
  9475   002510                     l4785:
  9476   002510  5022               	movf	(___flmul@a+2)^(0+1280),w,c
  9477   002512  021C               	mulwf	___flmul@b^(0+1280),c
  9478   002514  C4F3 F533          	movff	prodl,___flmul@temp
  9479   002518  C4F4 F534          	movff	prodh,___flmul@temp+1
  9480   00251C  5033               	movf	___flmul@temp^(0+1280),w,c
  9481   00251E  6E29               	movwf	___flmul@grs^(0+1280),c
  9482   002520  6A2A               	clrf	(___flmul@grs+1)^(0+1280),c
  9483   002522  6A2B               	clrf	(___flmul@grs+2)^(0+1280),c
  9484   002524  6A2C               	clrf	(___flmul@grs+3)^(0+1280),c
  9485   002526  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9486   002528  6E2F               	movwf	___flmul@prod^(0+1280),c
  9487   00252A  6A30               	clrf	(___flmul@prod+1)^(0+1280),c
  9488   00252C  6A31               	clrf	(___flmul@prod+2)^(0+1280),c
  9489   00252E  6A32               	clrf	(___flmul@prod+3)^(0+1280),c
  9490   002530  5021               	movf	(___flmul@a+1)^(0+1280),w,c
  9491   002532  021D               	mulwf	(___flmul@b+1)^(0+1280),c
  9492   002534  C4F3 F533          	movff	prodl,___flmul@temp
  9493   002538  C4F4 F534          	movff	prodh,___flmul@temp+1
  9494   00253C  5033               	movf	___flmul@temp^(0+1280),w,c
  9495   00253E  2629               	addwf	___flmul@grs^(0+1280),f,c
  9496   002540  0E00               	movlw	0
  9497   002542  222A               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  9498   002544  222B               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  9499   002546  222C               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  9500   002548  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9501   00254A  262F               	addwf	___flmul@prod^(0+1280),f,c
  9502   00254C  0E00               	movlw	0
  9503   00254E  2230               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  9504   002550  2231               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  9505   002552  2232               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  9506   002554  5020               	movf	___flmul@a^(0+1280),w,c
  9507   002556  021E               	mulwf	(___flmul@b+2)^(0+1280),c
  9508   002558  C4F3 F533          	movff	prodl,___flmul@temp
  9509   00255C  C4F4 F534          	movff	prodh,___flmul@temp+1
  9510   002560  5033               	movf	___flmul@temp^(0+1280),w,c
  9511   002562  2629               	addwf	___flmul@grs^(0+1280),f,c
  9512   002564  0E00               	movlw	0
  9513   002566  222A               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  9514   002568  222B               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  9515   00256A  222C               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  9516   00256C  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9517   00256E  262F               	addwf	___flmul@prod^(0+1280),f,c
  9518   002570  0E00               	movlw	0
  9519   002572  2230               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  9520   002574  2231               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  9521   002576  2232               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  9522   002578  C52B  F52C         	movff	___flmul@grs+2,___flmul@grs+3
  9523   00257C  C52A  F52B         	movff	___flmul@grs+1,___flmul@grs+2
  9524   002580  C529  F52A         	movff	___flmul@grs,___flmul@grs+1
  9525   002584  6A29               	clrf	___flmul@grs^(0+1280),c
  9526   002586  5020               	movf	___flmul@a^(0+1280),w,c
  9527   002588  021D               	mulwf	(___flmul@b+1)^(0+1280),c
  9528   00258A  C4F3 F533          	movff	prodl,___flmul@temp
  9529   00258E  C4F4 F534          	movff	prodh,___flmul@temp+1
  9530   002592  5033               	movf	___flmul@temp^(0+1280),w,c
  9531   002594  2629               	addwf	___flmul@grs^(0+1280),f,c
  9532   002596  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9533   002598  222A               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  9534   00259A  0E00               	movlw	0
  9535   00259C  222B               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  9536   00259E  0E00               	movlw	0
  9537   0025A0  222C               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  9538   0025A2  5021               	movf	(___flmul@a+1)^(0+1280),w,c
  9539   0025A4  021C               	mulwf	___flmul@b^(0+1280),c
  9540   0025A6  C4F3 F533          	movff	prodl,___flmul@temp
  9541   0025AA  C4F4 F534          	movff	prodh,___flmul@temp+1
  9542   0025AE  5033               	movf	___flmul@temp^(0+1280),w,c
  9543   0025B0  2629               	addwf	___flmul@grs^(0+1280),f,c
  9544   0025B2  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9545   0025B4  222A               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  9546   0025B6  0E00               	movlw	0
  9547   0025B8  222B               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  9548   0025BA  0E00               	movlw	0
  9549   0025BC  222C               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  9550   0025BE  C52B  F52C         	movff	___flmul@grs+2,___flmul@grs+3
  9551   0025C2  C52A  F52B         	movff	___flmul@grs+1,___flmul@grs+2
  9552   0025C6  C529  F52A         	movff	___flmul@grs,___flmul@grs+1
  9553   0025CA  6A29               	clrf	___flmul@grs^(0+1280),c
  9554   0025CC  5020               	movf	___flmul@a^(0+1280),w,c
  9555   0025CE  021C               	mulwf	___flmul@b^(0+1280),c
  9556   0025D0  C4F3 F533          	movff	prodl,___flmul@temp
  9557   0025D4  C4F4 F534          	movff	prodh,___flmul@temp+1
  9558   0025D8  5033               	movf	___flmul@temp^(0+1280),w,c
  9559   0025DA  2629               	addwf	___flmul@grs^(0+1280),f,c
  9560   0025DC  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9561   0025DE  222A               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  9562   0025E0  0E00               	movlw	0
  9563   0025E2  222B               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  9564   0025E4  0E00               	movlw	0
  9565   0025E6  222C               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  9566   0025E8  5022               	movf	(___flmul@a+2)^(0+1280),w,c
  9567   0025EA  021D               	mulwf	(___flmul@b+1)^(0+1280),c
  9568   0025EC  C4F3 F533          	movff	prodl,___flmul@temp
  9569   0025F0  C4F4 F534          	movff	prodh,___flmul@temp+1
  9570   0025F4  5033               	movf	___flmul@temp^(0+1280),w,c
  9571   0025F6  262F               	addwf	___flmul@prod^(0+1280),f,c
  9572   0025F8  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9573   0025FA  2230               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  9574   0025FC  0E00               	movlw	0
  9575   0025FE  2231               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  9576   002600  0E00               	movlw	0
  9577   002602  2232               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  9578   002604  5021               	movf	(___flmul@a+1)^(0+1280),w,c
  9579   002606  021E               	mulwf	(___flmul@b+2)^(0+1280),c
  9580   002608  C4F3 F533          	movff	prodl,___flmul@temp
  9581   00260C  C4F4 F534          	movff	prodh,___flmul@temp+1
  9582   002610  5033               	movf	___flmul@temp^(0+1280),w,c
  9583   002612  262F               	addwf	___flmul@prod^(0+1280),f,c
  9584   002614  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9585   002616  2230               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  9586   002618  0E00               	movlw	0
  9587   00261A  2231               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  9588   00261C  0E00               	movlw	0
  9589   00261E  2232               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  9590   002620  5022               	movf	(___flmul@a+2)^(0+1280),w,c
  9591   002622  021E               	mulwf	(___flmul@b+2)^(0+1280),c
  9592   002624  C4F3 F533          	movff	prodl,___flmul@temp
  9593   002628  C4F4 F534          	movff	prodh,___flmul@temp+1
  9594   00262C  5033               	movf	___flmul@temp^(0+1280),w,c
  9595   00262E  6E24               	movwf	??___flmul^(0+1280),c
  9596   002630  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9597   002632  6E25               	movwf	(??___flmul+1)^(0+1280),c
  9598   002634  6A26               	clrf	(??___flmul+2)^(0+1280),c
  9599   002636  6A27               	clrf	(??___flmul+3)^(0+1280),c
  9600   002638  C526  F527         	movff	??___flmul+2,??___flmul+3
  9601   00263C  C525  F526         	movff	??___flmul+1,??___flmul+2
  9602   002640  C524  F525         	movff	??___flmul,??___flmul+1
  9603   002644  6A24               	clrf	??___flmul^(0+1280),c
  9604   002646  5024               	movf	??___flmul^(0+1280),w,c
  9605   002648  262F               	addwf	___flmul@prod^(0+1280),f,c
  9606   00264A  5025               	movf	(??___flmul+1)^(0+1280),w,c
  9607   00264C  2230               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  9608   00264E  5026               	movf	(??___flmul+2)^(0+1280),w,c
  9609   002650  2231               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  9610   002652  5027               	movf	(??___flmul+3)^(0+1280),w,c
  9611   002654  2232               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  9612   002656  C529  F524         	movff	___flmul@grs,??___flmul
  9613   00265A  C52A  F525         	movff	___flmul@grs+1,??___flmul+1
  9614   00265E  C52B  F526         	movff	___flmul@grs+2,??___flmul+2
  9615   002662  C52C  F527         	movff	___flmul@grs+3,??___flmul+3
  9616   002666  0E19               	movlw	25
  9617   002668  EF3B  F013         	goto	u4040
  9618   00266C                     u4045:
  9619   00266C  90D8               	bcf	status,0,c
  9620   00266E  3227               	rrcf	(??___flmul+3)^(0+1280),f,c
  9621   002670  3226               	rrcf	(??___flmul+2)^(0+1280),f,c
  9622   002672  3225               	rrcf	(??___flmul+1)^(0+1280),f,c
  9623   002674  3224               	rrcf	??___flmul^(0+1280),f,c
  9624   002676                     u4040:
  9625   002676  2EE8               	decfsz	wreg,f,c
  9626   002678  EF36  F013         	goto	u4045
  9627   00267C  5024               	movf	??___flmul^(0+1280),w,c
  9628   00267E  262F               	addwf	___flmul@prod^(0+1280),f,c
  9629   002680  5025               	movf	(??___flmul+1)^(0+1280),w,c
  9630   002682  2230               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  9631   002684  5026               	movf	(??___flmul+2)^(0+1280),w,c
  9632   002686  2231               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  9633   002688  5027               	movf	(??___flmul+3)^(0+1280),w,c
  9634   00268A  2232               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  9635   00268C  C52B  F52C         	movff	___flmul@grs+2,___flmul@grs+3
  9636   002690  C52A  F52B         	movff	___flmul@grs+1,___flmul@grs+2
  9637   002694  C529  F52A         	movff	___flmul@grs,___flmul@grs+1
  9638   002698  6A29               	clrf	___flmul@grs^(0+1280),c
  9639   00269A  502D               	movf	___flmul@aexp^(0+1280),w,c
  9640   00269C  C52E  F524         	movff	___flmul@bexp,??___flmul
  9641   0026A0  6A25               	clrf	(??___flmul+1)^(0+1280),c
  9642   0026A2  2624               	addwf	??___flmul^(0+1280),f,c
  9643   0026A4  0E00               	movlw	0
  9644   0026A6  2225               	addwfc	(??___flmul+1)^(0+1280),f,c
  9645   0026A8  0E82               	movlw	130
  9646   0026AA  2424               	addwf	??___flmul^(0+1280),w,c
  9647   0026AC  6E33               	movwf	___flmul@temp^(0+1280),c
  9648   0026AE  0EFF               	movlw	255
  9649   0026B0  2025               	addwfc	(??___flmul+1)^(0+1280),w,c
  9650   0026B2  6E34               	movwf	(___flmul@temp+1)^(0+1280),c
  9651   0026B4  EF71  F013         	goto	l4833
  9652   0026B8                     l4827:
  9653   0026B8  90D8               	bcf	status,0,c
  9654   0026BA  362F               	rlcf	___flmul@prod^(0+1280),f,c
  9655   0026BC  3630               	rlcf	(___flmul@prod+1)^(0+1280),f,c
  9656   0026BE  3631               	rlcf	(___flmul@prod+2)^(0+1280),f,c
  9657   0026C0  3632               	rlcf	(___flmul@prod+3)^(0+1280),f,c
  9658   0026C2  AE2C               	btfss	(___flmul@grs+3)^(0+1280),7,c
  9659   0026C4  EF66  F013         	goto	u4051
  9660   0026C8  EF68  F013         	goto	u4050
  9661   0026CC                     u4051:
  9662   0026CC  EF69  F013         	goto	l1794
  9663   0026D0                     u4050:
  9664   0026D0  802F               	bsf	___flmul@prod^(0+1280),0,c
  9665   0026D2                     l1794:
  9666   0026D2  90D8               	bcf	status,0,c
  9667   0026D4  3629               	rlcf	___flmul@grs^(0+1280),f,c
  9668   0026D6  362A               	rlcf	(___flmul@grs+1)^(0+1280),f,c
  9669   0026D8  362B               	rlcf	(___flmul@grs+2)^(0+1280),f,c
  9670   0026DA  362C               	rlcf	(___flmul@grs+3)^(0+1280),f,c
  9671   0026DC  0633               	decf	___flmul@temp^(0+1280),f,c
  9672   0026DE  A0D8               	btfss	status,0,c
  9673   0026E0  0634               	decf	(___flmul@temp+1)^(0+1280),f,c
  9674   0026E2                     l4833:
  9675   0026E2  AE31               	btfss	(___flmul@prod+2)^(0+1280),7,c
  9676   0026E4  EF76  F013         	goto	u4061
  9677   0026E8  EF78  F013         	goto	u4060
  9678   0026EC                     u4061:
  9679   0026EC  EF5C  F013         	goto	l4827
  9680   0026F0                     u4060:
  9681   0026F0  0E00               	movlw	0
  9682   0026F2  6E2D               	movwf	___flmul@aexp^(0+1280),c
  9683   0026F4  AE2C               	btfss	(___flmul@grs+3)^(0+1280),7,c
  9684   0026F6  EF7F  F013         	goto	u4071
  9685   0026FA  EF81  F013         	goto	u4070
  9686   0026FE                     u4071:
  9687   0026FE  EFA5  F013         	goto	l1796
  9688   002702                     u4070:
  9689   002702  0EFF               	movlw	255
  9690   002704  1429               	andwf	___flmul@grs^(0+1280),w,c
  9691   002706  6E24               	movwf	??___flmul^(0+1280),c
  9692   002708  0EFF               	movlw	255
  9693   00270A  142A               	andwf	(___flmul@grs+1)^(0+1280),w,c
  9694   00270C  6E25               	movwf	(??___flmul+1)^(0+1280),c
  9695   00270E  0EFF               	movlw	255
  9696   002710  142B               	andwf	(___flmul@grs+2)^(0+1280),w,c
  9697   002712  6E26               	movwf	(??___flmul+2)^(0+1280),c
  9698   002714  0E7F               	movlw	127
  9699   002716  142C               	andwf	(___flmul@grs+3)^(0+1280),w,c
  9700   002718  6E27               	movwf	(??___flmul+3)^(0+1280),c
  9701   00271A  5024               	movf	??___flmul^(0+1280),w,c
  9702   00271C  1025               	iorwf	(??___flmul+1)^(0+1280),w,c
  9703   00271E  1026               	iorwf	(??___flmul+2)^(0+1280),w,c
  9704   002720  1027               	iorwf	(??___flmul+3)^(0+1280),w,c
  9705   002722  B4D8               	btfsc	status,2,c
  9706   002724  EF96  F013         	goto	u4081
  9707   002728  EF98  F013         	goto	u4080
  9708   00272C                     u4081:
  9709   00272C  EF9C  F013         	goto	l1797
  9710   002730                     u4080:
  9711   002730                     l4841:
  9712   002730  0E01               	movlw	1
  9713   002732  6E2D               	movwf	___flmul@aexp^(0+1280),c
  9714   002734  EFA5  F013         	goto	l1796
  9715   002738                     l1797:
  9716   002738  A02F               	btfss	___flmul@prod^(0+1280),0,c
  9717   00273A  EFA1  F013         	goto	u4091
  9718   00273E  EFA3  F013         	goto	u4090
  9719   002742                     u4091:
  9720   002742  EFA5  F013         	goto	l1796
  9721   002746                     u4090:
  9722   002746  EF98  F013         	goto	l4841
  9723   00274A                     l1796:
  9724   00274A  502D               	movf	___flmul@aexp^(0+1280),w,c
  9725   00274C  B4D8               	btfsc	status,2,c
  9726   00274E  EFAB  F013         	goto	u4101
  9727   002752  EFAD  F013         	goto	u4100
  9728   002756                     u4101:
  9729   002756  EFD1  F013         	goto	l4853
  9730   00275A                     u4100:
  9731   00275A  0E01               	movlw	1
  9732   00275C  262F               	addwf	___flmul@prod^(0+1280),f,c
  9733   00275E  0E00               	movlw	0
  9734   002760  2230               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  9735   002762  2231               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  9736   002764  2232               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  9737   002766  A032               	btfss	(___flmul@prod+3)^(0+1280),0,c
  9738   002768  EFB8  F013         	goto	u4111
  9739   00276C  EFBA  F013         	goto	u4110
  9740   002770                     u4111:
  9741   002770  EFD1  F013         	goto	l4853
  9742   002774                     u4110:
  9743   002774  C52F  F524         	movff	___flmul@prod,??___flmul
  9744   002778  C530  F525         	movff	___flmul@prod+1,??___flmul+1
  9745   00277C  C531  F526         	movff	___flmul@prod+2,??___flmul+2
  9746   002780  C532  F527         	movff	___flmul@prod+3,??___flmul+3
  9747   002784  3427               	rlcf	(??___flmul+3)^(0+1280),w,c
  9748   002786  3227               	rrcf	(??___flmul+3)^(0+1280),f,c
  9749   002788  3226               	rrcf	(??___flmul+2)^(0+1280),f,c
  9750   00278A  3225               	rrcf	(??___flmul+1)^(0+1280),f,c
  9751   00278C  3224               	rrcf	??___flmul^(0+1280),f,c
  9752   00278E  C524  F52F         	movff	??___flmul,___flmul@prod
  9753   002792  C525  F530         	movff	??___flmul+1,___flmul@prod+1
  9754   002796  C526  F531         	movff	??___flmul+2,___flmul@prod+2
  9755   00279A  C527  F532         	movff	??___flmul+3,___flmul@prod+3
  9756   00279E  4A33               	infsnz	___flmul@temp^(0+1280),f,c
  9757   0027A0  2A34               	incf	(___flmul@temp+1)^(0+1280),f,c
  9758   0027A2                     l4853:
  9759   0027A2  BE34               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  9760   0027A4  EFDC  F013         	goto	u4121
  9761   0027A8  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9762   0027AA  E108               	bnz	u4120
  9763   0027AC  2833               	incf	___flmul@temp^(0+1280),w,c
  9764   0027AE  A0D8               	btfss	status,0,c
  9765   0027B0  EFDC  F013         	goto	u4121
  9766   0027B4  EFDE  F013         	goto	u4120
  9767   0027B8                     u4121:
  9768   0027B8  EFE8  F013         	goto	l4857
  9769   0027BC                     u4120:
  9770   0027BC  0E00               	movlw	0
  9771   0027BE  6E2F               	movwf	___flmul@prod^(0+1280),c
  9772   0027C0  0E00               	movlw	0
  9773   0027C2  6E30               	movwf	(___flmul@prod+1)^(0+1280),c
  9774   0027C4  0E80               	movlw	128
  9775   0027C6  6E31               	movwf	(___flmul@prod+2)^(0+1280),c
  9776   0027C8  0E7F               	movlw	127
  9777   0027CA  6E32               	movwf	(___flmul@prod+3)^(0+1280),c
  9778   0027CC  EF16  F014         	goto	l4869
  9779   0027D0                     l4857:
  9780   0027D0  BE34               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  9781   0027D2  EFF5  F013         	goto	u4130
  9782   0027D6  5034               	movf	(___flmul@temp+1)^(0+1280),w,c
  9783   0027D8  E106               	bnz	u4131
  9784   0027DA  0433               	decf	___flmul@temp^(0+1280),w,c
  9785   0027DC  B0D8               	btfsc	status,0,c
  9786   0027DE  EFF3  F013         	goto	u4131
  9787   0027E2  EFF5  F013         	goto	u4130
  9788   0027E6                     u4131:
  9789   0027E6  EF01  F014         	goto	l1804
  9790   0027EA                     u4130:
  9791   0027EA  0E00               	movlw	0
  9792   0027EC  6E2F               	movwf	___flmul@prod^(0+1280),c
  9793   0027EE  0E00               	movlw	0
  9794   0027F0  6E30               	movwf	(___flmul@prod+1)^(0+1280),c
  9795   0027F2  0E00               	movlw	0
  9796   0027F4  6E31               	movwf	(___flmul@prod+2)^(0+1280),c
  9797   0027F6  0E00               	movlw	0
  9798   0027F8  6E32               	movwf	(___flmul@prod+3)^(0+1280),c
  9799   0027FA  0E00               	movlw	0
  9800   0027FC  6E28               	movwf	___flmul@sign^(0+1280),c
  9801   0027FE  EF16  F014         	goto	l4869
  9802   002802                     l1804:
  9803   002802  C533  F52E         	movff	___flmul@temp,___flmul@bexp
  9804   002806  0EFF               	movlw	255
  9805   002808  162F               	andwf	___flmul@prod^(0+1280),f,c
  9806   00280A  0EFF               	movlw	255
  9807   00280C  1630               	andwf	(___flmul@prod+1)^(0+1280),f,c
  9808   00280E  0E7F               	movlw	127
  9809   002810  1631               	andwf	(___flmul@prod+2)^(0+1280),f,c
  9810   002812  0E00               	movlw	0
  9811   002814  1632               	andwf	(___flmul@prod+3)^(0+1280),f,c
  9812   002816  A02E               	btfss	___flmul@bexp^(0+1280),0,c
  9813   002818  EF10  F014         	goto	u4141
  9814   00281C  EF12  F014         	goto	u4140
  9815   002820                     u4141:
  9816   002820  EF13  F014         	goto	l4867
  9817   002824                     u4140:
  9818   002824  8E31               	bsf	(___flmul@prod+2)^(0+1280),7,c
  9819   002826                     l4867:
  9820   002826  90D8               	bcf	status,0,c
  9821   002828  302E               	rrcf	___flmul@bexp^(0+1280),w,c
  9822   00282A  6E32               	movwf	(___flmul@prod+3)^(0+1280),c
  9823   00282C                     l4869:
  9824   00282C  5028               	movf	___flmul@sign^(0+1280),w,c
  9825   00282E  1232               	iorwf	(___flmul@prod+3)^(0+1280),f,c
  9826   002830  C52F  F51C         	movff	___flmul@prod,?___flmul
  9827   002834  C530  F51D         	movff	___flmul@prod+1,?___flmul+1
  9828   002838  C531  F51E         	movff	___flmul@prod+2,?___flmul+2
  9829   00283C  C532  F51F         	movff	___flmul@prod+3,?___flmul+3
  9830   002840                     l1791:
  9831   002840  0012               	return		;funcret
  9832   002842                     __end_of___flmul:
  9833                           	callstack 0
  9834                           
  9835 ;; *************** function ___fldiv *****************
  9836 ;; Defined at:
  9837 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;  b               4    2[COMRAM] unsigned char 
  9840 ;;  a               4    6[COMRAM] unsigned char 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  grs             4   21[COMRAM] unsigned long 
  9843 ;;  rem             4   14[COMRAM] unsigned long 
  9844 ;;  new_exp         2   19[COMRAM] short 
  9845 ;;  aexp            1   26[COMRAM] unsigned char 
  9846 ;;  bexp            1   25[COMRAM] unsigned char 
  9847 ;;  sign            1   18[COMRAM] unsigned char 
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  4    2[COMRAM] unsigned char 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  9857 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;Total ram usage:       25 bytes
  9862 ;; Hardware stack levels used: 1
  9863 ;; Hardware stack levels required when called: 5
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_setServoAngle
  9868 ;;		_efgtoa
  9869 ;;		_controlServoMotor
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text44
  9874   002C08                     __ptext44:
  9875                           	callstack 0
  9876   002C08                     ___fldiv:
  9877                           	callstack 115
  9878   002C08  5006               	movf	(___fldiv@b+3)^(0+1280),w,c
  9879   002C0A  0B80               	andlw	128
  9880   002C0C  6E13               	movwf	___fldiv@sign^(0+1280),c
  9881   002C0E  5006               	movf	(___fldiv@b+3)^(0+1280),w,c
  9882   002C10  2406               	addwf	(___fldiv@b+3)^(0+1280),w,c
  9883   002C12  6E1A               	movwf	___fldiv@bexp^(0+1280),c
  9884   002C14  AE05               	btfss	(___fldiv@b+2)^(0+1280),7,c
  9885   002C16  EF0F  F016         	goto	u3731
  9886   002C1A  EF11  F016         	goto	u3730
  9887   002C1E                     u3731:
  9888   002C1E  EF12  F016         	goto	l4613
  9889   002C22                     u3730:
  9890   002C22  801A               	bsf	___fldiv@bexp^(0+1280),0,c
  9891   002C24                     l4613:
  9892   002C24  501A               	movf	___fldiv@bexp^(0+1280),w,c
  9893   002C26  B4D8               	btfsc	status,2,c
  9894   002C28  EF18  F016         	goto	u3741
  9895   002C2C  EF1A  F016         	goto	u3740
  9896   002C30                     u3741:
  9897   002C30  EF2F  F016         	goto	l4623
  9898   002C34                     u3740:
  9899   002C34  281A               	incf	___fldiv@bexp^(0+1280),w,c
  9900   002C36  A4D8               	btfss	status,2,c
  9901   002C38  EF20  F016         	goto	u3751
  9902   002C3C  EF22  F016         	goto	u3750
  9903   002C40                     u3751:
  9904   002C40  EF2A  F016         	goto	l4619
  9905   002C44                     u3750:
  9906   002C44  0E00               	movlw	0
  9907   002C46  6E03               	movwf	___fldiv@b^(0+1280),c
  9908   002C48  0E00               	movlw	0
  9909   002C4A  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
  9910   002C4C  0E00               	movlw	0
  9911   002C4E  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
  9912   002C50  0E00               	movlw	0
  9913   002C52  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  9914   002C54                     l4619:
  9915   002C54  8E05               	bsf	(___fldiv@b+2)^(0+1280),7,c
  9916   002C56  0E00               	movlw	0
  9917   002C58  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  9918   002C5A  EF37  F016         	goto	l4625
  9919   002C5E                     l4623:
  9920   002C5E  0E00               	movlw	0
  9921   002C60  6E03               	movwf	___fldiv@b^(0+1280),c
  9922   002C62  0E00               	movlw	0
  9923   002C64  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
  9924   002C66  0E00               	movlw	0
  9925   002C68  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
  9926   002C6A  0E00               	movlw	0
  9927   002C6C  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  9928   002C6E                     l4625:
  9929   002C6E  500A               	movf	(___fldiv@a+3)^(0+1280),w,c
  9930   002C70  0B80               	andlw	128
  9931   002C72  1A13               	xorwf	___fldiv@sign^(0+1280),f,c
  9932   002C74  500A               	movf	(___fldiv@a+3)^(0+1280),w,c
  9933   002C76  240A               	addwf	(___fldiv@a+3)^(0+1280),w,c
  9934   002C78  6E1B               	movwf	___fldiv@aexp^(0+1280),c
  9935   002C7A  AE09               	btfss	(___fldiv@a+2)^(0+1280),7,c
  9936   002C7C  EF42  F016         	goto	u3761
  9937   002C80  EF44  F016         	goto	u3760
  9938   002C84                     u3761:
  9939   002C84  EF45  F016         	goto	l4633
  9940   002C88                     u3760:
  9941   002C88  801B               	bsf	___fldiv@aexp^(0+1280),0,c
  9942   002C8A                     l4633:
  9943   002C8A  501B               	movf	___fldiv@aexp^(0+1280),w,c
  9944   002C8C  B4D8               	btfsc	status,2,c
  9945   002C8E  EF4B  F016         	goto	u3771
  9946   002C92  EF4D  F016         	goto	u3770
  9947   002C96                     u3771:
  9948   002C96  EF62  F016         	goto	l4643
  9949   002C9A                     u3770:
  9950   002C9A  281B               	incf	___fldiv@aexp^(0+1280),w,c
  9951   002C9C  A4D8               	btfss	status,2,c
  9952   002C9E  EF53  F016         	goto	u3781
  9953   002CA2  EF55  F016         	goto	u3780
  9954   002CA6                     u3781:
  9955   002CA6  EF5D  F016         	goto	l4639
  9956   002CAA                     u3780:
  9957   002CAA  0E00               	movlw	0
  9958   002CAC  6E07               	movwf	___fldiv@a^(0+1280),c
  9959   002CAE  0E00               	movlw	0
  9960   002CB0  6E08               	movwf	(___fldiv@a+1)^(0+1280),c
  9961   002CB2  0E00               	movlw	0
  9962   002CB4  6E09               	movwf	(___fldiv@a+2)^(0+1280),c
  9963   002CB6  0E00               	movlw	0
  9964   002CB8  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
  9965   002CBA                     l4639:
  9966   002CBA  8E09               	bsf	(___fldiv@a+2)^(0+1280),7,c
  9967   002CBC  0E00               	movlw	0
  9968   002CBE  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
  9969   002CC0  EF6A  F016         	goto	l4645
  9970   002CC4                     l4643:
  9971   002CC4  0E00               	movlw	0
  9972   002CC6  6E07               	movwf	___fldiv@a^(0+1280),c
  9973   002CC8  0E00               	movlw	0
  9974   002CCA  6E08               	movwf	(___fldiv@a+1)^(0+1280),c
  9975   002CCC  0E00               	movlw	0
  9976   002CCE  6E09               	movwf	(___fldiv@a+2)^(0+1280),c
  9977   002CD0  0E00               	movlw	0
  9978   002CD2  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
  9979   002CD4                     l4645:
  9980   002CD4  5007               	movf	___fldiv@a^(0+1280),w,c
  9981   002CD6  1008               	iorwf	(___fldiv@a+1)^(0+1280),w,c
  9982   002CD8  1009               	iorwf	(___fldiv@a+2)^(0+1280),w,c
  9983   002CDA  100A               	iorwf	(___fldiv@a+3)^(0+1280),w,c
  9984   002CDC  A4D8               	btfss	status,2,c
  9985   002CDE  EF73  F016         	goto	u3791
  9986   002CE2  EF75  F016         	goto	u3790
  9987   002CE6                     u3791:
  9988   002CE6  EF8D  F016         	goto	l4657
  9989   002CEA                     u3790:
  9990   002CEA  0E00               	movlw	0
  9991   002CEC  6E03               	movwf	___fldiv@b^(0+1280),c
  9992   002CEE  0E00               	movlw	0
  9993   002CF0  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
  9994   002CF2  0E00               	movlw	0
  9995   002CF4  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
  9996   002CF6  0E00               	movlw	0
  9997   002CF8  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  9998   002CFA  0E80               	movlw	128
  9999   002CFC  1205               	iorwf	(___fldiv@b+2)^(0+1280),f,c
 10000   002CFE  0E7F               	movlw	127
 10001   002D00  1206               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 10002   002D02                     l4651:
 10003   002D02  5013               	movf	___fldiv@sign^(0+1280),w,c
 10004   002D04  1206               	iorwf	(___fldiv@b+3)^(0+1280),f,c
 10005   002D06  C503  F503         	movff	___fldiv@b,?___fldiv
 10006   002D0A  C504  F504         	movff	___fldiv@b+1,?___fldiv+1
 10007   002D0E  C505  F505         	movff	___fldiv@b+2,?___fldiv+2
 10008   002D12  C506  F506         	movff	___fldiv@b+3,?___fldiv+3
 10009   002D16  EFD0  F017         	goto	l1755
 10010   002D1A                     l4657:
 10011   002D1A  501A               	movf	___fldiv@bexp^(0+1280),w,c
 10012   002D1C  A4D8               	btfss	status,2,c
 10013   002D1E  EF93  F016         	goto	u3801
 10014   002D22  EF95  F016         	goto	u3800
 10015   002D26                     u3801:
 10016   002D26  EF9F  F016         	goto	l4665
 10017   002D2A                     u3800:
 10018   002D2A  0E00               	movlw	0
 10019   002D2C  6E03               	movwf	?___fldiv^(0+1280),c
 10020   002D2E  0E00               	movlw	0
 10021   002D30  6E04               	movwf	(?___fldiv+1)^(0+1280),c
 10022   002D32  0E00               	movlw	0
 10023   002D34  6E05               	movwf	(?___fldiv+2)^(0+1280),c
 10024   002D36  0E00               	movlw	0
 10025   002D38  6E06               	movwf	(?___fldiv+3)^(0+1280),c
 10026   002D3A  EFD0  F017         	goto	l1755
 10027   002D3E                     l4665:
 10028   002D3E  501B               	movf	___fldiv@aexp^(0+1280),w,c
 10029   002D40  C51A  F50B         	movff	___fldiv@bexp,??___fldiv
 10030   002D44  6A0C               	clrf	(??___fldiv+1)^(0+1280),c
 10031   002D46  5E0B               	subwf	??___fldiv^(0+1280),f,c
 10032   002D48  0E00               	movlw	0
 10033   002D4A  5A0C               	subwfb	(??___fldiv+1)^(0+1280),f,c
 10034   002D4C  0E7F               	movlw	127
 10035   002D4E  240B               	addwf	??___fldiv^(0+1280),w,c
 10036   002D50  6E14               	movwf	___fldiv@new_exp^(0+1280),c
 10037   002D52  0E00               	movlw	0
 10038   002D54  200C               	addwfc	(??___fldiv+1)^(0+1280),w,c
 10039   002D56  6E15               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 10040   002D58  C503  F50F         	movff	___fldiv@b,___fldiv@rem
 10041   002D5C  C504  F510         	movff	___fldiv@b+1,___fldiv@rem+1
 10042   002D60  C505  F511         	movff	___fldiv@b+2,___fldiv@rem+2
 10043   002D64  C506  F512         	movff	___fldiv@b+3,___fldiv@rem+3
 10044   002D68  0E00               	movlw	0
 10045   002D6A  6E03               	movwf	___fldiv@b^(0+1280),c
 10046   002D6C  0E00               	movlw	0
 10047   002D6E  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
 10048   002D70  0E00               	movlw	0
 10049   002D72  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
 10050   002D74  0E00               	movlw	0
 10051   002D76  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
 10052   002D78  0E00               	movlw	0
 10053   002D7A  6E16               	movwf	___fldiv@grs^(0+1280),c
 10054   002D7C  0E00               	movlw	0
 10055   002D7E  6E17               	movwf	(___fldiv@grs+1)^(0+1280),c
 10056   002D80  0E00               	movlw	0
 10057   002D82  6E18               	movwf	(___fldiv@grs+2)^(0+1280),c
 10058   002D84  0E00               	movlw	0
 10059   002D86  6E19               	movwf	(___fldiv@grs+3)^(0+1280),c
 10060   002D88  0E00               	movlw	0
 10061   002D8A  6E1B               	movwf	___fldiv@aexp^(0+1280),c
 10062   002D8C  EF00  F017         	goto	l1757
 10063   002D90                     l4675:
 10064   002D90  501B               	movf	___fldiv@aexp^(0+1280),w,c
 10065   002D92  B4D8               	btfsc	status,2,c
 10066   002D94  EFCE  F016         	goto	u3811
 10067   002D98  EFD0  F016         	goto	u3810
 10068   002D9C                     u3811:
 10069   002D9C  EFE7  F016         	goto	l4683
 10070   002DA0                     u3810:
 10071   002DA0  90D8               	bcf	status,0,c
 10072   002DA2  360F               	rlcf	___fldiv@rem^(0+1280),f,c
 10073   002DA4  3610               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
 10074   002DA6  3611               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
 10075   002DA8  3612               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
 10076   002DAA  90D8               	bcf	status,0,c
 10077   002DAC  3603               	rlcf	___fldiv@b^(0+1280),f,c
 10078   002DAE  3604               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 10079   002DB0  3605               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 10080   002DB2  3606               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 10081   002DB4  AE19               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 10082   002DB6  EFDF  F016         	goto	u3821
 10083   002DBA  EFE1  F016         	goto	u3820
 10084   002DBE                     u3821:
 10085   002DBE  EFE2  F016         	goto	l1760
 10086   002DC2                     u3820:
 10087   002DC2  8003               	bsf	___fldiv@b^(0+1280),0,c
 10088   002DC4                     l1760:
 10089   002DC4  90D8               	bcf	status,0,c
 10090   002DC6  3616               	rlcf	___fldiv@grs^(0+1280),f,c
 10091   002DC8  3617               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 10092   002DCA  3618               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 10093   002DCC  3619               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 10094   002DCE                     l4683:
 10095   002DCE  5007               	movf	___fldiv@a^(0+1280),w,c
 10096   002DD0  5C0F               	subwf	___fldiv@rem^(0+1280),w,c
 10097   002DD2  5008               	movf	(___fldiv@a+1)^(0+1280),w,c
 10098   002DD4  5810               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
 10099   002DD6  5009               	movf	(___fldiv@a+2)^(0+1280),w,c
 10100   002DD8  5811               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
 10101   002DDA  500A               	movf	(___fldiv@a+3)^(0+1280),w,c
 10102   002DDC  5812               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
 10103   002DDE  A0D8               	btfss	status,0,c
 10104   002DE0  EFF4  F016         	goto	u3831
 10105   002DE4  EFF6  F016         	goto	u3830
 10106   002DE8                     u3831:
 10107   002DE8  EFFF  F016         	goto	l4689
 10108   002DEC                     u3830:
 10109   002DEC  8C19               	bsf	(___fldiv@grs+3)^(0+1280),6,c
 10110   002DEE  5007               	movf	___fldiv@a^(0+1280),w,c
 10111   002DF0  5E0F               	subwf	___fldiv@rem^(0+1280),f,c
 10112   002DF2  5008               	movf	(___fldiv@a+1)^(0+1280),w,c
 10113   002DF4  5A10               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
 10114   002DF6  5009               	movf	(___fldiv@a+2)^(0+1280),w,c
 10115   002DF8  5A11               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
 10116   002DFA  500A               	movf	(___fldiv@a+3)^(0+1280),w,c
 10117   002DFC  5A12               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
 10118   002DFE                     l4689:
 10119   002DFE  2A1B               	incf	___fldiv@aexp^(0+1280),f,c
 10120   002E00                     l1757:
 10121   002E00  0E19               	movlw	25
 10122   002E02  641B               	cpfsgt	___fldiv@aexp^(0+1280),c
 10123   002E04  EF06  F017         	goto	u3841
 10124   002E08  EF08  F017         	goto	u3840
 10125   002E0C                     u3841:
 10126   002E0C  EFC8  F016         	goto	l4675
 10127   002E10                     u3840:
 10128   002E10  500F               	movf	___fldiv@rem^(0+1280),w,c
 10129   002E12  1010               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
 10130   002E14  1011               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
 10131   002E16  1012               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
 10132   002E18  B4D8               	btfsc	status,2,c
 10133   002E1A  EF11  F017         	goto	u3851
 10134   002E1E  EF13  F017         	goto	u3850
 10135   002E22                     u3851:
 10136   002E22  EF2B  F017         	goto	l4701
 10137   002E26                     u3850:
 10138   002E26  8016               	bsf	___fldiv@grs^(0+1280),0,c
 10139   002E28  EF2B  F017         	goto	l4701
 10140   002E2C                     l4695:
 10141   002E2C  90D8               	bcf	status,0,c
 10142   002E2E  3603               	rlcf	___fldiv@b^(0+1280),f,c
 10143   002E30  3604               	rlcf	(___fldiv@b+1)^(0+1280),f,c
 10144   002E32  3605               	rlcf	(___fldiv@b+2)^(0+1280),f,c
 10145   002E34  3606               	rlcf	(___fldiv@b+3)^(0+1280),f,c
 10146   002E36  AE19               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 10147   002E38  EF20  F017         	goto	u3861
 10148   002E3C  EF22  F017         	goto	u3860
 10149   002E40                     u3861:
 10150   002E40  EF23  F017         	goto	l1766
 10151   002E44                     u3860:
 10152   002E44  8003               	bsf	___fldiv@b^(0+1280),0,c
 10153   002E46                     l1766:
 10154   002E46  90D8               	bcf	status,0,c
 10155   002E48  3616               	rlcf	___fldiv@grs^(0+1280),f,c
 10156   002E4A  3617               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
 10157   002E4C  3618               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
 10158   002E4E  3619               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
 10159   002E50  0614               	decf	___fldiv@new_exp^(0+1280),f,c
 10160   002E52  A0D8               	btfss	status,0,c
 10161   002E54  0615               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
 10162   002E56                     l4701:
 10163   002E56  AE05               	btfss	(___fldiv@b+2)^(0+1280),7,c
 10164   002E58  EF30  F017         	goto	u3871
 10165   002E5C  EF32  F017         	goto	u3870
 10166   002E60                     u3871:
 10167   002E60  EF16  F017         	goto	l4695
 10168   002E64                     u3870:
 10169   002E64  0E00               	movlw	0
 10170   002E66  6E1B               	movwf	___fldiv@aexp^(0+1280),c
 10171   002E68  AE19               	btfss	(___fldiv@grs+3)^(0+1280),7,c
 10172   002E6A  EF39  F017         	goto	u3881
 10173   002E6E  EF3B  F017         	goto	u3880
 10174   002E72                     u3881:
 10175   002E72  EF5F  F017         	goto	l1768
 10176   002E76                     u3880:
 10177   002E76  0EFF               	movlw	255
 10178   002E78  1416               	andwf	___fldiv@grs^(0+1280),w,c
 10179   002E7A  6E0B               	movwf	??___fldiv^(0+1280),c
 10180   002E7C  0EFF               	movlw	255
 10181   002E7E  1417               	andwf	(___fldiv@grs+1)^(0+1280),w,c
 10182   002E80  6E0C               	movwf	(??___fldiv+1)^(0+1280),c
 10183   002E82  0EFF               	movlw	255
 10184   002E84  1418               	andwf	(___fldiv@grs+2)^(0+1280),w,c
 10185   002E86  6E0D               	movwf	(??___fldiv+2)^(0+1280),c
 10186   002E88  0E7F               	movlw	127
 10187   002E8A  1419               	andwf	(___fldiv@grs+3)^(0+1280),w,c
 10188   002E8C  6E0E               	movwf	(??___fldiv+3)^(0+1280),c
 10189   002E8E  500B               	movf	??___fldiv^(0+1280),w,c
 10190   002E90  100C               	iorwf	(??___fldiv+1)^(0+1280),w,c
 10191   002E92  100D               	iorwf	(??___fldiv+2)^(0+1280),w,c
 10192   002E94  100E               	iorwf	(??___fldiv+3)^(0+1280),w,c
 10193   002E96  B4D8               	btfsc	status,2,c
 10194   002E98  EF50  F017         	goto	u3891
 10195   002E9C  EF52  F017         	goto	u3890
 10196   002EA0                     u3891:
 10197   002EA0  EF56  F017         	goto	l1769
 10198   002EA4                     u3890:
 10199   002EA4                     l4709:
 10200   002EA4  0E01               	movlw	1
 10201   002EA6  6E1B               	movwf	___fldiv@aexp^(0+1280),c
 10202   002EA8  EF5F  F017         	goto	l1768
 10203   002EAC                     l1769:
 10204   002EAC  A003               	btfss	___fldiv@b^(0+1280),0,c
 10205   002EAE  EF5B  F017         	goto	u3901
 10206   002EB2  EF5D  F017         	goto	u3900
 10207   002EB6                     u3901:
 10208   002EB6  EF5F  F017         	goto	l1768
 10209   002EBA                     u3900:
 10210   002EBA  EF52  F017         	goto	l4709
 10211   002EBE                     l1768:
 10212   002EBE  501B               	movf	___fldiv@aexp^(0+1280),w,c
 10213   002EC0  B4D8               	btfsc	status,2,c
 10214   002EC2  EF65  F017         	goto	u3911
 10215   002EC6  EF67  F017         	goto	u3910
 10216   002ECA                     u3911:
 10217   002ECA  EF8B  F017         	goto	l4721
 10218   002ECE                     u3910:
 10219   002ECE  0E01               	movlw	1
 10220   002ED0  2603               	addwf	___fldiv@b^(0+1280),f,c
 10221   002ED2  0E00               	movlw	0
 10222   002ED4  2204               	addwfc	(___fldiv@b+1)^(0+1280),f,c
 10223   002ED6  2205               	addwfc	(___fldiv@b+2)^(0+1280),f,c
 10224   002ED8  2206               	addwfc	(___fldiv@b+3)^(0+1280),f,c
 10225   002EDA  A006               	btfss	(___fldiv@b+3)^(0+1280),0,c
 10226   002EDC  EF72  F017         	goto	u3921
 10227   002EE0  EF74  F017         	goto	u3920
 10228   002EE4                     u3921:
 10229   002EE4  EF8B  F017         	goto	l4721
 10230   002EE8                     u3920:
 10231   002EE8  C503  F50B         	movff	___fldiv@b,??___fldiv
 10232   002EEC  C504  F50C         	movff	___fldiv@b+1,??___fldiv+1
 10233   002EF0  C505  F50D         	movff	___fldiv@b+2,??___fldiv+2
 10234   002EF4  C506  F50E         	movff	___fldiv@b+3,??___fldiv+3
 10235   002EF8  340E               	rlcf	(??___fldiv+3)^(0+1280),w,c
 10236   002EFA  320E               	rrcf	(??___fldiv+3)^(0+1280),f,c
 10237   002EFC  320D               	rrcf	(??___fldiv+2)^(0+1280),f,c
 10238   002EFE  320C               	rrcf	(??___fldiv+1)^(0+1280),f,c
 10239   002F00  320B               	rrcf	??___fldiv^(0+1280),f,c
 10240   002F02  C50B  F503         	movff	??___fldiv,___fldiv@b
 10241   002F06  C50C  F504         	movff	??___fldiv+1,___fldiv@b+1
 10242   002F0A  C50D  F505         	movff	??___fldiv+2,___fldiv@b+2
 10243   002F0E  C50E  F506         	movff	??___fldiv+3,___fldiv@b+3
 10244   002F12  4A14               	infsnz	___fldiv@new_exp^(0+1280),f,c
 10245   002F14  2A15               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
 10246   002F16                     l4721:
 10247   002F16  BE15               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 10248   002F18  EF96  F017         	goto	u3931
 10249   002F1C  5015               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 10250   002F1E  E108               	bnz	u3930
 10251   002F20  2814               	incf	___fldiv@new_exp^(0+1280),w,c
 10252   002F22  A0D8               	btfss	status,0,c
 10253   002F24  EF96  F017         	goto	u3931
 10254   002F28  EF98  F017         	goto	u3930
 10255   002F2C                     u3931:
 10256   002F2C  EFA3  F017         	goto	l4725
 10257   002F30                     u3930:
 10258   002F30  0E00               	movlw	0
 10259   002F32  6E15               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 10260   002F34  6814               	setf	___fldiv@new_exp^(0+1280),c
 10261   002F36  0E00               	movlw	0
 10262   002F38  6E03               	movwf	___fldiv@b^(0+1280),c
 10263   002F3A  0E00               	movlw	0
 10264   002F3C  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
 10265   002F3E  0E00               	movlw	0
 10266   002F40  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
 10267   002F42  0E00               	movlw	0
 10268   002F44  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
 10269   002F46                     l4725:
 10270   002F46  BE15               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
 10271   002F48  EFB0  F017         	goto	u3940
 10272   002F4C  5015               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
 10273   002F4E  E106               	bnz	u3941
 10274   002F50  0414               	decf	___fldiv@new_exp^(0+1280),w,c
 10275   002F52  B0D8               	btfsc	status,0,c
 10276   002F54  EFAE  F017         	goto	u3941
 10277   002F58  EFB0  F017         	goto	u3940
 10278   002F5C                     u3941:
 10279   002F5C  EFBE  F017         	goto	l4729
 10280   002F60                     u3940:
 10281   002F60  0E00               	movlw	0
 10282   002F62  6E15               	movwf	(___fldiv@new_exp+1)^(0+1280),c
 10283   002F64  0E00               	movlw	0
 10284   002F66  6E14               	movwf	___fldiv@new_exp^(0+1280),c
 10285   002F68  0E00               	movlw	0
 10286   002F6A  6E03               	movwf	___fldiv@b^(0+1280),c
 10287   002F6C  0E00               	movlw	0
 10288   002F6E  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
 10289   002F70  0E00               	movlw	0
 10290   002F72  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
 10291   002F74  0E00               	movlw	0
 10292   002F76  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
 10293   002F78  0E00               	movlw	0
 10294   002F7A  6E13               	movwf	___fldiv@sign^(0+1280),c
 10295   002F7C                     l4729:
 10296   002F7C  C514  F51A         	movff	___fldiv@new_exp,___fldiv@bexp
 10297   002F80  A01A               	btfss	___fldiv@bexp^(0+1280),0,c
 10298   002F82  EFC5  F017         	goto	u3951
 10299   002F86  EFC7  F017         	goto	u3950
 10300   002F8A                     u3951:
 10301   002F8A  EFCA  F017         	goto	l4735
 10302   002F8E                     u3950:
 10303   002F8E  8E05               	bsf	(___fldiv@b+2)^(0+1280),7,c
 10304   002F90  EFCB  F017         	goto	l4737
 10305   002F94                     l4735:
 10306   002F94  9E05               	bcf	(___fldiv@b+2)^(0+1280),7,c
 10307   002F96                     l4737:
 10308   002F96  90D8               	bcf	status,0,c
 10309   002F98  301A               	rrcf	___fldiv@bexp^(0+1280),w,c
 10310   002F9A  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
 10311   002F9C  EF81  F016         	goto	l4651
 10312   002FA0                     l1755:
 10313   002FA0  0012               	return		;funcret
 10314   002FA2                     __end_of___fldiv:
 10315                           	callstack 0
 10316                           
 10317 ;; *************** function _PWM3_16BIT_SetSlice1Output2DutyCycleRegister *****************
 10318 ;; Defined at:
 10319 ;;		line 143 in file "mcc_generated_files/pwm/src/pwm3_16bit.c"
 10320 ;; Parameters:    Size  Location     Type
 10321 ;;  registerValu    2    2[COMRAM] unsigned short 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;		None
 10324 ;; Return value:  Size  Location     Type
 10325 ;;                  1    wreg      void 
 10326 ;; Registers used:
 10327 ;;		wreg, status,2
 10328 ;; Tracked objects:
 10329 ;;		On entry : 0/0
 10330 ;;		On exit  : 0/0
 10331 ;;		Unchanged: 0/0
 10332 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10333 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10337 ;;Total ram usage:        2 bytes
 10338 ;; Hardware stack levels used: 1
 10339 ;; Hardware stack levels required when called: 5
 10340 ;; This function calls:
 10341 ;;		Nothing
 10342 ;; This function is called by:
 10343 ;;		_setServoAngle
 10344 ;; This function uses a non-reentrant model
 10345 ;;
 10346                           
 10347                           	psect	text45
 10348   00525C                     __ptext45:
 10349                           	callstack 0
 10350   00525C                     _PWM3_16BIT_SetSlice1Output2DutyCycleRegister:
 10351                           	callstack 116
 10352   00525C                     
 10353                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 143: void PWM3_16BIT_SetSlice1Output2DutyCycl
      +                          eRegister(uint16_t registerValue);mcc_generated_files/pwm/src/pwm3_16bit.c: 144: {;mcc_g
      +                          enerated_files/pwm/src/pwm3_16bit.c: 145:     PWM3S1P2L = (uint8_t)(registerValue);
 10354   00525C  C503  F48B         	movff	PWM3_16BIT_SetSlice1Output2DutyCycleRegister@registerValue,1163	;volatile
 10355   005260                     
 10356                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 146:     PWM3S1P2H = (uint8_t)(registerValue 
      +                          >> 8);
 10357   005260  5004               	movf	(PWM3_16BIT_SetSlice1Output2DutyCycleRegister@registerValue+1)^(0+1280),w,c
 10358   005262  6E8C               	movwf	140,c	;volatile
 10359   005264  0012               	return		;funcret
 10360   005266                     __end_of_PWM3_16BIT_SetSlice1Output2DutyCycleRegister:
 10361                           	callstack 0
 10362                           
 10363 ;; *************** function _PWM3_16BIT_SetSlice1Output1DutyCycleRegister *****************
 10364 ;; Defined at:
 10365 ;;		line 137 in file "mcc_generated_files/pwm/src/pwm3_16bit.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  registerValu    2    2[COMRAM] unsigned short 
 10368 ;; Auto vars:     Size  Location     Type
 10369 ;;		None
 10370 ;; Return value:  Size  Location     Type
 10371 ;;                  1    wreg      void 
 10372 ;; Registers used:
 10373 ;;		wreg, status,2
 10374 ;; Tracked objects:
 10375 ;;		On entry : 0/0
 10376 ;;		On exit  : 0/0
 10377 ;;		Unchanged: 0/0
 10378 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10383 ;;Total ram usage:        2 bytes
 10384 ;; Hardware stack levels used: 1
 10385 ;; Hardware stack levels required when called: 5
 10386 ;; This function calls:
 10387 ;;		Nothing
 10388 ;; This function is called by:
 10389 ;;		_setServoAngle
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393                           	psect	text46
 10394   005266                     __ptext46:
 10395                           	callstack 0
 10396   005266                     _PWM3_16BIT_SetSlice1Output1DutyCycleRegister:
 10397                           	callstack 116
 10398   005266                     
 10399                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 137: void PWM3_16BIT_SetSlice1Output1DutyCycl
      +                          eRegister(uint16_t registerValue);mcc_generated_files/pwm/src/pwm3_16bit.c: 138: {;mcc_g
      +                          enerated_files/pwm/src/pwm3_16bit.c: 139:     PWM3S1P1L = (uint8_t)(registerValue);
 10400   005266  C503  F489         	movff	PWM3_16BIT_SetSlice1Output1DutyCycleRegister@registerValue,1161	;volatile
 10401   00526A                     
 10402                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 140:     PWM3S1P1H = (uint8_t)(registerValue 
      +                          >> 8);
 10403   00526A  5004               	movf	(PWM3_16BIT_SetSlice1Output1DutyCycleRegister@registerValue+1)^(0+1280),w,c
 10404   00526C  6E8A               	movwf	138,c	;volatile
 10405   00526E  0012               	return		;funcret
 10406   005270                     __end_of_PWM3_16BIT_SetSlice1Output1DutyCycleRegister:
 10407                           	callstack 0
 10408                           
 10409 ;; *************** function _PWM3_16BIT_LoadBufferRegisters *****************
 10410 ;; Defined at:
 10411 ;;		line 149 in file "mcc_generated_files/pwm/src/pwm3_16bit.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;		None
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;		None
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      void 
 10418 ;; Registers used:
 10419 ;;		None
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10429 ;;Total ram usage:        0 bytes
 10430 ;; Hardware stack levels used: 1
 10431 ;; Hardware stack levels required when called: 5
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_setServoAngle
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text47
 10440   005344                     __ptext47:
 10441                           	callstack 0
 10442   005344                     _PWM3_16BIT_LoadBufferRegisters:
 10443                           	callstack 116
 10444   005344                     
 10445                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 152:     PWM3CONbits.LD = 1;
 10446   005344  8487               	bsf	135,2,c	;volatile
 10447   005346  0012               	return		;funcret
 10448   005348                     __end_of_PWM3_16BIT_LoadBufferRegisters:
 10449                           	callstack 0
 10450                           
 10451 ;; *************** function _PWM2_16BIT_SetSlice1Output2DutyCycleRegister *****************
 10452 ;; Defined at:
 10453 ;;		line 143 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;  registerValu    2    2[COMRAM] unsigned short 
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;		None
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  1    wreg      void 
 10460 ;; Registers used:
 10461 ;;		wreg, status,2
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;Total ram usage:        2 bytes
 10472 ;; Hardware stack levels used: 1
 10473 ;; Hardware stack levels required when called: 5
 10474 ;; This function calls:
 10475 ;;		Nothing
 10476 ;; This function is called by:
 10477 ;;		_setServoAngle
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           	psect	text48
 10482   005270                     __ptext48:
 10483                           	callstack 0
 10484   005270                     _PWM2_16BIT_SetSlice1Output2DutyCycleRegister:
 10485                           	callstack 116
 10486   005270                     
 10487                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 143: void PWM2_16BIT_SetSlice1Output2DutyCycl
      +                          eRegister(uint16_t registerValue);mcc_generated_files/pwm/src/pwm2_16bit.c: 144: {;mcc_g
      +                          enerated_files/pwm/src/pwm2_16bit.c: 145:     PWM2S1P2L = (uint8_t)(registerValue);
 10488   005270  C503  F47C         	movff	PWM2_16BIT_SetSlice1Output2DutyCycleRegister@registerValue,1148	;volatile
 10489   005274                     
 10490                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 146:     PWM2S1P2H = (uint8_t)(registerValue 
      +                          >> 8);
 10491   005274  5004               	movf	(PWM2_16BIT_SetSlice1Output2DutyCycleRegister@registerValue+1)^(0+1280),w,c
 10492   005276  6E7D               	movwf	125,c	;volatile
 10493   005278  0012               	return		;funcret
 10494   00527A                     __end_of_PWM2_16BIT_SetSlice1Output2DutyCycleRegister:
 10495                           	callstack 0
 10496                           
 10497 ;; *************** function _PWM2_16BIT_SetSlice1Output1DutyCycleRegister *****************
 10498 ;; Defined at:
 10499 ;;		line 137 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;  registerValu    2    2[COMRAM] unsigned short 
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		wreg, status,2
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;Total ram usage:        2 bytes
 10518 ;; Hardware stack levels used: 1
 10519 ;; Hardware stack levels required when called: 5
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_setServoAngle
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text49
 10528   00527A                     __ptext49:
 10529                           	callstack 0
 10530   00527A                     _PWM2_16BIT_SetSlice1Output1DutyCycleRegister:
 10531                           	callstack 116
 10532   00527A                     
 10533                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 137: void PWM2_16BIT_SetSlice1Output1DutyCycl
      +                          eRegister(uint16_t registerValue);mcc_generated_files/pwm/src/pwm2_16bit.c: 138: {;mcc_g
      +                          enerated_files/pwm/src/pwm2_16bit.c: 139:     PWM2S1P1L = (uint8_t)(registerValue);
 10534   00527A  C503  F47A         	movff	PWM2_16BIT_SetSlice1Output1DutyCycleRegister@registerValue,1146	;volatile
 10535   00527E                     
 10536                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 140:     PWM2S1P1H = (uint8_t)(registerValue 
      +                          >> 8);
 10537   00527E  5004               	movf	(PWM2_16BIT_SetSlice1Output1DutyCycleRegister@registerValue+1)^(0+1280),w,c
 10538   005280  6E7B               	movwf	123,c	;volatile
 10539   005282  0012               	return		;funcret
 10540   005284                     __end_of_PWM2_16BIT_SetSlice1Output1DutyCycleRegister:
 10541                           	callstack 0
 10542                           
 10543 ;; *************** function _PWM2_16BIT_LoadBufferRegisters *****************
 10544 ;; Defined at:
 10545 ;;		line 149 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;		None
 10548 ;; Auto vars:     Size  Location     Type
 10549 ;;		None
 10550 ;; Return value:  Size  Location     Type
 10551 ;;                  1    wreg      void 
 10552 ;; Registers used:
 10553 ;;		None
 10554 ;; Tracked objects:
 10555 ;;		On entry : 0/0
 10556 ;;		On exit  : 0/0
 10557 ;;		Unchanged: 0/0
 10558 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10563 ;;Total ram usage:        0 bytes
 10564 ;; Hardware stack levels used: 1
 10565 ;; Hardware stack levels required when called: 5
 10566 ;; This function calls:
 10567 ;;		Nothing
 10568 ;; This function is called by:
 10569 ;;		_setServoAngle
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text50
 10574   005348                     __ptext50:
 10575                           	callstack 0
 10576   005348                     _PWM2_16BIT_LoadBufferRegisters:
 10577                           	callstack 116
 10578   005348                     
 10579                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 152:     PWM2CONbits.LD = 1;
 10580   005348  8478               	bsf	120,2,c	;volatile
 10581   00534A  0012               	return		;funcret
 10582   00534C                     __end_of_PWM2_16BIT_LoadBufferRegisters:
 10583                           	callstack 0
 10584                           
 10585 ;; *************** function _PWM1_16BIT_SetSlice1Output2DutyCycleRegister *****************
 10586 ;; Defined at:
 10587 ;;		line 143 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;  registerValu    2    2[COMRAM] unsigned short 
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;		None
 10592 ;; Return value:  Size  Location     Type
 10593 ;;                  1    wreg      void 
 10594 ;; Registers used:
 10595 ;;		wreg, status,2
 10596 ;; Tracked objects:
 10597 ;;		On entry : 0/0
 10598 ;;		On exit  : 0/0
 10599 ;;		Unchanged: 0/0
 10600 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;Total ram usage:        2 bytes
 10606 ;; Hardware stack levels used: 1
 10607 ;; Hardware stack levels required when called: 5
 10608 ;; This function calls:
 10609 ;;		Nothing
 10610 ;; This function is called by:
 10611 ;;		_setServoAngle
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	text51
 10616   005284                     __ptext51:
 10617                           	callstack 0
 10618   005284                     _PWM1_16BIT_SetSlice1Output2DutyCycleRegister:
 10619                           	callstack 116
 10620   005284                     
 10621                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 143: void PWM1_16BIT_SetSlice1Output2DutyCycl
      +                          eRegister(uint16_t registerValue);mcc_generated_files/pwm/src/pwm1_16bit.c: 144: {;mcc_g
      +                          enerated_files/pwm/src/pwm1_16bit.c: 145:     PWM1S1P2L = (uint8_t)(registerValue);
 10622   005284  C503  F46D         	movff	PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue,1133	;volatile
 10623   005288                     
 10624                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 146:     PWM1S1P2H = (uint8_t)(registerValue 
      +                          >> 8);
 10625   005288  5004               	movf	(PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue+1)^(0+1280),w,c
 10626   00528A  6E6E               	movwf	110,c	;volatile
 10627   00528C  0012               	return		;funcret
 10628   00528E                     __end_of_PWM1_16BIT_SetSlice1Output2DutyCycleRegister:
 10629                           	callstack 0
 10630                           
 10631 ;; *************** function _PWM1_16BIT_SetSlice1Output1DutyCycleRegister *****************
 10632 ;; Defined at:
 10633 ;;		line 137 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;  registerValu    2    2[COMRAM] unsigned short 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;		None
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  1    wreg      void 
 10640 ;; Registers used:
 10641 ;;		wreg, status,2
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10651 ;;Total ram usage:        2 bytes
 10652 ;; Hardware stack levels used: 1
 10653 ;; Hardware stack levels required when called: 5
 10654 ;; This function calls:
 10655 ;;		Nothing
 10656 ;; This function is called by:
 10657 ;;		_setServoAngle
 10658 ;;		_controlServoMotor
 10659 ;; This function uses a non-reentrant model
 10660 ;;
 10661                           
 10662                           	psect	text52
 10663   00528E                     __ptext52:
 10664                           	callstack 0
 10665   00528E                     _PWM1_16BIT_SetSlice1Output1DutyCycleRegister:
 10666                           	callstack 116
 10667   00528E                     
 10668                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 137: void PWM1_16BIT_SetSlice1Output1DutyCycl
      +                          eRegister(uint16_t registerValue);mcc_generated_files/pwm/src/pwm1_16bit.c: 138: {;mcc_g
      +                          enerated_files/pwm/src/pwm1_16bit.c: 139:     PWM1S1P1L = (uint8_t)(registerValue);
 10669   00528E  C503  F46B         	movff	PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue,1131	;volatile
 10670   005292                     
 10671                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 140:     PWM1S1P1H = (uint8_t)(registerValue 
      +                          >> 8);
 10672   005292  5004               	movf	(PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue+1)^(0+1280),w,c
 10673   005294  6E6C               	movwf	108,c	;volatile
 10674   005296  0012               	return		;funcret
 10675   005298                     __end_of_PWM1_16BIT_SetSlice1Output1DutyCycleRegister:
 10676                           	callstack 0
 10677                           
 10678 ;; *************** function _PWM1_16BIT_LoadBufferRegisters *****************
 10679 ;; Defined at:
 10680 ;;		line 149 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;		None
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		None
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10698 ;;Total ram usage:        0 bytes
 10699 ;; Hardware stack levels used: 1
 10700 ;; Hardware stack levels required when called: 5
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_setServoAngle
 10705 ;;		_controlServoMotor
 10706 ;; This function uses a non-reentrant model
 10707 ;;
 10708                           
 10709                           	psect	text53
 10710   00534C                     __ptext53:
 10711                           	callstack 0
 10712   00534C                     _PWM1_16BIT_LoadBufferRegisters:
 10713                           	callstack 116
 10714   00534C                     
 10715                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 152:     PWM1CONbits.LD = 1;
 10716   00534C  8469               	bsf	105,2,c	;volatile
 10717   00534E  0012               	return		;funcret
 10718   005350                     __end_of_PWM1_16BIT_LoadBufferRegisters:
 10719                           	callstack 0
 10720                           
 10721 ;; *************** function _SYSTEM_Initialize *****************
 10722 ;; Defined at:
 10723 ;;		line 41 in file "mcc_generated_files/system/src/system.c"
 10724 ;; Parameters:    Size  Location     Type
 10725 ;;		None
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;		None
 10728 ;; Return value:  Size  Location     Type
 10729 ;;                  1    wreg      void 
 10730 ;; Registers used:
 10731 ;;		wreg, status,2, status,0, cstack
 10732 ;; Tracked objects:
 10733 ;;		On entry : 0/0
 10734 ;;		On exit  : 0/0
 10735 ;;		Unchanged: 0/0
 10736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10741 ;;Total ram usage:        0 bytes
 10742 ;; Hardware stack levels used: 1
 10743 ;; Hardware stack levels required when called: 7
 10744 ;; This function calls:
 10745 ;;		_CLOCK_Initialize
 10746 ;;		_INTERRUPT_Initialize
 10747 ;;		_PIN_MANAGER_Initialize
 10748 ;;		_PWM1_16BIT_Initialize
 10749 ;;		_PWM2_16BIT_Initialize
 10750 ;;		_PWM3_16BIT_Initialize
 10751 ;;		_TMR0_Initialize
 10752 ;;		_UART1_Initialize
 10753 ;;		_timeout_initialize
 10754 ;; This function is called by:
 10755 ;;		_main
 10756 ;; This function uses a non-reentrant model
 10757 ;;
 10758                           
 10759                           	psect	text54
 10760   005140                     __ptext54:
 10761                           	callstack 0
 10762   005140                     _SYSTEM_Initialize:
 10763                           	callstack 119
 10764   005140                     
 10765                           ;mcc_generated_files/system/src/system.c: 43:     CLOCK_Initialize();
 10766   005140  EC0F  F029         	call	_CLOCK_Initialize	;wreg free
 10767                           
 10768                           ;mcc_generated_files/system/src/system.c: 44:     PIN_MANAGER_Initialize();
 10769   005144  EC39  F024         	call	_PIN_MANAGER_Initialize	;wreg free
 10770   005148                     
 10771                           ;mcc_generated_files/system/src/system.c: 45:     PWM1_16BIT_Initialize();
 10772   005148  ECEF  F025         	call	_PWM1_16BIT_Initialize	;wreg free
 10773   00514C                     
 10774                           ;mcc_generated_files/system/src/system.c: 46:     PWM2_16BIT_Initialize();
 10775   00514C  ECB9  F025         	call	_PWM2_16BIT_Initialize	;wreg free
 10776   005150                     
 10777                           ;mcc_generated_files/system/src/system.c: 47:     PWM3_16BIT_Initialize();
 10778   005150  EC83  F025         	call	_PWM3_16BIT_Initialize	;wreg free
 10779   005154                     
 10780                           ;mcc_generated_files/system/src/system.c: 48:     TMR0_Initialize();
 10781   005154  ECF2  F027         	call	_TMR0_Initialize	;wreg free
 10782   005158                     
 10783                           ;mcc_generated_files/system/src/system.c: 49:     UART1_Initialize();
 10784   005158  ECD5  F024         	call	_UART1_Initialize	;wreg free
 10785   00515C                     
 10786                           ;mcc_generated_files/system/src/system.c: 50:     timeout_initialize();
 10787   00515C  ECC5  F028         	call	_timeout_initialize	;wreg free
 10788   005160                     
 10789                           ;mcc_generated_files/system/src/system.c: 51:     INTERRUPT_Initialize();
 10790   005160  ECBD  F027         	call	_INTERRUPT_Initialize	;wreg free
 10791   005164  0012               	return		;funcret
 10792   005166                     __end_of_SYSTEM_Initialize:
 10793                           	callstack 0
 10794                           
 10795 ;; *************** function _timeout_initialize *****************
 10796 ;; Defined at:
 10797 ;;		line 370 in file "mcc_generated_files/timer/src/timeout.c"
 10798 ;; Parameters:    Size  Location     Type
 10799 ;;		None
 10800 ;; Auto vars:     Size  Location     Type
 10801 ;;		None
 10802 ;; Return value:  Size  Location     Type
 10803 ;;                  1    wreg      void 
 10804 ;; Registers used:
 10805 ;;		wreg, status,2, status,0, cstack
 10806 ;; Tracked objects:
 10807 ;;		On entry : 0/0
 10808 ;;		On exit  : 0/0
 10809 ;;		Unchanged: 0/0
 10810 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10815 ;;Total ram usage:        0 bytes
 10816 ;; Hardware stack levels used: 1
 10817 ;; Hardware stack levels required when called: 6
 10818 ;; This function calls:
 10819 ;;		_TMR0_OverflowCallbackRegister
 10820 ;;		_TMR0_Start
 10821 ;;		_TMR0_Stop
 10822 ;;		_TMR0_Write
 10823 ;; This function is called by:
 10824 ;;		_SYSTEM_Initialize
 10825 ;; This function uses a non-reentrant model
 10826 ;;
 10827                           
 10828                           	psect	text55
 10829   00518A                     __ptext55:
 10830                           	callstack 0
 10831   00518A                     _timeout_initialize:
 10832                           	callstack 119
 10833   00518A                     
 10834                           ;mcc_generated_files/timer/src/timeout.c: 372:     TMR0_Stop();
 10835   00518A  EC99  F029         	call	_TMR0_Stop	;wreg free
 10836   00518E                     
 10837                           ;mcc_generated_files/timer/src/timeout.c: 373:     TMR0_Write(0);
 10838   00518E  0E00               	movlw	0
 10839   005190  6E04               	movwf	(TMR0_Write@timerVal+1)^(0+1280),c
 10840   005192  0E00               	movlw	0
 10841   005194  6E03               	movwf	TMR0_Write@timerVal^(0+1280),c
 10842   005196  EC23  F029         	call	_TMR0_Write	;wreg free
 10843   00519A                     
 10844                           ;mcc_generated_files/timer/src/timeout.c: 374:     TMR0_OverflowCallbackRegister(timeout
      +                          _isr);
 10845   00519A  0E00               	movlw	0
 10846   00519C  6E03               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
 10847   00519E  0E00               	movlw	0
 10848   0051A0  6E04               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
 10849   0051A2  EC4C  F029         	call	_TMR0_OverflowCallbackRegister	;wreg free
 10850   0051A6                     
 10851                           ;mcc_generated_files/timer/src/timeout.c: 375:     TMR0_Start();
 10852   0051A6  EC9C  F029         	call	_TMR0_Start	;wreg free
 10853   0051AA  0012               	return		;funcret
 10854   0051AC                     __end_of_timeout_initialize:
 10855                           	callstack 0
 10856                           
 10857 ;; *************** function _TMR0_Write *****************
 10858 ;; Defined at:
 10859 ;;		line 101 in file "mcc_generated_files/timer/src/tmr0.c"
 10860 ;; Parameters:    Size  Location     Type
 10861 ;;  timerVal        2    2[COMRAM] unsigned int 
 10862 ;; Auto vars:     Size  Location     Type
 10863 ;;		None
 10864 ;; Return value:  Size  Location     Type
 10865 ;;                  1    wreg      void 
 10866 ;; Registers used:
 10867 ;;		wreg, status,2
 10868 ;; Tracked objects:
 10869 ;;		On entry : 0/0
 10870 ;;		On exit  : 0/0
 10871 ;;		Unchanged: 0/0
 10872 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10877 ;;Total ram usage:        2 bytes
 10878 ;; Hardware stack levels used: 1
 10879 ;; Hardware stack levels required when called: 5
 10880 ;; This function calls:
 10881 ;;		Nothing
 10882 ;; This function is called by:
 10883 ;;		_timeout_initialize
 10884 ;;		_setTimerDuration
 10885 ;; This function uses a non-reentrant model
 10886 ;;
 10887                           
 10888                           	psect	text56
 10889   005246                     __ptext56:
 10890                           	callstack 0
 10891   005246                     _TMR0_Write:
 10892                           	callstack 119
 10893   005246                     
 10894                           ;mcc_generated_files/timer/src/tmr0.c: 101: void TMR0_Write(size_t timerVal);mcc_generat
      +                          ed_files/timer/src/tmr0.c: 102: {;mcc_generated_files/timer/src/tmr0.c: 103:     TMR0H =
      +                           timerVal >> 8;
 10895   005246  5004               	movf	(TMR0_Write@timerVal+1)^(0+1280),w,c
 10896   005248  0103               	movlb	3	; () banked
 10897   00524A  6F19               	movwf	25,b	;volatile
 10898   00524C                     
 10899                           ; BSR set to: 3
 10900                           ;mcc_generated_files/timer/src/tmr0.c: 104:     TMR0L = (uint8_t) timerVal;
 10901   00524C  C503  F318         	movff	TMR0_Write@timerVal,792	;volatile
 10902   005250                     
 10903                           ; BSR set to: 3
 10904   005250  0012               	return		;funcret
 10905   005252                     __end_of_TMR0_Write:
 10906                           	callstack 0
 10907                           
 10908 ;; *************** function _TMR0_Stop *****************
 10909 ;; Defined at:
 10910 ;;		line 83 in file "mcc_generated_files/timer/src/tmr0.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;		None
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;		None
 10915 ;; Return value:  Size  Location     Type
 10916 ;;                  1    wreg      void 
 10917 ;; Registers used:
 10918 ;;		None
 10919 ;; Tracked objects:
 10920 ;;		On entry : 0/0
 10921 ;;		On exit  : 0/0
 10922 ;;		Unchanged: 0/0
 10923 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10928 ;;Total ram usage:        0 bytes
 10929 ;; Hardware stack levels used: 1
 10930 ;; Hardware stack levels required when called: 5
 10931 ;; This function calls:
 10932 ;;		Nothing
 10933 ;; This function is called by:
 10934 ;;		_timeout_initialize
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text57
 10939   005332                     __ptext57:
 10940                           	callstack 0
 10941   005332                     _TMR0_Stop:
 10942                           	callstack 119
 10943   005332                     
 10944                           ;mcc_generated_files/timer/src/tmr0.c: 85:     T0CON0bits.T0EN = 0;
 10945   005332  0103               	movlb	3	; () banked
 10946   005334  9F1A               	bcf	26,7,b	;volatile
 10947   005336                     
 10948                           ; BSR set to: 3
 10949   005336  0012               	return		;funcret
 10950   005338                     __end_of_TMR0_Stop:
 10951                           	callstack 0
 10952                           
 10953 ;; *************** function _TMR0_Start *****************
 10954 ;; Defined at:
 10955 ;;		line 78 in file "mcc_generated_files/timer/src/tmr0.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;		None
 10958 ;; Auto vars:     Size  Location     Type
 10959 ;;		None
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  1    wreg      void 
 10962 ;; Registers used:
 10963 ;;		None
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 10969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;Total ram usage:        0 bytes
 10974 ;; Hardware stack levels used: 1
 10975 ;; Hardware stack levels required when called: 5
 10976 ;; This function calls:
 10977 ;;		Nothing
 10978 ;; This function is called by:
 10979 ;;		_timeout_initialize
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           	psect	text58
 10984   005338                     __ptext58:
 10985                           	callstack 0
 10986   005338                     _TMR0_Start:
 10987                           	callstack 119
 10988   005338                     
 10989                           ;mcc_generated_files/timer/src/tmr0.c: 80:     T0CON0bits.T0EN = 1;
 10990   005338  0103               	movlb	3	; () banked
 10991   00533A  8F1A               	bsf	26,7,b	;volatile
 10992   00533C                     
 10993                           ; BSR set to: 3
 10994   00533C  0012               	return		;funcret
 10995   00533E                     __end_of_TMR0_Start:
 10996                           	callstack 0
 10997                           
 10998 ;; *************** function _UART1_Initialize *****************
 10999 ;; Defined at:
 11000 ;;		line 95 in file "mcc_generated_files/uart/src/uart1.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  1    wreg      void 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2, status,0, cstack
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11018 ;;Total ram usage:        0 bytes
 11019 ;; Hardware stack levels used: 1
 11020 ;; Hardware stack levels required when called: 6
 11021 ;; This function calls:
 11022 ;;		_UART1_FramingErrorCallbackRegister
 11023 ;;		_UART1_OverrunErrorCallbackRegister
 11024 ;;		_UART1_ParityErrorCallbackRegister
 11025 ;; This function is called by:
 11026 ;;		_SYSTEM_Initialize
 11027 ;;		_main
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           	psect	text59
 11032   0049AA                     __ptext59:
 11033                           	callstack 0
 11034   0049AA                     _UART1_Initialize:
 11035                           	callstack 120
 11036   0049AA                     
 11037                           ;mcc_generated_files/uart/src/uart1.c: 101:     U1RXB = 0x0;
 11038   0049AA  0E00               	movlw	0
 11039   0049AC  0102               	movlb	2	; () banked
 11040   0049AE  6FA1               	movwf	161,b	;volatile
 11041                           
 11042                           ;mcc_generated_files/uart/src/uart1.c: 103:     U1RXCHK = 0x0;
 11043   0049B0  0E00               	movlw	0
 11044   0049B2  6FA2               	movwf	162,b	;volatile
 11045                           
 11046                           ;mcc_generated_files/uart/src/uart1.c: 105:     U1TXB = 0x0;
 11047   0049B4  0E00               	movlw	0
 11048   0049B6  6FA3               	movwf	163,b	;volatile
 11049                           
 11050                           ;mcc_generated_files/uart/src/uart1.c: 107:     U1TXCHK = 0x0;
 11051   0049B8  0E00               	movlw	0
 11052   0049BA  6FA4               	movwf	164,b	;volatile
 11053                           
 11054                           ;mcc_generated_files/uart/src/uart1.c: 109:     U1P1L = 0x0;
 11055   0049BC  0E00               	movlw	0
 11056   0049BE  6FA5               	movwf	165,b	;volatile
 11057                           
 11058                           ;mcc_generated_files/uart/src/uart1.c: 111:     U1P1H = 0x0;
 11059   0049C0  0E00               	movlw	0
 11060   0049C2  6FA6               	movwf	166,b	;volatile
 11061                           
 11062                           ;mcc_generated_files/uart/src/uart1.c: 113:     U1P2L = 0x0;
 11063   0049C4  0E00               	movlw	0
 11064   0049C6  6FA7               	movwf	167,b	;volatile
 11065                           
 11066                           ;mcc_generated_files/uart/src/uart1.c: 115:     U1P2H = 0x0;
 11067   0049C8  0E00               	movlw	0
 11068   0049CA  6FA8               	movwf	168,b	;volatile
 11069                           
 11070                           ;mcc_generated_files/uart/src/uart1.c: 117:     U1P3L = 0x0;
 11071   0049CC  0E00               	movlw	0
 11072   0049CE  6FA9               	movwf	169,b	;volatile
 11073                           
 11074                           ;mcc_generated_files/uart/src/uart1.c: 119:     U1P3H = 0x0;
 11075   0049D0  0E00               	movlw	0
 11076   0049D2  6FAA               	movwf	170,b	;volatile
 11077                           
 11078                           ;mcc_generated_files/uart/src/uart1.c: 121:     U1CON0 = 0xB0;
 11079   0049D4  0EB0               	movlw	176
 11080   0049D6  6FAB               	movwf	171,b	;volatile
 11081                           
 11082                           ;mcc_generated_files/uart/src/uart1.c: 123:     U1CON1 = 0x80;
 11083   0049D8  0E80               	movlw	128
 11084   0049DA  6FAC               	movwf	172,b	;volatile
 11085                           
 11086                           ;mcc_generated_files/uart/src/uart1.c: 125:     U1CON2 = 0x8;
 11087   0049DC  0E08               	movlw	8
 11088   0049DE  6FAD               	movwf	173,b	;volatile
 11089                           
 11090                           ;mcc_generated_files/uart/src/uart1.c: 127:     U1BRGL = 0x82;
 11091   0049E0  0E82               	movlw	130
 11092   0049E2  6FAE               	movwf	174,b	;volatile
 11093                           
 11094                           ;mcc_generated_files/uart/src/uart1.c: 129:     U1BRGH = 0x6;
 11095   0049E4  0E06               	movlw	6
 11096   0049E6  6FAF               	movwf	175,b	;volatile
 11097                           
 11098                           ;mcc_generated_files/uart/src/uart1.c: 131:     U1FIFO = 0x2E;
 11099   0049E8  0E2E               	movlw	46
 11100   0049EA  6FB0               	movwf	176,b	;volatile
 11101                           
 11102                           ;mcc_generated_files/uart/src/uart1.c: 133:     U1UIR = 0x0;
 11103   0049EC  0E00               	movlw	0
 11104   0049EE  6FB1               	movwf	177,b	;volatile
 11105                           
 11106                           ;mcc_generated_files/uart/src/uart1.c: 135:     U1ERRIR = 0x80;
 11107   0049F0  0E80               	movlw	128
 11108   0049F2  6FB2               	movwf	178,b	;volatile
 11109                           
 11110                           ;mcc_generated_files/uart/src/uart1.c: 137:     U1ERRIE = 0x0;
 11111   0049F4  0E00               	movlw	0
 11112   0049F6  6FB3               	movwf	179,b	;volatile
 11113   0049F8                     
 11114                           ; BSR set to: 2
 11115                           ;mcc_generated_files/uart/src/uart1.c: 139:     UART1_FramingErrorCallbackRegister(UART1
      +                          _DefaultFramingErrorCallback);
 11116   0049F8  0E00               	movlw	0
 11117   0049FA  6E03               	movwf	UART1_FramingErrorCallbackRegister@callbackHandler^(0+1280),c
 11118   0049FC  0E00               	movlw	0
 11119   0049FE  6E04               	movwf	(UART1_FramingErrorCallbackRegister@callbackHandler+1)^(0+1280),c
 11120   004A00  EC01  F029         	call	_UART1_FramingErrorCallbackRegister	;wreg free
 11121   004A04                     
 11122                           ;mcc_generated_files/uart/src/uart1.c: 140:     UART1_OverrunErrorCallbackRegister(UART1
      +                          _DefaultOverrunErrorCallback);
 11123   004A04  0E00               	movlw	0
 11124   004A06  6E03               	movwf	UART1_OverrunErrorCallbackRegister@callbackHandler^(0+1280),c
 11125   004A08  0E00               	movlw	0
 11126   004A0A  6E04               	movwf	(UART1_OverrunErrorCallbackRegister@callbackHandler+1)^(0+1280),c
 11127   004A0C  ECF3  F028         	call	_UART1_OverrunErrorCallbackRegister	;wreg free
 11128   004A10                     
 11129                           ;mcc_generated_files/uart/src/uart1.c: 141:     UART1_ParityErrorCallbackRegister(UART1_
      +                          DefaultParityErrorCallback);
 11130   004A10  0E00               	movlw	0
 11131   004A12  6E03               	movwf	UART1_ParityErrorCallbackRegister@callbackHandler^(0+1280),c
 11132   004A14  0E00               	movlw	0
 11133   004A16  6E04               	movwf	(UART1_ParityErrorCallbackRegister@callbackHandler+1)^(0+1280),c
 11134   004A18  ECE5  F028         	call	_UART1_ParityErrorCallbackRegister	;wreg free
 11135   004A1C                     
 11136                           ;mcc_generated_files/uart/src/uart1.c: 143:     uart1RxLastError.status = 0;
 11137   004A1C  0E00               	movlw	0
 11138   004A1E  0106               	movlb	6	; () banked
 11139   004A20  6F11               	movwf	(_uart1RxLastError+1)& (0+255),b	;volatile
 11140   004A22  0E00               	movlw	0
 11141   004A24  6F10               	movwf	_uart1RxLastError& (0+255),b	;volatile
 11142   004A26                     
 11143                           ; BSR set to: 6
 11144   004A26  0012               	return		;funcret
 11145   004A28                     __end_of_UART1_Initialize:
 11146                           	callstack 0
 11147                           
 11148 ;; *************** function _UART1_ParityErrorCallbackRegister *****************
 11149 ;; Defined at:
 11150 ;;		line 340 in file "mcc_generated_files/uart/src/uart1.c"
 11151 ;; Parameters:    Size  Location     Type
 11152 ;;  callbackHand    2    2[COMRAM] PTR FTN()void 
 11153 ;;		 -> UART1_DefaultParityErrorCallback(1), 
 11154 ;; Auto vars:     Size  Location     Type
 11155 ;;		None
 11156 ;; Return value:  Size  Location     Type
 11157 ;;                  1    wreg      void 
 11158 ;; Registers used:
 11159 ;;		wreg, status,2, status,0
 11160 ;; Tracked objects:
 11161 ;;		On entry : 0/0
 11162 ;;		On exit  : 0/0
 11163 ;;		Unchanged: 0/0
 11164 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11169 ;;Total ram usage:        2 bytes
 11170 ;; Hardware stack levels used: 1
 11171 ;; Hardware stack levels required when called: 5
 11172 ;; This function calls:
 11173 ;;		Nothing
 11174 ;; This function is called by:
 11175 ;;		_UART1_Initialize
 11176 ;; This function uses a non-reentrant model
 11177 ;;
 11178                           
 11179                           	psect	text60
 11180   0051CA                     __ptext60:
 11181                           	callstack 0
 11182   0051CA                     _UART1_ParityErrorCallbackRegister:
 11183                           	callstack 120
 11184   0051CA                     
 11185                           ;mcc_generated_files/uart/src/uart1.c: 340: void UART1_ParityErrorCallbackRegister(void 
      +                          (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 341: {;mcc_generated_fi
      +                          les/uart/src/uart1.c: 342:     if(((void*)0) != callbackHandler)
 11186   0051CA  5003               	movf	UART1_ParityErrorCallbackRegister@callbackHandler^(0+1280),w,c
 11187   0051CC  1004               	iorwf	(UART1_ParityErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
 11188   0051CE  B4D8               	btfsc	status,2,c
 11189   0051D0  EFEC  F028         	goto	u5421
 11190   0051D4  EFEE  F028         	goto	u5420
 11191   0051D8                     u5421:
 11192   0051D8  EFF2  F028         	goto	l946
 11193   0051DC                     u5420:
 11194   0051DC                     
 11195                           ;mcc_generated_files/uart/src/uart1.c: 343:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          344:         UART1_ParityErrorHandler = callbackHandler;
 11196   0051DC  C503  F60C         	movff	UART1_ParityErrorCallbackRegister@callbackHandler,_UART1_ParityErrorHandler
 11197   0051E0  C504  F60D         	movff	UART1_ParityErrorCallbackRegister@callbackHandler+1,_UART1_ParityErrorHandler+1
 11198   0051E4                     l946:
 11199   0051E4  0012               	return		;funcret
 11200   0051E6                     __end_of_UART1_ParityErrorCallbackRegister:
 11201                           	callstack 0
 11202                           
 11203 ;; *************** function _UART1_OverrunErrorCallbackRegister *****************
 11204 ;; Defined at:
 11205 ;;		line 332 in file "mcc_generated_files/uart/src/uart1.c"
 11206 ;; Parameters:    Size  Location     Type
 11207 ;;  callbackHand    2    2[COMRAM] PTR FTN()void 
 11208 ;;		 -> UART1_DefaultOverrunErrorCallback(1), 
 11209 ;; Auto vars:     Size  Location     Type
 11210 ;;		None
 11211 ;; Return value:  Size  Location     Type
 11212 ;;                  1    wreg      void 
 11213 ;; Registers used:
 11214 ;;		wreg, status,2, status,0
 11215 ;; Tracked objects:
 11216 ;;		On entry : 0/0
 11217 ;;		On exit  : 0/0
 11218 ;;		Unchanged: 0/0
 11219 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11224 ;;Total ram usage:        2 bytes
 11225 ;; Hardware stack levels used: 1
 11226 ;; Hardware stack levels required when called: 5
 11227 ;; This function calls:
 11228 ;;		Nothing
 11229 ;; This function is called by:
 11230 ;;		_UART1_Initialize
 11231 ;; This function uses a non-reentrant model
 11232 ;;
 11233                           
 11234                           	psect	text61
 11235   0051E6                     __ptext61:
 11236                           	callstack 0
 11237   0051E6                     _UART1_OverrunErrorCallbackRegister:
 11238                           	callstack 120
 11239   0051E6                     
 11240                           ;mcc_generated_files/uart/src/uart1.c: 332: void UART1_OverrunErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 333: {;mcc_generated_f
      +                          iles/uart/src/uart1.c: 334:     if(((void*)0) != callbackHandler)
 11241   0051E6  5003               	movf	UART1_OverrunErrorCallbackRegister@callbackHandler^(0+1280),w,c
 11242   0051E8  1004               	iorwf	(UART1_OverrunErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
 11243   0051EA  B4D8               	btfsc	status,2,c
 11244   0051EC  EFFA  F028         	goto	u5411
 11245   0051F0  EFFC  F028         	goto	u5410
 11246   0051F4                     u5411:
 11247   0051F4  EF00  F029         	goto	l942
 11248   0051F8                     u5410:
 11249   0051F8                     
 11250                           ;mcc_generated_files/uart/src/uart1.c: 335:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          336:         UART1_OverrunErrorHandler = callbackHandler;
 11251   0051F8  C503  F60E         	movff	UART1_OverrunErrorCallbackRegister@callbackHandler,_UART1_OverrunErrorHandler
 11252   0051FC  C504  F60F         	movff	UART1_OverrunErrorCallbackRegister@callbackHandler+1,_UART1_OverrunErrorHandler+1
 11253   005200                     l942:
 11254   005200  0012               	return		;funcret
 11255   005202                     __end_of_UART1_OverrunErrorCallbackRegister:
 11256                           	callstack 0
 11257                           
 11258 ;; *************** function _UART1_FramingErrorCallbackRegister *****************
 11259 ;; Defined at:
 11260 ;;		line 324 in file "mcc_generated_files/uart/src/uart1.c"
 11261 ;; Parameters:    Size  Location     Type
 11262 ;;  callbackHand    2    2[COMRAM] PTR FTN()void 
 11263 ;;		 -> UART1_DefaultFramingErrorCallback(1), 
 11264 ;; Auto vars:     Size  Location     Type
 11265 ;;		None
 11266 ;; Return value:  Size  Location     Type
 11267 ;;                  1    wreg      void 
 11268 ;; Registers used:
 11269 ;;		wreg, status,2, status,0
 11270 ;; Tracked objects:
 11271 ;;		On entry : 0/0
 11272 ;;		On exit  : 0/0
 11273 ;;		Unchanged: 0/0
 11274 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11278 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;Total ram usage:        2 bytes
 11280 ;; Hardware stack levels used: 1
 11281 ;; Hardware stack levels required when called: 5
 11282 ;; This function calls:
 11283 ;;		Nothing
 11284 ;; This function is called by:
 11285 ;;		_UART1_Initialize
 11286 ;; This function uses a non-reentrant model
 11287 ;;
 11288                           
 11289                           	psect	text62
 11290   005202                     __ptext62:
 11291                           	callstack 0
 11292   005202                     _UART1_FramingErrorCallbackRegister:
 11293                           	callstack 120
 11294   005202                     
 11295                           ;mcc_generated_files/uart/src/uart1.c: 324: void UART1_FramingErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 325: {;mcc_generated_f
      +                          iles/uart/src/uart1.c: 326:     if(((void*)0) != callbackHandler)
 11296   005202  5003               	movf	UART1_FramingErrorCallbackRegister@callbackHandler^(0+1280),w,c
 11297   005204  1004               	iorwf	(UART1_FramingErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
 11298   005206  B4D8               	btfsc	status,2,c
 11299   005208  EF08  F029         	goto	u5401
 11300   00520C  EF0A  F029         	goto	u5400
 11301   005210                     u5401:
 11302   005210  EF0E  F029         	goto	l938
 11303   005214                     u5400:
 11304   005214                     
 11305                           ;mcc_generated_files/uart/src/uart1.c: 327:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          328:         UART1_FramingErrorHandler = callbackHandler;
 11306   005214  C503  F5E3         	movff	UART1_FramingErrorCallbackRegister@callbackHandler,_UART1_FramingErrorHandler
 11307   005218  C504  F5E4         	movff	UART1_FramingErrorCallbackRegister@callbackHandler+1,_UART1_FramingErrorHandler+1
 11308   00521C                     l938:
 11309   00521C  0012               	return		;funcret
 11310   00521E                     __end_of_UART1_FramingErrorCallbackRegister:
 11311                           	callstack 0
 11312                           
 11313 ;; *************** function _TMR0_Initialize *****************
 11314 ;; Defined at:
 11315 ;;		line 54 in file "mcc_generated_files/timer/src/tmr0.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;		None
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;		None
 11320 ;; Return value:  Size  Location     Type
 11321 ;;                  1    wreg      void 
 11322 ;; Registers used:
 11323 ;;		wreg, status,2, status,0, cstack
 11324 ;; Tracked objects:
 11325 ;;		On entry : 0/0
 11326 ;;		On exit  : 0/0
 11327 ;;		Unchanged: 0/0
 11328 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11331 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11332 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11333 ;;Total ram usage:        2 bytes
 11334 ;; Hardware stack levels used: 1
 11335 ;; Hardware stack levels required when called: 6
 11336 ;; This function calls:
 11337 ;;		_TMR0_OverflowCallbackRegister
 11338 ;; This function is called by:
 11339 ;;		_SYSTEM_Initialize
 11340 ;; This function uses a non-reentrant model
 11341 ;;
 11342                           
 11343                           	psect	text63
 11344   004FE4                     __ptext63:
 11345                           	callstack 0
 11346   004FE4                     _TMR0_Initialize:
 11347                           	callstack 119
 11348   004FE4                     
 11349                           ;mcc_generated_files/timer/src/tmr0.c: 57:     TMR0H = 0x0;
 11350   004FE4  0E00               	movlw	0
 11351   004FE6  0103               	movlb	3	; () banked
 11352   004FE8  6F19               	movwf	25,b	;volatile
 11353                           
 11354                           ;mcc_generated_files/timer/src/tmr0.c: 60:     TMR0L = 0x0;
 11355   004FEA  0E00               	movlw	0
 11356   004FEC  6F18               	movwf	24,b	;volatile
 11357                           
 11358                           ;mcc_generated_files/timer/src/tmr0.c: 63:     T0CON1 = 0x78;
 11359   004FEE  0E78               	movlw	120
 11360   004FF0  6F1B               	movwf	27,b	;volatile
 11361                           
 11362                           ;mcc_generated_files/timer/src/tmr0.c: 66:     timerTMR0ReloadVal16bit = ((uint16_t)TMR0
      +                          H << 8) | TMR0L;
 11363   004FF2  5119               	movf	25,w,b	;volatile
 11364   004FF4  6E05               	movwf	??_TMR0_Initialize^(0+1280),c
 11365   004FF6  5118               	movf	24,w,b	;volatile
 11366   004FF8  0105               	movlb	5	; () banked
 11367   004FFA  6FE5               	movwf	_timerTMR0ReloadVal16bit& (0+255),b	;volatile
 11368   004FFC  C505  F5E6         	movff	??_TMR0_Initialize,_timerTMR0ReloadVal16bit+1	;volatile
 11369   005000                     
 11370                           ; BSR set to: 5
 11371                           ;mcc_generated_files/timer/src/tmr0.c: 69:     TMR0_OverflowCallbackRegister(TMR0_Defaul
      +                          tOverflowCallback);
 11372   005000  0E00               	movlw	0
 11373   005002  6E03               	movwf	TMR0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
 11374   005004  0E00               	movlw	0
 11375   005006  6E04               	movwf	(TMR0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
 11376   005008  EC4C  F029         	call	_TMR0_OverflowCallbackRegister	;wreg free
 11377   00500C                     
 11378                           ;mcc_generated_files/timer/src/tmr0.c: 72:     PIR3bits.TMR0IF = 0;
 11379   00500C  9EB6               	bcf	182,7,c	;volatile
 11380   00500E                     
 11381                           ;mcc_generated_files/timer/src/tmr0.c: 75:     T0CON0 = 0x90;
 11382   00500E  0E90               	movlw	144
 11383   005010  0103               	movlb	3	; () banked
 11384   005012  6F1A               	movwf	26,b	;volatile
 11385   005014                     
 11386                           ; BSR set to: 3
 11387   005014  0012               	return		;funcret
 11388   005016                     __end_of_TMR0_Initialize:
 11389                           	callstack 0
 11390                           
 11391 ;; *************** function _TMR0_OverflowCallbackRegister *****************
 11392 ;; Defined at:
 11393 ;;		line 119 in file "mcc_generated_files/timer/src/tmr0.c"
 11394 ;; Parameters:    Size  Location     Type
 11395 ;;  CallbackHand    2    2[COMRAM] PTR FTN()void 
 11396 ;;		 -> timeout_isr(1), TMR0_DefaultOverflowCallback(1), 
 11397 ;; Auto vars:     Size  Location     Type
 11398 ;;		None
 11399 ;; Return value:  Size  Location     Type
 11400 ;;                  1    wreg      void 
 11401 ;; Registers used:
 11402 ;;		wreg, status,2, status,0
 11403 ;; Tracked objects:
 11404 ;;		On entry : 0/0
 11405 ;;		On exit  : 0/0
 11406 ;;		Unchanged: 0/0
 11407 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11412 ;;Total ram usage:        2 bytes
 11413 ;; Hardware stack levels used: 1
 11414 ;; Hardware stack levels required when called: 5
 11415 ;; This function calls:
 11416 ;;		Nothing
 11417 ;; This function is called by:
 11418 ;;		_TMR0_Initialize
 11419 ;;		_timeout_initialize
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423                           	psect	text64
 11424   005298                     __ptext64:
 11425                           	callstack 0
 11426   005298                     _TMR0_OverflowCallbackRegister:
 11427                           	callstack 119
 11428   005298                     
 11429                           ;mcc_generated_files/timer/src/tmr0.c: 119: void TMR0_OverflowCallbackRegister(void (* C
      +                          allbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 120: {;mcc_generated_files/
      +                          timer/src/tmr0.c: 121:     TMR0_OverflowCallback = CallbackHandler;
 11430   005298  C503  F66C         	movff	TMR0_OverflowCallbackRegister@CallbackHandler,_TMR0_OverflowCallback
 11431   00529C  C504  F66D         	movff	TMR0_OverflowCallbackRegister@CallbackHandler+1,_TMR0_OverflowCallback+1
 11432   0052A0  0012               	return		;funcret
 11433   0052A2                     __end_of_TMR0_OverflowCallbackRegister:
 11434                           	callstack 0
 11435                           
 11436 ;; *************** function _PWM3_16BIT_Initialize *****************
 11437 ;; Defined at:
 11438 ;;		line 50 in file "mcc_generated_files/pwm/src/pwm3_16bit.c"
 11439 ;; Parameters:    Size  Location     Type
 11440 ;;		None
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;                  1    wreg      void 
 11445 ;; Registers used:
 11446 ;;		wreg, status,2, status,0, cstack
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;Total ram usage:        0 bytes
 11457 ;; Hardware stack levels used: 1
 11458 ;; Hardware stack levels required when called: 6
 11459 ;; This function calls:
 11460 ;;		_PWM3_16BIT_Period_SetInterruptHandler
 11461 ;;		_PWM3_16BIT_Slice1Output1_SetInterruptHandler
 11462 ;;		_PWM3_16BIT_Slice1Output2_SetInterruptHandler
 11463 ;; This function is called by:
 11464 ;;		_SYSTEM_Initialize
 11465 ;;		_main
 11466 ;; This function uses a non-reentrant model
 11467 ;;
 11468                           
 11469                           	psect	text65
 11470   004B06                     __ptext65:
 11471                           	callstack 0
 11472   004B06                     _PWM3_16BIT_Initialize:
 11473                           	callstack 119
 11474   004B06                     
 11475                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 53:     PWM3ERS = 0x0;
 11476   004B06  0E00               	movlw	0
 11477   004B08  6E7E               	movwf	126,c	;volatile
 11478                           
 11479                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 56:     PWM3CLK = 0x2;
 11480   004B0A  0E02               	movlw	2
 11481   004B0C  6E7F               	movwf	127,c	;volatile
 11482                           
 11483                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 59:     PWM3LDS = 0x0;
 11484   004B0E  0E00               	movlw	0
 11485   004B10  6E80               	movwf	128,c	;volatile
 11486   004B12                     
 11487                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 62:     PWM3PRL = 0xFF;
 11488   004B12  6881               	setf	129,c	;volatile
 11489                           
 11490                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 65:     PWM3PRH = 0xF9;
 11491   004B14  0EF9               	movlw	249
 11492   004B16  6E82               	movwf	130,c	;volatile
 11493                           
 11494                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 68:     PWM3CPRE = 0x13;
 11495   004B18  0E13               	movlw	19
 11496   004B1A  6E83               	movwf	131,c	;volatile
 11497                           
 11498                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 71:     PWM3PIPOS = 0x0;
 11499   004B1C  0E00               	movlw	0
 11500   004B1E  6E84               	movwf	132,c	;volatile
 11501                           
 11502                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 74:     PWM3GIR = 0x0;
 11503   004B20  0E00               	movlw	0
 11504   004B22  6E85               	movwf	133,c	;volatile
 11505                           
 11506                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 77:     PWM3GIE = 0x0;
 11507   004B24  0E00               	movlw	0
 11508   004B26  6E86               	movwf	134,c	;volatile
 11509                           
 11510                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 80:     PWM3S1CFG = 0x0;
 11511   004B28  0E00               	movlw	0
 11512   004B2A  6E88               	movwf	136,c	;volatile
 11513                           
 11514                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 83:     PWM3S1P1L = 0xC0;
 11515   004B2C  0EC0               	movlw	192
 11516   004B2E  6E89               	movwf	137,c	;volatile
 11517                           
 11518                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 86:     PWM3S1P1H = 0x12;
 11519   004B30  0E12               	movlw	18
 11520   004B32  6E8A               	movwf	138,c	;volatile
 11521                           
 11522                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 89:     PWM3S1P2L = 0xC0;
 11523   004B34  0EC0               	movlw	192
 11524   004B36  6E8B               	movwf	139,c	;volatile
 11525                           
 11526                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 92:     PWM3S1P2H = 0x12;
 11527   004B38  0E12               	movlw	18
 11528   004B3A  6E8C               	movwf	140,c	;volatile
 11529   004B3C                     
 11530                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 95:     PIR7bits.PWM3PIF = 0;
 11531   004B3C  9CBA               	bcf	186,6,c	;volatile
 11532   004B3E                     
 11533                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 98:     PIR7bits.PWM3IF = 0;
 11534   004B3E  9EBA               	bcf	186,7,c	;volatile
 11535   004B40                     
 11536                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 101:     PWM3GIRbits.S1P1IF = 0;
 11537   004B40  9085               	bcf	133,0,c	;volatile
 11538   004B42                     
 11539                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 104:     PWM3GIRbits.S1P2IF = 0;
 11540   004B42  9285               	bcf	133,1,c	;volatile
 11541   004B44                     
 11542                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 107:     PIE7bits.PWM3IE = 0;
 11543   004B44  9EAF               	bcf	175,7,c	;volatile
 11544   004B46                     
 11545                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 110:     PIE7bits.PWM3PIE = 0;
 11546   004B46  9CAF               	bcf	175,6,c	;volatile
 11547   004B48                     
 11548                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 113:     PWM3_16BIT_Slice1Output1_SetInterrup
      +                          tHandler(PWM3_16BIT_Slice1Output1_DefaultInterruptHandler);
 11549   004B48  0E00               	movlw	0
 11550   004B4A  6E03               	movwf	PWM3_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
 11551   004B4C  0E00               	movlw	0
 11552   004B4E  6E04               	movwf	(PWM3_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 11553   004B50  EC56  F029         	call	_PWM3_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
 11554   004B54                     
 11555                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 114:     PWM3_16BIT_Slice1Output2_SetInterrup
      +                          tHandler(PWM3_16BIT_Slice1Output2_DefaultInterruptHandler);
 11556   004B54  0E00               	movlw	0
 11557   004B56  6E03               	movwf	PWM3_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
 11558   004B58  0E00               	movlw	0
 11559   004B5A  6E04               	movwf	(PWM3_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 11560   004B5C  EC51  F029         	call	_PWM3_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
 11561   004B60                     
 11562                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 115:     PWM3_16BIT_Period_SetInterruptHandle
      +                          r(PWM3_16BIT_Period_DefaultInterruptHandler);
 11563   004B60  0E00               	movlw	0
 11564   004B62  6E03               	movwf	PWM3_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
 11565   004B64  0E00               	movlw	0
 11566   004B66  6E04               	movwf	(PWM3_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 11567   004B68  EC5B  F029         	call	_PWM3_16BIT_Period_SetInterruptHandler	;wreg free
 11568   004B6C                     
 11569                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 118:     PWM3CON = 0x80;
 11570   004B6C  0E80               	movlw	128
 11571   004B6E  6E87               	movwf	135,c	;volatile
 11572   004B70  0012               	return		;funcret
 11573   004B72                     __end_of_PWM3_16BIT_Initialize:
 11574                           	callstack 0
 11575                           
 11576 ;; *************** function _PWM3_16BIT_Slice1Output2_SetInterruptHandler *****************
 11577 ;; Defined at:
 11578 ;;		line 194 in file "mcc_generated_files/pwm/src/pwm3_16bit.c"
 11579 ;; Parameters:    Size  Location     Type
 11580 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 11581 ;;		 -> PWM3_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
 11582 ;; Auto vars:     Size  Location     Type
 11583 ;;		None
 11584 ;; Return value:  Size  Location     Type
 11585 ;;                  1    wreg      void 
 11586 ;; Registers used:
 11587 ;;		wreg, status,2, status,0
 11588 ;; Tracked objects:
 11589 ;;		On entry : 0/0
 11590 ;;		On exit  : 0/0
 11591 ;;		Unchanged: 0/0
 11592 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11597 ;;Total ram usage:        2 bytes
 11598 ;; Hardware stack levels used: 1
 11599 ;; Hardware stack levels required when called: 5
 11600 ;; This function calls:
 11601 ;;		Nothing
 11602 ;; This function is called by:
 11603 ;;		_PWM3_16BIT_Initialize
 11604 ;; This function uses a non-reentrant model
 11605 ;;
 11606                           
 11607                           	psect	text66
 11608   0052A2                     __ptext66:
 11609                           	callstack 0
 11610   0052A2                     _PWM3_16BIT_Slice1Output2_SetInterruptHandler:
 11611                           	callstack 119
 11612   0052A2                     
 11613                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 194: void PWM3_16BIT_Slice1Output2_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm3_16bit.c: 195
      +                          : {;mcc_generated_files/pwm/src/pwm3_16bit.c: 196:     PWM3_16BIT_Slice1Output2_Interrup
      +                          tHandler = InterruptHandler;
 11614   0052A2  C503  F67C         	movff	PWM3_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM3_16BIT_Slice1O
      +                          utput2_InterruptHandler
 11615   0052A6  C504  F67D         	movff	PWM3_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM3_16BIT_Slice
      +                          1Output2_InterruptHandler+1
 11616   0052AA  0012               	return		;funcret
 11617   0052AC                     __end_of_PWM3_16BIT_Slice1Output2_SetInterruptHandler:
 11618                           	callstack 0
 11619                           
 11620 ;; *************** function _PWM3_16BIT_Slice1Output1_SetInterruptHandler *****************
 11621 ;; Defined at:
 11622 ;;		line 189 in file "mcc_generated_files/pwm/src/pwm3_16bit.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 11625 ;;		 -> PWM3_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
 11626 ;; Auto vars:     Size  Location     Type
 11627 ;;		None
 11628 ;; Return value:  Size  Location     Type
 11629 ;;                  1    wreg      void 
 11630 ;; Registers used:
 11631 ;;		wreg, status,2, status,0
 11632 ;; Tracked objects:
 11633 ;;		On entry : 0/0
 11634 ;;		On exit  : 0/0
 11635 ;;		Unchanged: 0/0
 11636 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11640 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11641 ;;Total ram usage:        2 bytes
 11642 ;; Hardware stack levels used: 1
 11643 ;; Hardware stack levels required when called: 5
 11644 ;; This function calls:
 11645 ;;		Nothing
 11646 ;; This function is called by:
 11647 ;;		_PWM3_16BIT_Initialize
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text67
 11652   0052AC                     __ptext67:
 11653                           	callstack 0
 11654   0052AC                     _PWM3_16BIT_Slice1Output1_SetInterruptHandler:
 11655                           	callstack 119
 11656   0052AC                     
 11657                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 189: void PWM3_16BIT_Slice1Output1_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm3_16bit.c: 190
      +                          : {;mcc_generated_files/pwm/src/pwm3_16bit.c: 191:     PWM3_16BIT_Slice1Output1_Interrup
      +                          tHandler = InterruptHandler;
 11658   0052AC  C503  F67E         	movff	PWM3_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM3_16BIT_Slice1O
      +                          utput1_InterruptHandler
 11659   0052B0  C504  F67F         	movff	PWM3_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM3_16BIT_Slice
      +                          1Output1_InterruptHandler+1
 11660   0052B4  0012               	return		;funcret
 11661   0052B6                     __end_of_PWM3_16BIT_Slice1Output1_SetInterruptHandler:
 11662                           	callstack 0
 11663                           
 11664 ;; *************** function _PWM3_16BIT_Period_SetInterruptHandler *****************
 11665 ;; Defined at:
 11666 ;;		line 199 in file "mcc_generated_files/pwm/src/pwm3_16bit.c"
 11667 ;; Parameters:    Size  Location     Type
 11668 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 11669 ;;		 -> PWM3_16BIT_Period_DefaultInterruptHandler(1), 
 11670 ;; Auto vars:     Size  Location     Type
 11671 ;;		None
 11672 ;; Return value:  Size  Location     Type
 11673 ;;                  1    wreg      void 
 11674 ;; Registers used:
 11675 ;;		wreg, status,2, status,0
 11676 ;; Tracked objects:
 11677 ;;		On entry : 0/0
 11678 ;;		On exit  : 0/0
 11679 ;;		Unchanged: 0/0
 11680 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11684 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11685 ;;Total ram usage:        2 bytes
 11686 ;; Hardware stack levels used: 1
 11687 ;; Hardware stack levels required when called: 5
 11688 ;; This function calls:
 11689 ;;		Nothing
 11690 ;; This function is called by:
 11691 ;;		_PWM3_16BIT_Initialize
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           
 11695                           	psect	text68
 11696   0052B6                     __ptext68:
 11697                           	callstack 0
 11698   0052B6                     _PWM3_16BIT_Period_SetInterruptHandler:
 11699                           	callstack 119
 11700   0052B6                     
 11701                           ;mcc_generated_files/pwm/src/pwm3_16bit.c: 199: void PWM3_16BIT_Period_SetInterruptHandl
      +                          er(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm3_16bit.c: 200: {;mcc
      +                          _generated_files/pwm/src/pwm3_16bit.c: 201:     PWM3_16BIT_Period_InterruptHandler = Int
      +                          erruptHandler;
 11702   0052B6  C503  F67A         	movff	PWM3_16BIT_Period_SetInterruptHandler@InterruptHandler,_PWM3_16BIT_Period_Interru
      +                          ptHandler
 11703   0052BA  C504  F67B         	movff	PWM3_16BIT_Period_SetInterruptHandler@InterruptHandler+1,_PWM3_16BIT_Period_Inter
      +                          ruptHandler+1
 11704   0052BE  0012               	return		;funcret
 11705   0052C0                     __end_of_PWM3_16BIT_Period_SetInterruptHandler:
 11706                           	callstack 0
 11707                           
 11708 ;; *************** function _PWM2_16BIT_Initialize *****************
 11709 ;; Defined at:
 11710 ;;		line 50 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
 11711 ;; Parameters:    Size  Location     Type
 11712 ;;		None
 11713 ;; Auto vars:     Size  Location     Type
 11714 ;;		None
 11715 ;; Return value:  Size  Location     Type
 11716 ;;                  1    wreg      void 
 11717 ;; Registers used:
 11718 ;;		wreg, status,2, status,0, cstack
 11719 ;; Tracked objects:
 11720 ;;		On entry : 0/0
 11721 ;;		On exit  : 0/0
 11722 ;;		Unchanged: 0/0
 11723 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11728 ;;Total ram usage:        0 bytes
 11729 ;; Hardware stack levels used: 1
 11730 ;; Hardware stack levels required when called: 6
 11731 ;; This function calls:
 11732 ;;		_PWM2_16BIT_Period_SetInterruptHandler
 11733 ;;		_PWM2_16BIT_Slice1Output1_SetInterruptHandler
 11734 ;;		_PWM2_16BIT_Slice1Output2_SetInterruptHandler
 11735 ;; This function is called by:
 11736 ;;		_SYSTEM_Initialize
 11737 ;;		_main
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text69
 11742   004B72                     __ptext69:
 11743                           	callstack 0
 11744   004B72                     _PWM2_16BIT_Initialize:
 11745                           	callstack 119
 11746   004B72                     
 11747                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 53:     PWM2ERS = 0x0;
 11748   004B72  0E00               	movlw	0
 11749   004B74  6E6F               	movwf	111,c	;volatile
 11750                           
 11751                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 56:     PWM2CLK = 0x2;
 11752   004B76  0E02               	movlw	2
 11753   004B78  6E70               	movwf	112,c	;volatile
 11754                           
 11755                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 59:     PWM2LDS = 0x0;
 11756   004B7A  0E00               	movlw	0
 11757   004B7C  6E71               	movwf	113,c	;volatile
 11758   004B7E                     
 11759                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 62:     PWM2PRL = 0xFF;
 11760   004B7E  6872               	setf	114,c	;volatile
 11761                           
 11762                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 65:     PWM2PRH = 0xF9;
 11763   004B80  0EF9               	movlw	249
 11764   004B82  6E73               	movwf	115,c	;volatile
 11765                           
 11766                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 68:     PWM2CPRE = 0x13;
 11767   004B84  0E13               	movlw	19
 11768   004B86  6E74               	movwf	116,c	;volatile
 11769                           
 11770                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 71:     PWM2PIPOS = 0x0;
 11771   004B88  0E00               	movlw	0
 11772   004B8A  6E75               	movwf	117,c	;volatile
 11773                           
 11774                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 74:     PWM2GIR = 0x0;
 11775   004B8C  0E00               	movlw	0
 11776   004B8E  6E76               	movwf	118,c	;volatile
 11777                           
 11778                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 77:     PWM2GIE = 0x0;
 11779   004B90  0E00               	movlw	0
 11780   004B92  6E77               	movwf	119,c	;volatile
 11781                           
 11782                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 80:     PWM2S1CFG = 0x0;
 11783   004B94  0E00               	movlw	0
 11784   004B96  6E79               	movwf	121,c	;volatile
 11785                           
 11786                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 83:     PWM2S1P1L = 0xC0;
 11787   004B98  0EC0               	movlw	192
 11788   004B9A  6E7A               	movwf	122,c	;volatile
 11789                           
 11790                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 86:     PWM2S1P1H = 0x12;
 11791   004B9C  0E12               	movlw	18
 11792   004B9E  6E7B               	movwf	123,c	;volatile
 11793                           
 11794                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 89:     PWM2S1P2L = 0xC0;
 11795   004BA0  0EC0               	movlw	192
 11796   004BA2  6E7C               	movwf	124,c	;volatile
 11797                           
 11798                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 92:     PWM2S1P2H = 0x12;
 11799   004BA4  0E12               	movlw	18
 11800   004BA6  6E7D               	movwf	125,c	;volatile
 11801   004BA8                     
 11802                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 95:     PIR5bits.PWM2PIF = 0;
 11803   004BA8  9CB8               	bcf	184,6,c	;volatile
 11804   004BAA                     
 11805                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 98:     PIR5bits.PWM2IF = 0;
 11806   004BAA  9EB8               	bcf	184,7,c	;volatile
 11807   004BAC                     
 11808                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 101:     PWM2GIRbits.S1P1IF = 0;
 11809   004BAC  9076               	bcf	118,0,c	;volatile
 11810   004BAE                     
 11811                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 104:     PWM2GIRbits.S1P2IF = 0;
 11812   004BAE  9276               	bcf	118,1,c	;volatile
 11813   004BB0                     
 11814                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 107:     PIE5bits.PWM2IE = 0;
 11815   004BB0  9EAD               	bcf	173,7,c	;volatile
 11816   004BB2                     
 11817                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 110:     PIE5bits.PWM2PIE = 0;
 11818   004BB2  9CAD               	bcf	173,6,c	;volatile
 11819   004BB4                     
 11820                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 113:     PWM2_16BIT_Slice1Output1_SetInterrup
      +                          tHandler(PWM2_16BIT_Slice1Output1_DefaultInterruptHandler);
 11821   004BB4  0E00               	movlw	0
 11822   004BB6  6E03               	movwf	PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
 11823   004BB8  0E00               	movlw	0
 11824   004BBA  6E04               	movwf	(PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 11825   004BBC  EC65  F029         	call	_PWM2_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
 11826   004BC0                     
 11827                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 114:     PWM2_16BIT_Slice1Output2_SetInterrup
      +                          tHandler(PWM2_16BIT_Slice1Output2_DefaultInterruptHandler);
 11828   004BC0  0E00               	movlw	0
 11829   004BC2  6E03               	movwf	PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
 11830   004BC4  0E00               	movlw	0
 11831   004BC6  6E04               	movwf	(PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 11832   004BC8  EC60  F029         	call	_PWM2_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
 11833   004BCC                     
 11834                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 115:     PWM2_16BIT_Period_SetInterruptHandle
      +                          r(PWM2_16BIT_Period_DefaultInterruptHandler);
 11835   004BCC  0E00               	movlw	0
 11836   004BCE  6E03               	movwf	PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
 11837   004BD0  0E00               	movlw	0
 11838   004BD2  6E04               	movwf	(PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 11839   004BD4  EC6A  F029         	call	_PWM2_16BIT_Period_SetInterruptHandler	;wreg free
 11840   004BD8                     
 11841                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 118:     PWM2CON = 0x80;
 11842   004BD8  0E80               	movlw	128
 11843   004BDA  6E78               	movwf	120,c	;volatile
 11844   004BDC  0012               	return		;funcret
 11845   004BDE                     __end_of_PWM2_16BIT_Initialize:
 11846                           	callstack 0
 11847                           
 11848 ;; *************** function _PWM2_16BIT_Slice1Output2_SetInterruptHandler *****************
 11849 ;; Defined at:
 11850 ;;		line 194 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 11853 ;;		 -> PWM2_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
 11854 ;; Auto vars:     Size  Location     Type
 11855 ;;		None
 11856 ;; Return value:  Size  Location     Type
 11857 ;;                  1    wreg      void 
 11858 ;; Registers used:
 11859 ;;		wreg, status,2, status,0
 11860 ;; Tracked objects:
 11861 ;;		On entry : 0/0
 11862 ;;		On exit  : 0/0
 11863 ;;		Unchanged: 0/0
 11864 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11865 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11868 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11869 ;;Total ram usage:        2 bytes
 11870 ;; Hardware stack levels used: 1
 11871 ;; Hardware stack levels required when called: 5
 11872 ;; This function calls:
 11873 ;;		Nothing
 11874 ;; This function is called by:
 11875 ;;		_PWM2_16BIT_Initialize
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           	psect	text70
 11880   0052C0                     __ptext70:
 11881                           	callstack 0
 11882   0052C0                     _PWM2_16BIT_Slice1Output2_SetInterruptHandler:
 11883                           	callstack 119
 11884   0052C0                     
 11885                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 194: void PWM2_16BIT_Slice1Output2_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm2_16bit.c: 195
      +                          : {;mcc_generated_files/pwm/src/pwm2_16bit.c: 196:     PWM2_16BIT_Slice1Output2_Interrup
      +                          tHandler = InterruptHandler;
 11886   0052C0  C503  F676         	movff	PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM2_16BIT_Slice1O
      +                          utput2_InterruptHandler
 11887   0052C4  C504  F677         	movff	PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM2_16BIT_Slice
      +                          1Output2_InterruptHandler+1
 11888   0052C8  0012               	return		;funcret
 11889   0052CA                     __end_of_PWM2_16BIT_Slice1Output2_SetInterruptHandler:
 11890                           	callstack 0
 11891                           
 11892 ;; *************** function _PWM2_16BIT_Slice1Output1_SetInterruptHandler *****************
 11893 ;; Defined at:
 11894 ;;		line 189 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
 11895 ;; Parameters:    Size  Location     Type
 11896 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 11897 ;;		 -> PWM2_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
 11898 ;; Auto vars:     Size  Location     Type
 11899 ;;		None
 11900 ;; Return value:  Size  Location     Type
 11901 ;;                  1    wreg      void 
 11902 ;; Registers used:
 11903 ;;		wreg, status,2, status,0
 11904 ;; Tracked objects:
 11905 ;;		On entry : 0/0
 11906 ;;		On exit  : 0/0
 11907 ;;		Unchanged: 0/0
 11908 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11909 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11912 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11913 ;;Total ram usage:        2 bytes
 11914 ;; Hardware stack levels used: 1
 11915 ;; Hardware stack levels required when called: 5
 11916 ;; This function calls:
 11917 ;;		Nothing
 11918 ;; This function is called by:
 11919 ;;		_PWM2_16BIT_Initialize
 11920 ;; This function uses a non-reentrant model
 11921 ;;
 11922                           
 11923                           	psect	text71
 11924   0052CA                     __ptext71:
 11925                           	callstack 0
 11926   0052CA                     _PWM2_16BIT_Slice1Output1_SetInterruptHandler:
 11927                           	callstack 119
 11928   0052CA                     
 11929                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 189: void PWM2_16BIT_Slice1Output1_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm2_16bit.c: 190
      +                          : {;mcc_generated_files/pwm/src/pwm2_16bit.c: 191:     PWM2_16BIT_Slice1Output1_Interrup
      +                          tHandler = InterruptHandler;
 11930   0052CA  C503  F678         	movff	PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM2_16BIT_Slice1O
      +                          utput1_InterruptHandler
 11931   0052CE  C504  F679         	movff	PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM2_16BIT_Slice
      +                          1Output1_InterruptHandler+1
 11932   0052D2  0012               	return		;funcret
 11933   0052D4                     __end_of_PWM2_16BIT_Slice1Output1_SetInterruptHandler:
 11934                           	callstack 0
 11935                           
 11936 ;; *************** function _PWM2_16BIT_Period_SetInterruptHandler *****************
 11937 ;; Defined at:
 11938 ;;		line 199 in file "mcc_generated_files/pwm/src/pwm2_16bit.c"
 11939 ;; Parameters:    Size  Location     Type
 11940 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 11941 ;;		 -> PWM2_16BIT_Period_DefaultInterruptHandler(1), 
 11942 ;; Auto vars:     Size  Location     Type
 11943 ;;		None
 11944 ;; Return value:  Size  Location     Type
 11945 ;;                  1    wreg      void 
 11946 ;; Registers used:
 11947 ;;		wreg, status,2, status,0
 11948 ;; Tracked objects:
 11949 ;;		On entry : 0/0
 11950 ;;		On exit  : 0/0
 11951 ;;		Unchanged: 0/0
 11952 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;Total ram usage:        2 bytes
 11958 ;; Hardware stack levels used: 1
 11959 ;; Hardware stack levels required when called: 5
 11960 ;; This function calls:
 11961 ;;		Nothing
 11962 ;; This function is called by:
 11963 ;;		_PWM2_16BIT_Initialize
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           	psect	text72
 11968   0052D4                     __ptext72:
 11969                           	callstack 0
 11970   0052D4                     _PWM2_16BIT_Period_SetInterruptHandler:
 11971                           	callstack 119
 11972   0052D4                     
 11973                           ;mcc_generated_files/pwm/src/pwm2_16bit.c: 199: void PWM2_16BIT_Period_SetInterruptHandl
      +                          er(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm2_16bit.c: 200: {;mcc
      +                          _generated_files/pwm/src/pwm2_16bit.c: 201:     PWM2_16BIT_Period_InterruptHandler = Int
      +                          erruptHandler;
 11974   0052D4  C503  F674         	movff	PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler,_PWM2_16BIT_Period_Interru
      +                          ptHandler
 11975   0052D8  C504  F675         	movff	PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler+1,_PWM2_16BIT_Period_Inter
      +                          ruptHandler+1
 11976   0052DC  0012               	return		;funcret
 11977   0052DE                     __end_of_PWM2_16BIT_Period_SetInterruptHandler:
 11978                           	callstack 0
 11979                           
 11980 ;; *************** function _PWM1_16BIT_Initialize *****************
 11981 ;; Defined at:
 11982 ;;		line 50 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 11983 ;; Parameters:    Size  Location     Type
 11984 ;;		None
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;		None
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      void 
 11989 ;; Registers used:
 11990 ;;		wreg, status,2, status,0, cstack
 11991 ;; Tracked objects:
 11992 ;;		On entry : 0/0
 11993 ;;		On exit  : 0/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 11996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12000 ;;Total ram usage:        0 bytes
 12001 ;; Hardware stack levels used: 1
 12002 ;; Hardware stack levels required when called: 6
 12003 ;; This function calls:
 12004 ;;		_PWM1_16BIT_Period_SetInterruptHandler
 12005 ;;		_PWM1_16BIT_Slice1Output1_SetInterruptHandler
 12006 ;;		_PWM1_16BIT_Slice1Output2_SetInterruptHandler
 12007 ;; This function is called by:
 12008 ;;		_SYSTEM_Initialize
 12009 ;;		_main
 12010 ;; This function uses a non-reentrant model
 12011 ;;
 12012                           
 12013                           	psect	text73
 12014   004BDE                     __ptext73:
 12015                           	callstack 0
 12016   004BDE                     _PWM1_16BIT_Initialize:
 12017                           	callstack 119
 12018   004BDE                     
 12019                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 53:     PWM1ERS = 0x0;
 12020   004BDE  0E00               	movlw	0
 12021   004BE0  6E60               	movwf	96,c	;volatile
 12022                           
 12023                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 56:     PWM1CLK = 0x2;
 12024   004BE2  0E02               	movlw	2
 12025   004BE4  6E61               	movwf	97,c	;volatile
 12026                           
 12027                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 59:     PWM1LDS = 0x0;
 12028   004BE6  0E00               	movlw	0
 12029   004BE8  6E62               	movwf	98,c	;volatile
 12030   004BEA                     
 12031                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 62:     PWM1PRL = 0xFF;
 12032   004BEA  6863               	setf	99,c	;volatile
 12033                           
 12034                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 65:     PWM1PRH = 0xF9;
 12035   004BEC  0EF9               	movlw	249
 12036   004BEE  6E64               	movwf	100,c	;volatile
 12037                           
 12038                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 68:     PWM1CPRE = 0x13;
 12039   004BF0  0E13               	movlw	19
 12040   004BF2  6E65               	movwf	101,c	;volatile
 12041                           
 12042                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 71:     PWM1PIPOS = 0x0;
 12043   004BF4  0E00               	movlw	0
 12044   004BF6  6E66               	movwf	102,c	;volatile
 12045                           
 12046                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 74:     PWM1GIR = 0x0;
 12047   004BF8  0E00               	movlw	0
 12048   004BFA  6E67               	movwf	103,c	;volatile
 12049                           
 12050                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 77:     PWM1GIE = 0x0;
 12051   004BFC  0E00               	movlw	0
 12052   004BFE  6E68               	movwf	104,c	;volatile
 12053                           
 12054                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 80:     PWM1S1CFG = 0x0;
 12055   004C00  0E00               	movlw	0
 12056   004C02  6E6A               	movwf	106,c	;volatile
 12057                           
 12058                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 83:     PWM1S1P1L = 0x40;
 12059   004C04  0E40               	movlw	64
 12060   004C06  6E6B               	movwf	107,c	;volatile
 12061                           
 12062                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 86:     PWM1S1P1H = 0x6;
 12063   004C08  0E06               	movlw	6
 12064   004C0A  6E6C               	movwf	108,c	;volatile
 12065                           
 12066                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 89:     PWM1S1P2L = 0x40;
 12067   004C0C  0E40               	movlw	64
 12068   004C0E  6E6D               	movwf	109,c	;volatile
 12069                           
 12070                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 92:     PWM1S1P2H = 0x1F;
 12071   004C10  0E1F               	movlw	31
 12072   004C12  6E6E               	movwf	110,c	;volatile
 12073   004C14                     
 12074                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 95:     PIR4bits.PWM1PIF = 0;
 12075   004C14  9CB7               	bcf	183,6,c	;volatile
 12076   004C16                     
 12077                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 98:     PIR4bits.PWM1IF = 0;
 12078   004C16  9EB7               	bcf	183,7,c	;volatile
 12079   004C18                     
 12080                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 101:     PWM1GIRbits.S1P1IF = 0;
 12081   004C18  9067               	bcf	103,0,c	;volatile
 12082   004C1A                     
 12083                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 104:     PWM1GIRbits.S1P2IF = 0;
 12084   004C1A  9267               	bcf	103,1,c	;volatile
 12085   004C1C                     
 12086                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 107:     PIE4bits.PWM1IE = 0;
 12087   004C1C  9EAC               	bcf	172,7,c	;volatile
 12088   004C1E                     
 12089                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 110:     PIE4bits.PWM1PIE = 0;
 12090   004C1E  9CAC               	bcf	172,6,c	;volatile
 12091   004C20                     
 12092                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 113:     PWM1_16BIT_Slice1Output1_SetInterrup
      +                          tHandler(PWM1_16BIT_Slice1Output1_DefaultInterruptHandler);
 12093   004C20  0E00               	movlw	0
 12094   004C22  6E03               	movwf	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
 12095   004C24  0E00               	movlw	0
 12096   004C26  6E04               	movwf	(PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 12097   004C28  EC74  F029         	call	_PWM1_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
 12098   004C2C                     
 12099                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 114:     PWM1_16BIT_Slice1Output2_SetInterrup
      +                          tHandler(PWM1_16BIT_Slice1Output2_DefaultInterruptHandler);
 12100   004C2C  0E00               	movlw	0
 12101   004C2E  6E03               	movwf	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
 12102   004C30  0E00               	movlw	0
 12103   004C32  6E04               	movwf	(PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 12104   004C34  EC6F  F029         	call	_PWM1_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
 12105   004C38                     
 12106                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 115:     PWM1_16BIT_Period_SetInterruptHandle
      +                          r(PWM1_16BIT_Period_DefaultInterruptHandler);
 12107   004C38  0E00               	movlw	0
 12108   004C3A  6E03               	movwf	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
 12109   004C3C  0E00               	movlw	0
 12110   004C3E  6E04               	movwf	(PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 12111   004C40  EC79  F029         	call	_PWM1_16BIT_Period_SetInterruptHandler	;wreg free
 12112   004C44                     
 12113                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 118:     PWM1CON = 0x80;
 12114   004C44  0E80               	movlw	128
 12115   004C46  6E69               	movwf	105,c	;volatile
 12116   004C48  0012               	return		;funcret
 12117   004C4A                     __end_of_PWM1_16BIT_Initialize:
 12118                           	callstack 0
 12119                           
 12120 ;; *************** function _PWM1_16BIT_Slice1Output2_SetInterruptHandler *****************
 12121 ;; Defined at:
 12122 ;;		line 194 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 12123 ;; Parameters:    Size  Location     Type
 12124 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 12125 ;;		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
 12126 ;; Auto vars:     Size  Location     Type
 12127 ;;		None
 12128 ;; Return value:  Size  Location     Type
 12129 ;;                  1    wreg      void 
 12130 ;; Registers used:
 12131 ;;		wreg, status,2, status,0
 12132 ;; Tracked objects:
 12133 ;;		On entry : 0/0
 12134 ;;		On exit  : 0/0
 12135 ;;		Unchanged: 0/0
 12136 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12140 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12141 ;;Total ram usage:        2 bytes
 12142 ;; Hardware stack levels used: 1
 12143 ;; Hardware stack levels required when called: 5
 12144 ;; This function calls:
 12145 ;;		Nothing
 12146 ;; This function is called by:
 12147 ;;		_PWM1_16BIT_Initialize
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           	psect	text74
 12152   0052DE                     __ptext74:
 12153                           	callstack 0
 12154   0052DE                     _PWM1_16BIT_Slice1Output2_SetInterruptHandler:
 12155                           	callstack 119
 12156   0052DE                     
 12157                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 194: void PWM1_16BIT_Slice1Output2_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 195
      +                          : {;mcc_generated_files/pwm/src/pwm1_16bit.c: 196:     PWM1_16BIT_Slice1Output2_Interrup
      +                          tHandler = InterruptHandler;
 12158   0052DE  C503  F670         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput2_InterruptHandler
 12159   0052E2  C504  F671         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output2_InterruptHandler+1
 12160   0052E6  0012               	return		;funcret
 12161   0052E8                     __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler:
 12162                           	callstack 0
 12163                           
 12164 ;; *************** function _PWM1_16BIT_Slice1Output1_SetInterruptHandler *****************
 12165 ;; Defined at:
 12166 ;;		line 189 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 12167 ;; Parameters:    Size  Location     Type
 12168 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 12169 ;;		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
 12170 ;; Auto vars:     Size  Location     Type
 12171 ;;		None
 12172 ;; Return value:  Size  Location     Type
 12173 ;;                  1    wreg      void 
 12174 ;; Registers used:
 12175 ;;		wreg, status,2, status,0
 12176 ;; Tracked objects:
 12177 ;;		On entry : 0/0
 12178 ;;		On exit  : 0/0
 12179 ;;		Unchanged: 0/0
 12180 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12181 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12185 ;;Total ram usage:        2 bytes
 12186 ;; Hardware stack levels used: 1
 12187 ;; Hardware stack levels required when called: 5
 12188 ;; This function calls:
 12189 ;;		Nothing
 12190 ;; This function is called by:
 12191 ;;		_PWM1_16BIT_Initialize
 12192 ;; This function uses a non-reentrant model
 12193 ;;
 12194                           
 12195                           	psect	text75
 12196   0052E8                     __ptext75:
 12197                           	callstack 0
 12198   0052E8                     _PWM1_16BIT_Slice1Output1_SetInterruptHandler:
 12199                           	callstack 119
 12200   0052E8                     
 12201                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 189: void PWM1_16BIT_Slice1Output1_SetInterru
      +                          ptHandler(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 190
      +                          : {;mcc_generated_files/pwm/src/pwm1_16bit.c: 191:     PWM1_16BIT_Slice1Output1_Interrup
      +                          tHandler = InterruptHandler;
 12202   0052E8  C503  F672         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput1_InterruptHandler
 12203   0052EC  C504  F673         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output1_InterruptHandler+1
 12204   0052F0  0012               	return		;funcret
 12205   0052F2                     __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler:
 12206                           	callstack 0
 12207                           
 12208 ;; *************** function _PWM1_16BIT_Period_SetInterruptHandler *****************
 12209 ;; Defined at:
 12210 ;;		line 199 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 12213 ;;		 -> PWM1_16BIT_Period_DefaultInterruptHandler(1), 
 12214 ;; Auto vars:     Size  Location     Type
 12215 ;;		None
 12216 ;; Return value:  Size  Location     Type
 12217 ;;                  1    wreg      void 
 12218 ;; Registers used:
 12219 ;;		wreg, status,2, status,0
 12220 ;; Tracked objects:
 12221 ;;		On entry : 0/0
 12222 ;;		On exit  : 0/0
 12223 ;;		Unchanged: 0/0
 12224 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12229 ;;Total ram usage:        2 bytes
 12230 ;; Hardware stack levels used: 1
 12231 ;; Hardware stack levels required when called: 5
 12232 ;; This function calls:
 12233 ;;		Nothing
 12234 ;; This function is called by:
 12235 ;;		_PWM1_16BIT_Initialize
 12236 ;; This function uses a non-reentrant model
 12237 ;;
 12238                           
 12239                           	psect	text76
 12240   0052F2                     __ptext76:
 12241                           	callstack 0
 12242   0052F2                     _PWM1_16BIT_Period_SetInterruptHandler:
 12243                           	callstack 119
 12244   0052F2                     
 12245                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 199: void PWM1_16BIT_Period_SetInterruptHandl
      +                          er(void (* InterruptHandler)(void));mcc_generated_files/pwm/src/pwm1_16bit.c: 200: {;mcc
      +                          _generated_files/pwm/src/pwm1_16bit.c: 201:     PWM1_16BIT_Period_InterruptHandler = Int
      +                          erruptHandler;
 12246   0052F2  C503  F66E         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Period_Interru
      +                          ptHandler
 12247   0052F6  C504  F66F         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Period_Inter
      +                          ruptHandler+1
 12248   0052FA  0012               	return		;funcret
 12249   0052FC                     __end_of_PWM1_16BIT_Period_SetInterruptHandler:
 12250                           	callstack 0
 12251                           
 12252 ;; *************** function _PIN_MANAGER_Initialize *****************
 12253 ;; Defined at:
 12254 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
 12255 ;; Parameters:    Size  Location     Type
 12256 ;;		None
 12257 ;; Auto vars:     Size  Location     Type
 12258 ;;		None
 12259 ;; Return value:  Size  Location     Type
 12260 ;;                  1    wreg      void 
 12261 ;; Registers used:
 12262 ;;		wreg, status,2
 12263 ;; Tracked objects:
 12264 ;;		On entry : 0/0
 12265 ;;		On exit  : 0/0
 12266 ;;		Unchanged: 0/0
 12267 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12272 ;;Total ram usage:        0 bytes
 12273 ;; Hardware stack levels used: 1
 12274 ;; Hardware stack levels required when called: 5
 12275 ;; This function calls:
 12276 ;;		Nothing
 12277 ;; This function is called by:
 12278 ;;		_SYSTEM_Initialize
 12279 ;; This function uses a non-reentrant model
 12280 ;;
 12281                           
 12282                           	psect	text77
 12283   004872                     __ptext77:
 12284                           	callstack 0
 12285   004872                     _PIN_MANAGER_Initialize:
 12286                           	callstack 120
 12287   004872                     
 12288                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x0;
 12289   004872  0E00               	movlw	0
 12290   004874  6EBE               	movwf	190,c	;volatile
 12291                           
 12292                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
 12293   004876  0E00               	movlw	0
 12294   004878  6EBF               	movwf	191,c	;volatile
 12295                           
 12296                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x0;
 12297   00487A  0E00               	movlw	0
 12298   00487C  6EC0               	movwf	192,c	;volatile
 12299                           
 12300                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x3F;
 12301   00487E  0E3F               	movlw	63
 12302   004880  6EC6               	movwf	198,c	;volatile
 12303                           
 12304                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0x20;
 12305   004882  0E20               	movlw	32
 12306   004884  6EC7               	movwf	199,c	;volatile
 12307                           
 12308                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x9;
 12309   004886  0E09               	movlw	9
 12310   004888  6EC8               	movwf	200,c	;volatile
 12311                           
 12312                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x37;
 12313   00488A  0E37               	movlw	55
 12314   00488C  0104               	movlb	4	; () banked
 12315   00488E  6F00               	movwf	0,b	;volatile
 12316                           
 12317                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0x0;
 12318   004890  0E00               	movlw	0
 12319   004892  6F08               	movwf	8,b	;volatile
 12320                           
 12321                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0x8;
 12322   004894  0E08               	movlw	8
 12323   004896  6F10               	movwf	16,b	;volatile
 12324                           
 12325                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
 12326   004898  0E00               	movlw	0
 12327   00489A  6F01               	movwf	1,b	;volatile
 12328                           
 12329                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
 12330   00489C  0E00               	movlw	0
 12331   00489E  6F09               	movwf	9,b	;volatile
 12332                           
 12333                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x1;
 12334   0048A0  0E01               	movlw	1
 12335   0048A2  6F11               	movwf	17,b	;volatile
 12336                           
 12337                           ;mcc_generated_files/system/src/pins.c: 71:     ODCONA = 0x0;
 12338   0048A4  0E00               	movlw	0
 12339   0048A6  6F02               	movwf	2,b	;volatile
 12340                           
 12341                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONB = 0x0;
 12342   0048A8  0E00               	movlw	0
 12343   0048AA  6F0A               	movwf	10,b	;volatile
 12344                           
 12345                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONC = 0x0;
 12346   0048AC  0E00               	movlw	0
 12347   0048AE  6F12               	movwf	18,b	;volatile
 12348                           
 12349                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
 12350   0048B0  0E37               	movlw	55
 12351   0048B2  6F03               	movwf	3,b	;volatile
 12352                           
 12353                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
 12354   0048B4  0EF0               	movlw	240
 12355   0048B6  6F0B               	movwf	11,b	;volatile
 12356   0048B8                     
 12357                           ; BSR set to: 4
 12358                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
 12359   0048B8  6913               	setf	19,b	;volatile
 12360                           
 12361                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
 12362   0048BA  0E3F               	movlw	63
 12363   0048BC  6F04               	movwf	4,b	;volatile
 12364                           
 12365                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
 12366   0048BE  0EF0               	movlw	240
 12367   0048C0  6F0C               	movwf	12,b	;volatile
 12368   0048C2                     
 12369                           ; BSR set to: 4
 12370                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
 12371   0048C2  6914               	setf	20,b	;volatile
 12372                           
 12373                           ;mcc_generated_files/system/src/pins.c: 92:     RB4I2C = 0x0;
 12374   0048C4  0E00               	movlw	0
 12375   0048C6  0102               	movlb	2	; () banked
 12376   0048C8  6F87               	movwf	135,b	;volatile
 12377                           
 12378                           ;mcc_generated_files/system/src/pins.c: 93:     RB6I2C = 0x0;
 12379   0048CA  0E00               	movlw	0
 12380   0048CC  6F86               	movwf	134,b	;volatile
 12381                           
 12382                           ;mcc_generated_files/system/src/pins.c: 97:     U1RXPPS = 0xD;
 12383   0048CE  0E0D               	movlw	13
 12384   0048D0  6F72               	movwf	114,b	;volatile
 12385                           
 12386                           ;mcc_generated_files/system/src/pins.c: 98:     INT0PPS = 0x10;
 12387   0048D2  0E10               	movlw	16
 12388   0048D4  6F3E               	movwf	62,b	;volatile
 12389                           
 12390                           ;mcc_generated_files/system/src/pins.c: 99:     RB7PPS = 0x10;
 12391   0048D6  0E10               	movlw	16
 12392   0048D8  6F10               	movwf	16,b	;volatile
 12393                           
 12394                           ;mcc_generated_files/system/src/pins.c: 100:     RC6PPS = 0x0E;
 12395   0048DA  0E0E               	movlw	14
 12396   0048DC  6F17               	movwf	23,b	;volatile
 12397                           
 12398                           ;mcc_generated_files/system/src/pins.c: 101:     RC7PPS = 0x0F;
 12399   0048DE  0E0F               	movlw	15
 12400   0048E0  6F18               	movwf	24,b	;volatile
 12401                           
 12402                           ;mcc_generated_files/system/src/pins.c: 102:     RC5PPS = 0x0C;
 12403   0048E2  0E0C               	movlw	12
 12404   0048E4  6F16               	movwf	22,b	;volatile
 12405                           
 12406                           ;mcc_generated_files/system/src/pins.c: 103:     RC4PPS = 0x0D;
 12407   0048E6  0E0D               	movlw	13
 12408   0048E8  6F15               	movwf	21,b	;volatile
 12409                           
 12410                           ;mcc_generated_files/system/src/pins.c: 104:     RB4PPS = 0x0A;
 12411   0048EA  0E0A               	movlw	10
 12412   0048EC  6F0D               	movwf	13,b	;volatile
 12413                           
 12414                           ;mcc_generated_files/system/src/pins.c: 105:     RB6PPS = 0x0B;
 12415   0048EE  0E0B               	movlw	11
 12416   0048F0  6F0F               	movwf	15,b	;volatile
 12417                           
 12418                           ;mcc_generated_files/system/src/pins.c: 110:     IOCAP = 0x0;
 12419   0048F2  0E00               	movlw	0
 12420   0048F4  0104               	movlb	4	; () banked
 12421   0048F6  6F05               	movwf	5,b	;volatile
 12422                           
 12423                           ;mcc_generated_files/system/src/pins.c: 111:     IOCAN = 0x0;
 12424   0048F8  0E00               	movlw	0
 12425   0048FA  6F06               	movwf	6,b	;volatile
 12426                           
 12427                           ;mcc_generated_files/system/src/pins.c: 112:     IOCAF = 0x0;
 12428   0048FC  0E00               	movlw	0
 12429   0048FE  6F07               	movwf	7,b	;volatile
 12430                           
 12431                           ;mcc_generated_files/system/src/pins.c: 113:     IOCBP = 0x0;
 12432   004900  0E00               	movlw	0
 12433   004902  6F0D               	movwf	13,b	;volatile
 12434                           
 12435                           ;mcc_generated_files/system/src/pins.c: 114:     IOCBN = 0x0;
 12436   004904  0E00               	movlw	0
 12437   004906  6F0E               	movwf	14,b	;volatile
 12438                           
 12439                           ;mcc_generated_files/system/src/pins.c: 115:     IOCBF = 0x0;
 12440   004908  0E00               	movlw	0
 12441   00490A  6F0F               	movwf	15,b	;volatile
 12442                           
 12443                           ;mcc_generated_files/system/src/pins.c: 116:     IOCCP = 0x0;
 12444   00490C  0E00               	movlw	0
 12445   00490E  6F15               	movwf	21,b	;volatile
 12446                           
 12447                           ;mcc_generated_files/system/src/pins.c: 117:     IOCCN = 0x0;
 12448   004910  0E00               	movlw	0
 12449   004912  6F16               	movwf	22,b	;volatile
 12450                           
 12451                           ;mcc_generated_files/system/src/pins.c: 118:     IOCCF = 0x0;
 12452   004914  0E00               	movlw	0
 12453   004916  6F17               	movwf	23,b	;volatile
 12454   004918                     
 12455                           ; BSR set to: 4
 12456   004918  0012               	return		;funcret
 12457   00491A                     __end_of_PIN_MANAGER_Initialize:
 12458                           	callstack 0
 12459                           
 12460 ;; *************** function _INTERRUPT_Initialize *****************
 12461 ;; Defined at:
 12462 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
 12463 ;; Parameters:    Size  Location     Type
 12464 ;;		None
 12465 ;; Auto vars:     Size  Location     Type
 12466 ;;		None
 12467 ;; Return value:  Size  Location     Type
 12468 ;;                  1    wreg      void 
 12469 ;; Registers used:
 12470 ;;		wreg, status,2, status,0, cstack
 12471 ;; Tracked objects:
 12472 ;;		On entry : 0/0
 12473 ;;		On exit  : 0/0
 12474 ;;		Unchanged: 0/0
 12475 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12480 ;;Total ram usage:        0 bytes
 12481 ;; Hardware stack levels used: 1
 12482 ;; Hardware stack levels required when called: 6
 12483 ;; This function calls:
 12484 ;;		_INT0_SetInterruptHandler
 12485 ;;		_INT1_SetInterruptHandler
 12486 ;;		_INT2_SetInterruptHandler
 12487 ;; This function is called by:
 12488 ;;		_SYSTEM_Initialize
 12489 ;; This function uses a non-reentrant model
 12490 ;;
 12491                           
 12492                           	psect	text78
 12493   004F7A                     __ptext78:
 12494                           	callstack 0
 12495   004F7A                     _INTERRUPT_Initialize:
 12496                           	callstack 119
 12497   004F7A                     
 12498                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
 12499   004F7A  9AD6               	bcf	214,5,c	;volatile
 12500                           
 12501                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
 12502   004F7C  90B4               	bcf	180,0,c	;volatile
 12503                           
 12504                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
 12505   004F7E  80D6               	bsf	214,0,c	;volatile
 12506   004F80                     
 12507                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
 12508   004F80  0E50               	movlw	low _INT0_DefaultInterruptHandler
 12509   004F82  6E03               	movwf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
 12510   004F84  0E53               	movlw	high _INT0_DefaultInterruptHandler
 12511   004F86  6E04               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 12512   004F88  EC88  F029         	call	_INT0_SetInterruptHandler	;wreg free
 12513   004F8C                     
 12514                           ;mcc_generated_files/system/src/interrupt.c: 53:     (PIE1bits.INT0IE = 1);
 12515   004F8C  80A9               	bsf	169,0,c	;volatile
 12516   004F8E                     
 12517                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
 12518   004F8E  90B9               	bcf	185,0,c	;volatile
 12519   004F90                     
 12520                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
 12521   004F90  82D6               	bsf	214,1,c	;volatile
 12522                           
 12523                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
 12524   004F92  0E00               	movlw	0
 12525   004F94  6E03               	movwf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
 12526   004F96  0E00               	movlw	0
 12527   004F98  6E04               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 12528   004F9A  EC83  F029         	call	_INT1_SetInterruptHandler	;wreg free
 12529   004F9E                     
 12530                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
 12531   004F9E  90BD               	bcf	189,0,c	;volatile
 12532   004FA0                     
 12533                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
 12534   004FA0  84D6               	bsf	214,2,c	;volatile
 12535                           
 12536                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
 12537   004FA2  0E00               	movlw	0
 12538   004FA4  6E03               	movwf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
 12539   004FA6  0E00               	movlw	0
 12540   004FA8  6E04               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
 12541   004FAA  EC7E  F029         	call	_INT2_SetInterruptHandler	;wreg free
 12542   004FAE  0012               	return		;funcret
 12543   004FB0                     __end_of_INTERRUPT_Initialize:
 12544                           	callstack 0
 12545                           
 12546 ;; *************** function _INT2_SetInterruptHandler *****************
 12547 ;; Defined at:
 12548 ;;		line 163 in file "mcc_generated_files/system/src/interrupt.c"
 12549 ;; Parameters:    Size  Location     Type
 12550 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 12551 ;;		 -> INT2_DefaultInterruptHandler(1), 
 12552 ;; Auto vars:     Size  Location     Type
 12553 ;;		None
 12554 ;; Return value:  Size  Location     Type
 12555 ;;                  1    wreg      void 
 12556 ;; Registers used:
 12557 ;;		wreg, status,2, status,0
 12558 ;; Tracked objects:
 12559 ;;		On entry : 0/0
 12560 ;;		On exit  : 0/0
 12561 ;;		Unchanged: 0/0
 12562 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12567 ;;Total ram usage:        2 bytes
 12568 ;; Hardware stack levels used: 1
 12569 ;; Hardware stack levels required when called: 5
 12570 ;; This function calls:
 12571 ;;		Nothing
 12572 ;; This function is called by:
 12573 ;;		_INTERRUPT_Initialize
 12574 ;; This function uses a non-reentrant model
 12575 ;;
 12576                           
 12577                           	psect	text79
 12578   0052FC                     __ptext79:
 12579                           	callstack 0
 12580   0052FC                     _INT2_SetInterruptHandler:
 12581                           	callstack 119
 12582   0052FC                     
 12583                           ;mcc_generated_files/system/src/interrupt.c: 164:     INT2_InterruptHandler = InterruptH
      +                          andler;
 12584   0052FC  C503  F5E7         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 12585   005300  C504  F5E8         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 12586   005304  0012               	return		;funcret
 12587   005306                     __end_of_INT2_SetInterruptHandler:
 12588                           	callstack 0
 12589                           
 12590 ;; *************** function _INT1_SetInterruptHandler *****************
 12591 ;; Defined at:
 12592 ;;		line 137 in file "mcc_generated_files/system/src/interrupt.c"
 12593 ;; Parameters:    Size  Location     Type
 12594 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 12595 ;;		 -> INT1_DefaultInterruptHandler(1), 
 12596 ;; Auto vars:     Size  Location     Type
 12597 ;;		None
 12598 ;; Return value:  Size  Location     Type
 12599 ;;                  1    wreg      void 
 12600 ;; Registers used:
 12601 ;;		wreg, status,2, status,0
 12602 ;; Tracked objects:
 12603 ;;		On entry : 0/0
 12604 ;;		On exit  : 0/0
 12605 ;;		Unchanged: 0/0
 12606 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12610 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12611 ;;Total ram usage:        2 bytes
 12612 ;; Hardware stack levels used: 1
 12613 ;; Hardware stack levels required when called: 5
 12614 ;; This function calls:
 12615 ;;		Nothing
 12616 ;; This function is called by:
 12617 ;;		_INTERRUPT_Initialize
 12618 ;; This function uses a non-reentrant model
 12619 ;;
 12620                           
 12621                           	psect	text80
 12622   005306                     __ptext80:
 12623                           	callstack 0
 12624   005306                     _INT1_SetInterruptHandler:
 12625                           	callstack 119
 12626   005306                     
 12627                           ;mcc_generated_files/system/src/interrupt.c: 138:     INT1_InterruptHandler = InterruptH
      +                          andler;
 12628   005306  C503  F5E9         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 12629   00530A  C504  F5EA         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 12630   00530E  0012               	return		;funcret
 12631   005310                     __end_of_INT1_SetInterruptHandler:
 12632                           	callstack 0
 12633                           
 12634 ;; *************** function _INT0_SetInterruptHandler *****************
 12635 ;; Defined at:
 12636 ;;		line 111 in file "mcc_generated_files/system/src/interrupt.c"
 12637 ;; Parameters:    Size  Location     Type
 12638 ;;  InterruptHan    2    2[COMRAM] PTR FTN()void 
 12639 ;;		 -> ISR_Boton(1), INT0_DefaultInterruptHandler(1), 
 12640 ;; Auto vars:     Size  Location     Type
 12641 ;;		None
 12642 ;; Return value:  Size  Location     Type
 12643 ;;                  1    wreg      void 
 12644 ;; Registers used:
 12645 ;;		wreg, status,2, status,0
 12646 ;; Tracked objects:
 12647 ;;		On entry : 0/0
 12648 ;;		On exit  : 0/0
 12649 ;;		Unchanged: 0/0
 12650 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12655 ;;Total ram usage:        2 bytes
 12656 ;; Hardware stack levels used: 1
 12657 ;; Hardware stack levels required when called: 5
 12658 ;; This function calls:
 12659 ;;		Nothing
 12660 ;; This function is called by:
 12661 ;;		_INTERRUPT_Initialize
 12662 ;;		_main
 12663 ;; This function uses a non-reentrant model
 12664 ;;
 12665                           
 12666                           	psect	text81
 12667   005310                     __ptext81:
 12668                           	callstack 0
 12669   005310                     _INT0_SetInterruptHandler:
 12670                           	callstack 119
 12671   005310                     
 12672                           ;mcc_generated_files/system/src/interrupt.c: 112:     INT0_InterruptHandler = InterruptH
      +                          andler;
 12673   005310  C503  F5EB         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
 12674   005314  C504  F5EC         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
 12675   005318  0012               	return		;funcret
 12676   00531A                     __end_of_INT0_SetInterruptHandler:
 12677                           	callstack 0
 12678                           
 12679 ;; *************** function _CLOCK_Initialize *****************
 12680 ;; Defined at:
 12681 ;;		line 39 in file "mcc_generated_files/system/src/clock.c"
 12682 ;; Parameters:    Size  Location     Type
 12683 ;;		None
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;		None
 12686 ;; Return value:  Size  Location     Type
 12687 ;;                  1    wreg      void 
 12688 ;; Registers used:
 12689 ;;		wreg, status,2
 12690 ;; Tracked objects:
 12691 ;;		On entry : 0/0
 12692 ;;		On exit  : 0/0
 12693 ;;		Unchanged: 0/0
 12694 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12699 ;;Total ram usage:        0 bytes
 12700 ;; Hardware stack levels used: 1
 12701 ;; Hardware stack levels required when called: 5
 12702 ;; This function calls:
 12703 ;;		Nothing
 12704 ;; This function is called by:
 12705 ;;		_SYSTEM_Initialize
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709                           	psect	text82
 12710   00521E                     __ptext82:
 12711                           	callstack 0
 12712   00521E                     _CLOCK_Initialize:
 12713                           	callstack 120
 12714   00521E                     
 12715                           ;mcc_generated_files/system/src/clock.c: 42:     OSCCON1 = (0 << 0x0)
 12716   00521E  0E60               	movlw	96
 12717   005220  0100               	movlb	0	; () banked
 12718   005222  6FAD               	movwf	173,b	;volatile
 12719                           
 12720                           ;mcc_generated_files/system/src/clock.c: 44:     OSCCON3 = (0 << 0x6)
 12721   005224  0E00               	movlw	0
 12722   005226  6FAF               	movwf	175,b	;volatile
 12723                           
 12724                           ;mcc_generated_files/system/src/clock.c: 46:     OSCEN = (0 << 0x7)
 12725   005228  0E00               	movlw	0
 12726   00522A  6FB3               	movwf	179,b	;volatile
 12727                           
 12728                           ;mcc_generated_files/system/src/clock.c: 53:     OSCFRQ = (8 << 0x0);
 12729   00522C  0E08               	movlw	8
 12730   00522E  6FB1               	movwf	177,b	;volatile
 12731                           
 12732                           ;mcc_generated_files/system/src/clock.c: 54:     OSCTUNE = (0 << 0x0);
 12733   005230  0E00               	movlw	0
 12734   005232  6FB0               	movwf	176,b	;volatile
 12735                           
 12736                           ;mcc_generated_files/system/src/clock.c: 55:     ACTCON = (0 << 0x7)
 12737   005234  0E00               	movlw	0
 12738   005236  6FAC               	movwf	172,b	;volatile
 12739   005238                     
 12740                           ; BSR set to: 0
 12741   005238  0012               	return		;funcret
 12742   00523A                     __end_of_CLOCK_Initialize:
 12743                           	callstack 0
 12744                           
 12745 ;; *************** function _INTERRUPT_InterruptManager *****************
 12746 ;; Defined at:
 12747 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;		None
 12750 ;; Auto vars:     Size  Location     Type
 12751 ;;		None
 12752 ;; Return value:  Size  Location     Type
 12753 ;;                  1    wreg      void 
 12754 ;; Registers used:
 12755 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12756 ;; Tracked objects:
 12757 ;;		On entry : 0/0
 12758 ;;		On exit  : 0/0
 12759 ;;		Unchanged: 0/0
 12760 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12763 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12765 ;;Total ram usage:        2 bytes
 12766 ;; Hardware stack levels used: 1
 12767 ;; Hardware stack levels required when called: 4
 12768 ;; This function calls:
 12769 ;;		_INT0_ISR
 12770 ;; This function is called by:
 12771 ;;		Interrupt level 2
 12772 ;; This function uses a non-reentrant model
 12773 ;;
 12774                           
 12775                           	psect	text83
 12776   005016                     __ptext83:
 12777                           	callstack 0
 12778   005016                     _INTERRUPT_InterruptManager:
 12779                           	callstack 109
 12780                           
 12781                           ; BSR set to: 0
 12782                           ;incstack = 0
 12783   005016  C4FA F501          	movff	pclath,??_INTERRUPT_InterruptManager
 12784   00501A  C4FB F502          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 12785   00501E                     
 12786                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE1bits.INT0IE == 1 && PIR1bits
      +                          .INT0IF == 1)
 12787   00501E  A0A9               	btfss	169,0,c	;volatile
 12788   005020  EF14  F028         	goto	i2u596_41
 12789   005024  EF16  F028         	goto	i2u596_40
 12790   005028                     i2u596_41:
 12791   005028  EF1F  F028         	goto	i2l500
 12792   00502C                     i2u596_40:
 12793   00502C  A0B4               	btfss	180,0,c	;volatile
 12794   00502E  EF1B  F028         	goto	i2u597_41
 12795   005032  EF1D  F028         	goto	i2u597_40
 12796   005036                     i2u597_41:
 12797   005036  EF1F  F028         	goto	i2l500
 12798   00503A                     i2u597_40:
 12799   00503A                     
 12800                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         INT0_ISR();
 12801   00503A  EC91  F029         	call	_INT0_ISR	;wreg free
 12802   00503E                     i2l500:
 12803   00503E  C502  F4FB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 12804   005042  C501  F4FA         	movff	??_INTERRUPT_InterruptManager,pclath
 12805   005046  0011               	retfie		f
 12806   005048                     __end_of_INTERRUPT_InterruptManager:
 12807                           	callstack 0
 12808                           
 12809 ;; *************** function _INT0_ISR *****************
 12810 ;; Defined at:
 12811 ;;		line 93 in file "mcc_generated_files/system/src/interrupt.c"
 12812 ;; Parameters:    Size  Location     Type
 12813 ;;		None
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;		None
 12816 ;; Return value:  Size  Location     Type
 12817 ;;                  1    wreg      void 
 12818 ;; Registers used:
 12819 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12820 ;; Tracked objects:
 12821 ;;		On entry : 0/0
 12822 ;;		On exit  : 0/0
 12823 ;;		Unchanged: 0/0
 12824 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12829 ;;Total ram usage:        0 bytes
 12830 ;; Hardware stack levels used: 1
 12831 ;; Hardware stack levels required when called: 3
 12832 ;; This function calls:
 12833 ;;		_INT0_CallBack
 12834 ;; This function is called by:
 12835 ;;		_INTERRUPT_InterruptManager
 12836 ;; This function uses a non-reentrant model
 12837 ;;
 12838                           
 12839                           	psect	text84
 12840   005322                     __ptext84:
 12841                           	callstack 0
 12842   005322                     _INT0_ISR:
 12843                           	callstack 109
 12844   005322                     
 12845                           ;mcc_generated_files/system/src/interrupt.c: 95:     (PIR1bits.INT0IF = 0);
 12846   005322  90B4               	bcf	180,0,c	;volatile
 12847   005324                     
 12848                           ;mcc_generated_files/system/src/interrupt.c: 98:     INT0_CallBack();
 12849   005324  EC24  F028         	call	_INT0_CallBack	;wreg free
 12850   005328  0012               	return		;funcret
 12851   00532A                     __end_of_INT0_ISR:
 12852                           	callstack 0
 12853                           
 12854 ;; *************** function _INT0_CallBack *****************
 12855 ;; Defined at:
 12856 ;;		line 102 in file "mcc_generated_files/system/src/interrupt.c"
 12857 ;; Parameters:    Size  Location     Type
 12858 ;;		None
 12859 ;; Auto vars:     Size  Location     Type
 12860 ;;		None
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  1    wreg      void 
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12874 ;;Total ram usage:        0 bytes
 12875 ;; Hardware stack levels used: 1
 12876 ;; Hardware stack levels required when called: 2
 12877 ;; This function calls:
 12878 ;;		NULL
 12879 ;;		_INT0_DefaultInterruptHandler
 12880 ;;		_ISR_Boton
 12881 ;; This function is called by:
 12882 ;;		_INT0_ISR
 12883 ;; This function uses a non-reentrant model
 12884 ;;
 12885                           
 12886                           	psect	text85
 12887   005048                     __ptext85:
 12888                           	callstack 0
 12889   005048                     _INT0_CallBack:
 12890                           	callstack 109
 12891   005048                     
 12892                           ;mcc_generated_files/system/src/interrupt.c: 105:     if(INT0_InterruptHandler)
 12893   005048  0105               	movlb	5	; () banked
 12894   00504A  51EB               	movf	_INT0_InterruptHandler& (0+255),w,b
 12895   00504C  11EC               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 12896   00504E  B4D8               	btfsc	status,2,c
 12897   005050  EF2C  F028         	goto	i2u547_41
 12898   005054  EF2E  F028         	goto	i2u547_40
 12899   005058                     i2u547_41:
 12900   005058  EF3A  F028         	goto	i2l507
 12901   00505C                     i2u547_40:
 12902   00505C                     
 12903                           ; BSR set to: 5
 12904                           ;mcc_generated_files/system/src/interrupt.c: 106:     {;mcc_generated_files/system/src/i
      +                          nterrupt.c: 107:         INT0_InterruptHandler();
 12905   00505C  D802               	call	i2u548_48
 12906   00505E  EF3A  F028         	goto	i2u548_49
 12907   005062                     i2u548_48:
 12908   005062  0005               	push	
 12909   005064  6EFA               	movwf	pclath,c
 12910   005066  51EB               	movf	_INT0_InterruptHandler& (0+255),w,b
 12911   005068  6EFD               	movwf	tosl,c
 12912   00506A  51EC               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 12913   00506C  6EFE               	movwf	tosh,c
 12914   00506E  6AFF               	clrf	tosu,c
 12915   005070  50FA               	movf	pclath,w,c
 12916   005072  0012               	return		;indir
 12917   005074                     i2u548_49:
 12918   005074                     i2l507:
 12919   005074  0012               	return		;funcret
 12920   005076                     __end_of_INT0_CallBack:
 12921                           	callstack 0
 12922                           
 12923 ;; *************** function _INT0_DefaultInterruptHandler *****************
 12924 ;; Defined at:
 12925 ;;		line 115 in file "mcc_generated_files/system/src/interrupt.c"
 12926 ;; Parameters:    Size  Location     Type
 12927 ;;		None
 12928 ;; Auto vars:     Size  Location     Type
 12929 ;;		None
 12930 ;; Return value:  Size  Location     Type
 12931 ;;                  1    wreg      void 
 12932 ;; Registers used:
 12933 ;;		None
 12934 ;; Tracked objects:
 12935 ;;		On entry : 0/0
 12936 ;;		On exit  : 0/0
 12937 ;;		Unchanged: 0/0
 12938 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12943 ;;Total ram usage:        0 bytes
 12944 ;; Hardware stack levels used: 1
 12945 ;; This function calls:
 12946 ;;		Nothing
 12947 ;; This function is called by:
 12948 ;;		_INTERRUPT_Initialize
 12949 ;;		_INT0_CallBack
 12950 ;; This function uses a non-reentrant model
 12951 ;;
 12952                           
 12953                           	psect	text86
 12954   005350                     __ptext86:
 12955                           	callstack 0
 12956   005350                     _INT0_DefaultInterruptHandler:
 12957                           	callstack 110
 12958   005350  0012               	return		;funcret
 12959   005352                     __end_of_INT0_DefaultInterruptHandler:
 12960                           	callstack 0
 12961                           
 12962 ;; *************** function _ISR_Boton *****************
 12963 ;; Defined at:
 12964 ;;		line 182 in file "main.c"
 12965 ;; Parameters:    Size  Location     Type
 12966 ;;		None
 12967 ;; Auto vars:     Size  Location     Type
 12968 ;;		None
 12969 ;; Return value:  Size  Location     Type
 12970 ;;                  1    wreg      void 
 12971 ;; Registers used:
 12972 ;;		wreg, status,2, cstack
 12973 ;; Tracked objects:
 12974 ;;		On entry : 0/0
 12975 ;;		On exit  : 0/0
 12976 ;;		Unchanged: 0/0
 12977 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 12978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12982 ;;Total ram usage:        0 bytes
 12983 ;; Hardware stack levels used: 1
 12984 ;; Hardware stack levels required when called: 1
 12985 ;; This function calls:
 12986 ;;		_detenerMovimiento
 12987 ;; This function is called by:
 12988 ;;		_main
 12989 ;;		_INT0_CallBack
 12990 ;; This function uses a non-reentrant model
 12991 ;;
 12992                           
 12993                           	psect	text87
 12994   00533E                     __ptext87:
 12995                           	callstack 0
 12996   00533E                     _ISR_Boton:
 12997                           	callstack 109
 12998   00533E                     
 12999                           ;main.c: 184:     detenerMovimiento();
 13000   00533E  EC95  F029         	call	_detenerMovimiento	;wreg free
 13001   005342  0012               	return		;funcret
 13002   005344                     __end_of_ISR_Boton:
 13003                           	callstack 0
 13004                           
 13005 ;; *************** function _detenerMovimiento *****************
 13006 ;; Defined at:
 13007 ;;		line 17 in file "C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;		None
 13010 ;; Auto vars:     Size  Location     Type
 13011 ;;		None
 13012 ;; Return value:  Size  Location     Type
 13013 ;;                  1    wreg      void 
 13014 ;; Registers used:
 13015 ;;		wreg, status,2
 13016 ;; Tracked objects:
 13017 ;;		On entry : 0/0
 13018 ;;		On exit  : 0/0
 13019 ;;		Unchanged: 0/0
 13020 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
 13021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13025 ;;Total ram usage:        0 bytes
 13026 ;; Hardware stack levels used: 1
 13027 ;; This function calls:
 13028 ;;		Nothing
 13029 ;; This function is called by:
 13030 ;;		_ISR_Boton
 13031 ;; This function uses a non-reentrant model
 13032 ;;
 13033                           
 13034                           	psect	text88
 13035   00532A                     __ptext88:
 13036                           	callstack 0
 13037   00532A                     _detenerMovimiento:
 13038                           	callstack 109
 13039   00532A                     
 13040                           ;C:/Users/jhon-/MPLABXProjects/robot.X/ServoControl.c: 18:     detener = 1;
 13041   00532A  0E01               	movlw	1
 13042   00532C  0105               	movlb	5	; () banked
 13043   00532E  6FEE               	movwf	_detener& (0+255),b	;volatile
 13044   005330                     
 13045                           ; BSR set to: 5
 13046   005330  0012               	return		;funcret
 13047   005332                     __end_of_detenerMovimiento:
 13048                           	callstack 0
 13049                           
 13050                           ;
 13051                           ; H/W Interrupt Vector Table @ 0x8
 13052                           ;
 13053                           
 13054                           	psect	ivt0x8
 13055   000008                     __pivt0x8:
 13056                           	callstack 0
 13057   000008                     ivt0x8_base:
 13058                           	callstack 0
 13059                           
 13060                           ; high-priority vector
 13061   000008  EF0B  F028         	goto	_INTERRUPT_InterruptManager
 13062   000018                     	org	16
 13063                           
 13064                           ; low-priority vector
 13065   000018  00FF               	reset	
 13066                           
 13067                           	psect	rparam
 13068   000000                     
 13069                           	psect	config
 13070                           
 13071                           ;Config register CONFIG1 @ 0x300000
 13072                           ;	External Oscillator Selection
 13073                           ;	FEXTOSC = OFF, Oscillator not enabled
 13074                           ;	Reset Oscillator Selection
 13075                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
 13076   300000                     	org	3145728
 13077   300000  8C                 	db	140
 13078                           
 13079                           ;Config register CONFIG2 @ 0x300001
 13080                           ;	Clock out Enable bit
 13081                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 13082                           ;	PRLOCKED One-Way Set Enable bit
 13083                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
 13084                           ;	Clock Switch Enable bit
 13085                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13086                           ;	Fail-Safe Clock Monitor Enable bit
 13087                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 13088                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
 13089                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
 13090                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
 13091                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
 13092   300001                     	org	3145729
 13093   300001  FF                 	db	255
 13094                           
 13095                           ;Config register CONFIG3 @ 0x300002
 13096                           ;	MCLR Enable bit
 13097                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 13098                           ;	Power-up timer selection bits
 13099                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 13100                           ;	Multi-vector enable bit
 13101                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
 13102                           ;	IVTLOCK bit One-way set enable bit
 13103                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
 13104                           ;	Low Power BOR Enable bit
 13105                           ;	LPBOREN = OFF, Low-Power BOR disabled
 13106                           ;	Brown-out Reset Enable bits
 13107                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 13108   300002                     	org	3145730
 13109   300002  F7                 	db	247
 13110                           
 13111                           ;Config register CONFIG4 @ 0x300003
 13112                           ;	Brown-out Reset Voltage Selection bits
 13113                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
 13114                           ;	ZCD Disable bit
 13115                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
 13116                           ;	PPSLOCK bit One-Way Set Enable bit
 13117                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
 13118                           ;	Stack Full/Underflow Reset Enable bit
 13119                           ;	STVREN = ON, Stack full/underflow will cause Reset
 13120                           ;	Low Voltage Programming Enable bit
 13121                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 13122                           ;	Extended Instruction Set Enable bit
 13123                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 13124   300003                     	org	3145731
 13125   300003  FF                 	db	255
 13126                           
 13127                           ;Config register CONFIG5 @ 0x300004
 13128                           ;	WDT Period selection bits
 13129                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 13130                           ;	WDT operating mode
 13131                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 13132   300004                     	org	3145732
 13133   300004  9F                 	db	159
 13134                           
 13135                           ;Config register CONFIG6 @ 0x300005
 13136                           ;	WDT Window Select bits
 13137                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 13138                           ;	WDT input clock selector
 13139                           ;	WDTCCS = SC, Software Control
 13140   300005                     	org	3145733
 13141   300005  FF                 	db	255
 13142                           
 13143                           ;Config register CONFIG7 @ 0x300006
 13144                           ;	Boot Block Size selection bits
 13145                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 13146                           ;	Boot Block enable bit
 13147                           ;	BBEN = OFF, Boot block disabled
 13148                           ;	Storage Area Flash enable bit
 13149                           ;	SAFEN = OFF, SAF disabled
 13150                           ;	Background Debugger
 13151                           ;	DEBUG = 0x1, unprogrammed default
 13152   300006                     	org	3145734
 13153   300006  FF                 	db	255
 13154                           
 13155                           ;Config register CONFIG8 @ 0x300007
 13156                           ;	Boot Block Write Protection bit
 13157                           ;	WRTB = OFF, Boot Block not Write protected
 13158                           ;	Configuration Register Write Protection bit
 13159                           ;	WRTC = OFF, Configuration registers not Write protected
 13160                           ;	Data EEPROM Write Protection bit
 13161                           ;	WRTD = OFF, Data EEPROM not Write protected
 13162                           ;	SAF Write protection bit
 13163                           ;	WRTSAF = OFF, SAF not Write Protected
 13164                           ;	Application Block write protection bit
 13165                           ;	WRTAPP = OFF, Application Block not write protected
 13166   300007                     	org	3145735
 13167   300007  FF                 	db	255
 13168                           
 13169                           ;Config register CONFIG9 @ 0x300008
 13170                           ;	PFM and Data EEPROM Code Protection bit
 13171                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 13172   300008                     	org	3145736
 13173   300008  FF                 	db	255
 13174                           tosu	equ	0x4FF
 13175                           tosh	equ	0x4FE
 13176                           tosl	equ	0x4FD
 13177                           stkptr	equ	0x4FC
 13178                           pclatu	equ	0x4FB
 13179                           pclath	equ	0x4FA
 13180                           pcl	equ	0x4F9
 13181                           tblptru	equ	0x4F8
 13182                           tblptrh	equ	0x4F7
 13183                           tblptrl	equ	0x4F6
 13184                           tablat	equ	0x4F5
 13185                           prodh	equ	0x4F4
 13186                           prodl	equ	0x4F3
 13187                           indf0	equ	0x4EF
 13188                           postinc0	equ	0x4EE
 13189                           postdec0	equ	0x4ED
 13190                           preinc0	equ	0x4EC
 13191                           plusw0	equ	0x4EB
 13192                           fsr0h	equ	0x4EA
 13193                           fsr0l	equ	0x4E9
 13194                           wreg	equ	0x4E8
 13195                           indf1	equ	0x4E7
 13196                           postinc1	equ	0x4E6
 13197                           postdec1	equ	0x4E5
 13198                           preinc1	equ	0x4E4
 13199                           plusw1	equ	0x4E3
 13200                           fsr1h	equ	0x4E2
 13201                           fsr1l	equ	0x4E1
 13202                           bsr	equ	0x4E0
 13203                           indf2	equ	0x4DF
 13204                           postinc2	equ	0x4DE
 13205                           postdec2	equ	0x4DD
 13206                           preinc2	equ	0x4DC
 13207                           plusw2	equ	0x4DB
 13208                           fsr2h	equ	0x4DA
 13209                           fsr2l	equ	0x4D9
 13210                           status	equ	0x4D8

Data Sizes:
    Strings     41
    Constant    60
    Data        22
    BSS         140
    Persistent  20
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      93
    BANK5           160    117     159
    BANK6           256      2     140
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dummy$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    dummy$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    dummy$next$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    dummy$next$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    dummy$next$payload	PTR void  size(2) Largest target is 0

    dummy$payload	PTR void  size(2) Largest target is 0

    dummy_exec$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    dummy_exec$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    dummy_exec$next$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 0
		 -> dummyHandler(), 

    dummy_exec$next$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    dummy_exec$next$payload	PTR void  size(2) Largest target is 0

    dummy_exec$payload	PTR void  size(2) Largest target is 0

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    enqueueCallback@timer$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    enqueueCallback@timer$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    enqueueCallback@timer$payload	PTR void  size(2) Largest target is 0

    enqueueCallback@tmp$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    enqueueCallback@tmp$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    enqueueCallback@tmp$next$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    enqueueCallback@tmp$next$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    enqueueCallback@tmp$next$payload	PTR void  size(2) Largest target is 0

    enqueueCallback@tmp$payload	PTR void  size(2) Largest target is 0

    executeQueueHead	volatile PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    executeQueueHead$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    executeQueueHead$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    executeQueueHead$payload	PTR void  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), ISR_Boton(), NULL(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), ISR_Boton(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), NULL(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), NULL(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    listHead	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    listHead$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    listHead$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    listHead$payload	PTR void  size(2) Largest target is 0

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[8]), STR_2(CODE[6]), STR_3(CODE[19]), STR_4(CODE[19]), 
		 -> STR_5(CODE[19]), STR_6(CODE[19]), STR_7(CODE[19]), 

    printList@basePoint$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    printList@basePoint$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    printList@basePoint$payload	PTR void  size(2) Largest target is 0

    PWM1_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), NULL(), 

    PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), NULL(), 

    PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), NULL(), 

    PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM2_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Period_DefaultInterruptHandler(), NULL(), 

    PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Period_DefaultInterruptHandler(), 

    PWM2_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output1_DefaultInterruptHandler(), NULL(), 

    PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM2_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output2_DefaultInterruptHandler(), NULL(), 

    PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM2_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM3_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM3_16BIT_Period_DefaultInterruptHandler(), NULL(), 

    PWM3_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM3_16BIT_Period_DefaultInterruptHandler(), 

    PWM3_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM3_16BIT_Slice1Output1_DefaultInterruptHandler(), NULL(), 

    PWM3_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM3_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM3_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM3_16BIT_Slice1Output2_DefaultInterruptHandler(), NULL(), 

    PWM3_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM3_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    read_prec_or_width@ap	PTR PTR void [1] size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(2) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    rebaseList@basePoint$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    rebaseList@basePoint$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    rebaseList@basePoint$payload	PTR void  size(2) Largest target is 0

    S1089$0$0	PTR void  size(2) Largest target is 0

    S1089tmrStruct$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    S1089tmrStruct$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    S1089tmrStruct$payload	PTR void  size(2) Largest target is 0

    S1386$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), 

    S1386$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), 

    S1386$22$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), 

    S1386$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S1386$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_AutoBaudQuery(), 

    S1386$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> UART1_AutoBaudSet(), 

    S1386$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S1386$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1386$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S1386$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1386$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Deinitialize(), 

    S1386$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> UART1_ErrorGet(), 

    S1386$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1386$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_FramingErrorCallbackRegister(), 

    S1386$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Initialize(), 

    S1386$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsRxReady(), 

    S1386$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxDone(), 

    S1386$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxReady(), 

    S1386$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_OverrunErrorCallbackRegister(), 

    S1386$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_ParityErrorCallbackRegister(), 

    S1386$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> UART1_Read(), 

    S1386$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1386$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitDisable(), 

    S1386$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitEnable(), 

    S1386$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1386$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S1386$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> UART1_Write(), 

    S2557$buffer	PTR unsigned char  size(2) Largest target is 0

    S2557$source	PTR const unsigned char  size(2) Largest target is 0

    S926$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> timeout_isr(), TMR0_DefaultOverflowCallback(), 

    S926TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    S926TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR0_Write(), 

    S926TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    S926TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    S926TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Tasks(), 

    S926TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    sortedInsert$1241$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert$1241$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    sortedInsert$1241$payload	PTR void  size(2) Largest target is 0

    sortedInsert@insertPoint$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@insertPoint$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    sortedInsert@insertPoint$payload	PTR void  size(2) Largest target is 0

    sortedInsert@prevPoint$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@prevPoint$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    sortedInsert@prevPoint$next$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@prevPoint$next$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    sortedInsert@prevPoint$next$payload	PTR void  size(2) Largest target is 0

    sortedInsert@prevPoint$payload	PTR void  size(2) Largest target is 0

    sortedInsert@timer$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@timer$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    sortedInsert@timer$next$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    sortedInsert@timer$next$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    sortedInsert@timer$next$payload	PTR void  size(2) Largest target is 0

    sortedInsert@timer$payload	PTR void  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK6[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    timeout_callNextCallback@callBackTimer$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_callNextCallback@callBackTimer$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_callNextCallback@callBackTimer$payload	PTR void  size(2) Largest target is 0

    timeout_create@timer$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_create@timer$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_create@timer$payload	PTR void  size(2) Largest target is 0

    timeout_delete@timer$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_delete@timer$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_delete@timer$payload	PTR void  size(2) Largest target is 0

    timeout_deleteHelper@findTimer$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_deleteHelper@findTimer$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_deleteHelper@findTimer$payload	PTR void  size(2) Largest target is 0

    timeout_deleteHelper@list$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_deleteHelper@list$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_deleteHelper@list$payload	PTR void  size(2) Largest target is 0

    timeout_deleteHelper@prevTimer$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_deleteHelper@prevTimer$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_deleteHelper@prevTimer$next$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_deleteHelper@prevTimer$next$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_deleteHelper@prevTimer$next$payload	PTR void  size(2) Largest target is 0

    timeout_deleteHelper@prevTimer$payload	PTR void  size(2) Largest target is 0

    timeout_getTimeRemaining@timer$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_getTimeRemaining@timer$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_getTimeRemaining@timer$payload	PTR void  size(2) Largest target is 0

    timeout_isr@next$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_isr@next$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_isr@next$payload	PTR void  size(2) Largest target is 0

    timeout_stopTimer@timer$callbackPtr	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> dummyHandler(), 

    timeout_stopTimer@timer$next	PTR struct tmrStruct size(2) Largest target is 12
		 -> dummy(BANK6[10]), dummy_exec(BANK6[10]), NULL(NULL[0]), 

    timeout_stopTimer@timer$payload	PTR void  size(2) Largest target is 0

    Timer0$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Initialize(), 

    Timer0$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> TMR0_Write(), 

    Timer0$Start	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Start(), 

    Timer0$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Stop(), 

    Timer0$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_Tasks(), 

    Timer0$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR0_OverflowCallbackRegister(), 

    TMR0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> timeout_isr(), TMR0_DefaultOverflowCallback(), NULL(), 

    TMR0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timeout_isr(), TMR0_DefaultOverflowCallback(), 

    UART1$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_AutoBaudQuery(), 

    UART1$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> UART1_AutoBaudSet(), 

    UART1$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Deinitialize(), 

    UART1$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> UART1_ErrorGet(), 

    UART1$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_FramingErrorCallbackRegister(), 

    UART1$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Initialize(), 

    UART1$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsRxReady(), 

    UART1$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxDone(), 

    UART1$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxReady(), 

    UART1$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_OverrunErrorCallbackRegister(), 

    UART1$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_ParityErrorCallbackRegister(), 

    UART1$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> UART1_Read(), 

    UART1$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitDisable(), 

    UART1$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitEnable(), 

    UART1$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> UART1_Write(), 

    UART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), NULL(), 

    UART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), NULL(), 

    UART1_ParityErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), 

    UART1_ParityErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), NULL(), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[8]), STR_2(CODE[6]), STR_3(CODE[19]), STR_4(CODE[19]), 
		 -> STR_5(CODE[19]), STR_6(CODE[19]), STR_7(CODE[19]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[8]), STR_2(CODE[6]), STR_3(CODE[19]), STR_4(CODE[19]), 
		 -> STR_5(CODE[19]), STR_6(CODE[19]), STR_7(CODE[19]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[8]), STR_2(CODE[6]), STR_3(CODE[19]), STR_4(CODE[19]), 
		 -> STR_5(CODE[19]), STR_6(CODE[19]), STR_7(CODE[19]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _openHand->_set3
    _openGate->_setServoAngle
    _printf->_vfprintf
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _floorf->___fldiv
    _dtoa->_abs
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_IsTxReady
    _putch->_UART1_Write
    _closeHand->_set3
    _set3->___xxtofl
    _abs->___fltol
    ___xxtofl->_abs
    ___flsub->___flmul
    ___flge->___xxtofl
    _closeGate->_setServoAngle
    _setServoAngle->___fltol
    ___fltol->___flsub
    ___flmul->___fldiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _timeout_initialize->_TMR0_OverflowCallbackRegister
    _timeout_initialize->_TMR0_Write
    _UART1_Initialize->_UART1_FramingErrorCallbackRegister
    _UART1_Initialize->_UART1_OverrunErrorCallbackRegister
    _UART1_Initialize->_UART1_ParityErrorCallbackRegister
    _TMR0_Initialize->_TMR0_OverflowCallbackRegister
    _PWM3_16BIT_Initialize->_PWM3_16BIT_Period_SetInterruptHandler
    _PWM3_16BIT_Initialize->_PWM3_16BIT_Slice1Output1_SetInterruptHandler
    _PWM3_16BIT_Initialize->_PWM3_16BIT_Slice1Output2_SetInterruptHandler
    _PWM2_16BIT_Initialize->_PWM2_16BIT_Period_SetInterruptHandler
    _PWM2_16BIT_Initialize->_PWM2_16BIT_Slice1Output1_SetInterruptHandler
    _PWM2_16BIT_Initialize->_PWM2_16BIT_Slice1Output2_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Period_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output1_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output2_SetInterruptHandler
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK5

    _ejecutarModoUART->_printf
    _ejecutarModoManual->_printf
    _ejecutarModoAutomatico->_goto_servo
    _openHand->_set3
    _goto_servo->_set0
    _goto_servo->_set1
    _goto_servo->_set2
    _set2->_printf
    _set1->_printf
    _set0->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _closeHand->_set3
    _set3->___flge

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_evaluarModoActual

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0  309023
           _INT0_SetInterruptHandler
              _PWM1_16BIT_Initialize
              _PWM2_16BIT_Initialize
              _PWM3_16BIT_Initialize
                  _SYSTEM_Initialize
                   _UART1_Initialize
                  _evaluarModoActual
 ---------------------------------------------------------------------------------
 (1) _evaluarModoActual                                    2     2      0  305375
                                              0 BANK6      2     2      0
             _ejecutarModoAutomatico
                 _ejecutarModoManual
                   _ejecutarModoUART
 ---------------------------------------------------------------------------------
 (2) _ejecutarModoUART                                     0     0      0   36176
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ejecutarModoManual                                   0     0      0   36176
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ejecutarModoAutomatico                               0     0      0  233023
                          _closeGate
                          _closeHand
                         _goto_servo
                           _openGate
                           _openHand
 ---------------------------------------------------------------------------------
 (3) _openHand                                             0     0      0   21464
                               _set3
 ---------------------------------------------------------------------------------
 (3) _openGate                                             2     2      0    7461
                                             77 COMRAM     2     2      0
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (3) _goto_servo                                          12     0     12  175173
                                            105 BANK5     12     0     12
                               _set0
                               _set1
                               _set2
 ---------------------------------------------------------------------------------
 (4) _set2                                                 6     2      4   57550
                                             99 BANK5      6     2      4
                            ___fladd
                             ___flge
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _abs
                             _printf
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (4) _set1                                                 6     2      4   57550
                                             99 BANK5      6     2      4
                            ___fladd
                             ___flge
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _abs
                             _printf
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (4) _set0                                                 6     2      4   57550
                                             99 BANK5      6     2      4
                            ___fladd
                             ___flge
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _abs
                             _printf
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (3) _printf                                              19     4     15   36176
                                             82 BANK5     17     2     15
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             6     1      5   35435
                                             90 COMRAM     1     1      0
                                             77 BANK5      5     0      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           15     9      6   34929
                                             63 BANK5     14     8      6
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   9     5      4     643
                                              8 COMRAM     9     5      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     311
                                              2 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              54    47      7   26843
                                             88 COMRAM     2     2      0
                                             12 BANK5     51    44      7
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               6     3      3     377
                                              2 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     371
                                              2 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _labs                                                 8     4      4     294
                                              2 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             27 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              2 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              2 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                15     9      6    4986
                                             74 COMRAM    15     9      6
                            ___aldiv
                            ___almod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     3      6    3100
                                             20 COMRAM     9     3      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1151
                                             13 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     902
                                              4 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      68
                                              3 COMRAM     1     1      0
                    _UART1_IsTxReady
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (8) _UART1_Write                                          1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _UART1_IsTxReady                                      1     1      0      24
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) ___almod                                             10     2      8     448
                                              2 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (7) ___aldiv                                             14     6      8     452
                                              2 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) _closeHand                                            0     0      0   21464
                               _set3
 ---------------------------------------------------------------------------------
 (4) _set3                                                 6     2      4   21464
                                             88 COMRAM     2     2      0
                                             12 BANK5      4     0      4
                            ___fladd
                             ___flge
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _abs
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     446
                                             70 COMRAM     4     2      2
                            ___almod (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     702
                                             74 COMRAM    14    10      4
                            ___flsub (ARG)
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    4713
                                             52 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    3022
                                              2 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    3866
                                              0 BANK5     12     4      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) _closeGate                                            0     0      0    7461
                      _setServoAngle
 ---------------------------------------------------------------------------------
 (5) _setServoAngle                                        7     3      4    7461
                                             70 COMRAM     7     3      4
     _PWM1_16BIT_LoadBufferRegisters
_PWM1_16BIT_SetSlice1Output1DutyCycl
_PWM1_16BIT_SetSlice1Output2DutyCycl
     _PWM2_16BIT_LoadBufferRegisters
_PWM2_16BIT_SetSlice1Output1DutyCycl
_PWM2_16BIT_SetSlice1Output2DutyCycl
     _PWM3_16BIT_LoadBufferRegisters
_PWM3_16BIT_SetSlice1Output1DutyCycl
_PWM3_16BIT_SetSlice1Output2DutyCycl
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     913
                                             60 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    2808
                                             27 COMRAM    25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    2311
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) _PWM3_16BIT_SetSlice1Output2DutyCycleRegister         2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _PWM3_16BIT_SetSlice1Output1DutyCycleRegister         2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _PWM3_16BIT_LoadBufferRegisters                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PWM2_16BIT_SetSlice1Output2DutyCycleRegister         2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _PWM2_16BIT_SetSlice1Output1DutyCycleRegister         2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _PWM2_16BIT_LoadBufferRegisters                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _PWM1_16BIT_SetSlice1Output2DutyCycleRegister         2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _PWM1_16BIT_SetSlice1Output1DutyCycleRegister         2     0      2     196
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _PWM1_16BIT_LoadBufferRegisters                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2232
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
             _PIN_MANAGER_Initialize
              _PWM1_16BIT_Initialize
              _PWM2_16BIT_Initialize
              _PWM3_16BIT_Initialize
                    _TMR0_Initialize
                   _UART1_Initialize
                 _timeout_initialize
 ---------------------------------------------------------------------------------
 (2) _timeout_initialize                                   0     0      0     446
      _TMR0_OverflowCallbackRegister
                         _TMR0_Start
                          _TMR0_Stop
                         _TMR0_Write
 ---------------------------------------------------------------------------------
 (3) _TMR0_Write                                           2     0      2     272
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART1_Initialize                                     0     0      0     360
 _UART1_FramingErrorCallbackRegister
 _UART1_OverrunErrorCallbackRegister
  _UART1_ParityErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _UART1_ParityErrorCallbackRegister                    2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_OverrunErrorCallbackRegister                   2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART1_FramingErrorCallbackRegister                   2     0      2     120
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     174
                                              4 COMRAM     2     2      0
      _TMR0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR0_OverflowCallbackRegister                        2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM3_16BIT_Initialize                                0     0      0     294
_PWM3_16BIT_Period_SetInterruptHandl
_PWM3_16BIT_Slice1Output1_SetInterru
_PWM3_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM3_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM3_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM3_16BIT_Period_SetInterruptHandler                2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM2_16BIT_Initialize                                0     0      0     294
_PWM2_16BIT_Period_SetInterruptHandl
_PWM2_16BIT_Slice1Output1_SetInterru
_PWM2_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM2_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM2_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM2_16BIT_Period_SetInterruptHandler                2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_Initialize                                0     0      0     294
_PWM1_16BIT_Period_SetInterruptHandl
_PWM1_16BIT_Slice1Output1_SetInterru
_PWM1_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Period_SetInterruptHandler                2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     370
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      98
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2     174
                                              2 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INTERRUPT_InterruptManager                          2     2      0       0
                                              0 COMRAM     2     2      0
                           _INT0_ISR
 ---------------------------------------------------------------------------------
 (15) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (16) _INT0_CallBack                                       0     0      0       0
                                NULL *
       _INT0_DefaultInterruptHandler *
                          _ISR_Boton *
 ---------------------------------------------------------------------------------
 (17) _ISR_Boton                                           0     0      0       0
                  _detenerMovimiento
 ---------------------------------------------------------------------------------
 (18) _detenerMovimiento                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (17) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INT0_SetInterruptHandler
   _PWM1_16BIT_Initialize
     _PWM1_16BIT_Period_SetInterruptHandler
     _PWM1_16BIT_Slice1Output1_SetInterruptHandler
     _PWM1_16BIT_Slice1Output2_SetInterruptHandler
   _PWM2_16BIT_Initialize
     _PWM2_16BIT_Period_SetInterruptHandler
     _PWM2_16BIT_Slice1Output1_SetInterruptHandler
     _PWM2_16BIT_Slice1Output2_SetInterruptHandler
   _PWM3_16BIT_Initialize
     _PWM3_16BIT_Period_SetInterruptHandler
     _PWM3_16BIT_Slice1Output1_SetInterruptHandler
     _PWM3_16BIT_Slice1Output2_SetInterruptHandler
   _SYSTEM_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _PIN_MANAGER_Initialize
     _PWM1_16BIT_Initialize
     _PWM2_16BIT_Initialize
     _PWM3_16BIT_Initialize
     _TMR0_Initialize
       _TMR0_OverflowCallbackRegister
     _UART1_Initialize
       _UART1_FramingErrorCallbackRegister
       _UART1_OverrunErrorCallbackRegister
       _UART1_ParityErrorCallbackRegister
     _timeout_initialize
       _TMR0_OverflowCallbackRegister
       _TMR0_Start
       _TMR0_Stop
       _TMR0_Write
   _UART1_Initialize
   _evaluarModoActual
     _ejecutarModoAutomatico
       _closeGate
         _setServoAngle
           _PWM1_16BIT_LoadBufferRegisters
           _PWM1_16BIT_SetSlice1Output1DutyCycleRegister
           _PWM1_16BIT_SetSlice1Output2DutyCycleRegister
           _PWM2_16BIT_LoadBufferRegisters
           _PWM2_16BIT_SetSlice1Output1DutyCycleRegister
           _PWM2_16BIT_SetSlice1Output2DutyCycleRegister
           _PWM3_16BIT_LoadBufferRegisters
           _PWM3_16BIT_SetSlice1Output1DutyCycleRegister
           _PWM3_16BIT_SetSlice1Output2DutyCycleRegister
           ___fldiv
           ___flmul
             ___fldiv (ARG)
           ___fltol
             ___fldiv (ARG)
             ___flmul (ARG)
             ___flsub (ARG)
               ___fladd
               ___flmul (ARG)
       _closeHand
         _set3
           ___fladd
           ___flge
             ___flmul (ARG)
             ___flsub (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___flsub (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___almod (ARG)
                 ___flsub (ARG)
                 ___fltol (ARG)
             _abs (ARG)
           ___flsub
           ___fltol
           ___xxtofl
           _abs
           _setServoAngle
       _goto_servo
         _set0
           ___fladd
           ___flge
           ___flsub
           ___fltol
           ___xxtofl
           _abs
           _printf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aldiv
                   ___almod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _UART1_IsTxReady
                         _UART1_Write
                     _fputs
                       _fputc
                 _efgtoa
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                   ___fltol
                   ___fpclassifyf
                   _floorf
                     ___fldiv (ARG)
                   _labs
                   _memcpy
                   _pad
                   _strcpy
                 _fputc
                 _read_prec_or_width
                   ___wmul
           _setServoAngle
         _set1
           ___fladd
           ___flge
           ___flsub
           ___fltol
           ___xxtofl
           _abs
           _printf
           _setServoAngle
         _set2
           ___fladd
           ___flge
           ___flsub
           ___fltol
           ___xxtofl
           _abs
           _printf
           _setServoAngle
       _openGate
         _setServoAngle
       _openHand
         _set3
     _ejecutarModoManual
       _printf
     _ejecutarModoUART
       _printf

 _INTERRUPT_InterruptManager (ROOT)
   _INT0_ISR
     _INT0_CallBack
       NULL(Fake) *
       _INT0_DefaultInterruptHandler *
       _ISR_Boton *
         _detenerMovimiento

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             200      0       0       0        0.0%
BITBIGSFRlllhhh    159      0       0      56        0.0%
BITBIGSFR_1        100      0       0      36        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      2      8C       7       54.7%
BITBIGSFRlllhhh     E4      0       0      48        0.0%
BITBIGSFRllll       AC      0       0      59        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0     75      9F       5       99.4%
BITBIGSFRlllhhh     64      0       0      49        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5D       1       97.9%
BITBIGSFRlllhhh     48      0       0      47        0.0%
BITBIGSFRlllhhh     33      0       0      52        0.0%
BITBIGSFRhhhhhh     29      0       0      38        0.0%
BITBIGSFRlllhhh     25      0       0      53        0.0%
BITBIGSFRhhllll     1C      0       0      46        0.0%
BITBIGSFRlllhhh     19      0       0      50        0.0%
BITBIGSFRlllhhh     13      0       0      51        0.0%
BITBIGSFRhhhhhl      D      0       0      39        0.0%
BITBIGSFRhhhhl       5      0       0      40        0.0%
BITBIGSFRlllhhh      4      0       0      54        0.0%
BITBIGSFRhhlhll      4      0       0      43        0.0%
BITBIGSFRhhhl        2      0       0      41        0.0%
BITBIGSFRhhlllh      1      0       0      45        0.0%
BITBIGSFRhhlhlh      1      0       0      42        0.0%
BITBIGSFRlllhhh      1      0       0      55        0.0%
BITBIGSFRlllhhl      1      0       0      57        0.0%
BITBIGSFRlllhl       1      0       0      58        0.0%
BITBIGSFRhhllh       1      0       0      44        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     188      60        0.0%
DATA                 0      0     188       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jun 18 06:51:57 2024

                                                ___fldiv@aexp 051B  
                                                ___fldiv@bexp 051A  
                                                ___fldiv@sign 0513  
                                                          l61 4B70  
                                                          l73 526E  
                                                          l76 5264  
                                                          l95 52B4  
                                                          l79 5346  
                                                          l98 52AA  
                                         ___wmul@multiplicand 0505  
                                                         l101 52BE  
                                                         l211 52DC  
                                                         l205 52D2  
                                                         l208 52C8  
                                                         l321 52FA  
                                                         l315 52F0  
                                                         l171 4BDC  
                                                         l510 5318  
                                                         l318 52E6  
                                                         l183 5282  
                                                         l345 5238  
                                                         l281 4C48  
                                                         l186 5278  
                                                         l523 530E  
                                                         l451 4918  
                                                         l293 5296  
                                                         l189 534A  
                                                         l366 5164  
                                                         l536 5304  
                                                         l296 528C  
                                                         l299 534E  
                                                         l580 5336  
                                                         l732 51AA  
                                                         l493 4FAE  
                                                         l574 5014  
                                                         l577 533C  
                                                         l913 5320  
                                                         l586 5250  
                                                         l595 52A0  
                                                         l845 4A26  
                                                         l925 51C8  
                                                         l942 5200  
                                                         l938 521C  
                                                         l946 51E4  
                                                         l896 509C  
                                                         l897 509E  
                                  ??_INT0_SetInterruptHandler 0505  
                                                         _abs 4FB0  
                                                         _pad 4A98  
                                       setServoAngle@pwmValue 054C  
                                          TMR0_Write@timerVal 0503  
                                                         tosl 04FD  
                                                         wreg 04E8  
                                               _INT0_CallBack 5048  
                                              _UART1_IsTxDone 0000  
                                                ___flmul@aexp 052D  
                                                ___flmul@bexp 052E  
                                                ___flmul@sign 0528  
                                                ___flmul@temp 0533  
                                                ___flmul@prod 052F  
                                    _UART1_ParityErrorHandler 060C  
                                              _UART1_ErrorGet 0000  
                            ??_PWM1_16BIT_LoadBufferRegisters 0503  
                             ?_PWM1_16BIT_LoadBufferRegisters 0501  
                                                ___fltol@exp1 0546  
                                                        l1011 491A  
                                                        l1021 49A8  
                                                        l1030 3CCC  
                                                        l1033 4E0A  
                                                        l2010 4CEE  
                                                        l1123 3450  
                                                        l1027 4E4C  
                                                        l1019 498C  
                                                        ?_abs 0547  
                                                        l2020 454E  
                                                        l1109 36A8  
                                                        l2030 3A14  
                                                        l1151 38BE  
                                                        l2041 4C9E  
                                                        l1137 31F8  
                                                        l1170 50C8  
                                                        l1162 5118  
                                                        l1154 4ECC  
                                                        l2027 3AD0  
                                                        l1252 4244  
                                                        l1173 513E  
                                                        l1166 4E8E  
                                                        l1158 50F0  
                                                        l1095 4138  
                                                        l2047 4D3E  
                                                        l1432 4870  
                                                        l1265 463A  
                                                        l2073 4F08  
                                                        l1443 434A  
                                                        l2059 4704  
                                                        l2067 4DC8  
                                                        l1701 2146  
                                                        l1470 4450  
                                                        l1438 4304  
                                                        l1710 2416  
                                                        l1702 2134  
                                                        l1703 20FA  
                                                        l1447 4F78  
                                                        l5001 4546  
                                                        l5011 4C58  
                                                        l1804 2802  
                                                        l4301 4688  
                                                        l5021 3936  
                                                        l5013 4C6C  
                                                        l5005 4ECE  
                                                        l1718 2260  
                                                        l1727 2330  
                                                        l4311 1F72  
                                                        l1743 4D84  
                                                        l1831 3E80  
                                                        l4303 46BE  
                                                        l5031 3A04  
                                                        l5023 394A  
                                                        l5007 4ED6  
                                                        l1760 2DC4  
                                                        l1728 231E  
                                                        l1920 1F56  
                                                        l4401 2126  
                                                        l4321 1FA6  
                                                        l4313 1F74  
                                                        l5041 3AC0  
                                                        l5025 3958  
                                                        l5033 3A38  
                                                        l5017 38C0  
                                                        l5009 4C4A  
                                                        l1842 3E18  
                                                        l1755 2FA0  
                                                        l4403 2128  
                                                        l4331 1FD8  
                                                        l4315 1F84  
                                                        l4323 1FAE  
                                                        l4307 1F58  
                                                        l1835 3DBC  
                                                        l1851 4FE2  
                                                        l5035 3A74  
                                                        l5019 38E0  
                                                        l5051 4D14  
                                                        l1923 18F4  
                                                        l1828 3D24  
                                                        l1757 2E00  
                                                        l4501 23F6  
                                                        l4421 21B0  
                                                        l4413 2178  
                                                        l4405 2132  
                                                        l4341 200E  
                                                        l4333 1FDE  
                                                        l4325 1FBE  
                                                        l4317 1F94  
                                                        l4309 1F64  
                                                        l1909 402A  
                                                        l5061 3EC2  
                                                        l5037 3A88  
                                                        l5029 39C8  
                                                        l5053 4D20  
                                                        l5045 4CF0  
                                                        l1925 1738  
                                                        l1766 2E46  
                                                        l1791 2840  
                                                        l4503 2404  
                                                        l4423 21B4  
                                                        l4415 2188  
                                                        l4407 2154  
                                                        l4431 21D4  
                                                        l4351 204A  
                                                        l4343 201E  
                                                        l4335 1FEC  
                                                        l4327 1FC4  
                                                        l4319 1FA4  
                                                        l4511 4D92  
                                                        l5071 3EFC  
                                                        l5063 3ED2  
                                                        l5039 3AB0  
                                                        l5047 4D04  
                                                        l5055 4D24  
                                                        l1768 2EBE  
                                                        l1848 4FCA  
                                                        l6041 514C  
                                                        l1769 2EAC  
                                                        l4505 2406  
                                                        l4433 21FA  
                                                        l4441 2250  
                                                        l4425 21C2  
                                                        l4417 2196  
                                                        l4409 2164  
                                                        l4361 2068  
                                                        l4353 2058  
                                                        l4345 2020  
                                                        l4337 1FEE  
                                                        l4329 1FD6  
                                                        l4601 461A  
                                                        l4273 5076  
                                                        l4513 4DA4  
                                                        l5081 3F60  
                                                        l5073 3F08  
                                                        l5065 3ED8  
                                                        l5057 3E82  
                                                        l5049 4D10  
                                                        l1953 1D3A  
                                                        l4521 511A  
                                                        l1794 26D2  
                                                        l1858 5188  
                                                        l6051 5160  
                                                        l6043 5150  
                                                        l4611 2C22  
                                                        l1787 24DC  
                                                        l4451 22A4  
                                                        l4443 2276  
                                                        l4435 222E  
                                                        l4427 21C4  
                                                        l4419 21A4  
                                                        l4371 207C  
                                                        l4363 206C  
                                                        l4355 205C  
                                                        l4339 1FFE  
                                                        l4347 2028  
                                                        l4531 414C  
                                                        l4603 462A  
                                                        l4275 507A  
                                                        l4283 531C  
                                                        l4515 4DA8  
                                                        l1891 4B04  
                                                        l5091 3FE4  
                                                        l5083 3F66  
                                                        l5075 3F12  
                                                        l5067 3EE8  
                                                        l5059 3EA6  
                                                        l4523 5136  
                                                        l5331 476A  
                                                        l5323 4706  
                                                        l1796 274A  
                                                        l6045 5154  
                                                        l6037 5140  
                                                        l4701 2E56  
                                                        l4621 2C56  
                                                        l4613 2C24  
                                                        l1797 2738  
                                                        l5501 40DE  
                                                        l4461 22CE  
                                                        l4453 22B2  
                                                        l4445 2286  
                                                        l4437 2230  
                                                        l4429 21CE  
                                                        l4381 2090  
                                                        l4373 2080  
                                                        l4365 2070  
                                                        l4357 2060  
                                                        l4349 2038  
                                                        l4517 4FB0  
                                                        l4541 4182  
                                                        l4533 415C  
                                                        l4277 508A  
                                                        l4285 51AE  
                                                        l4293 463C  
                                                        l4509 4D86  
                                                        l5093 3FF4  
                                                        l5077 3F18  
                                                        l5085 3F9A  
                                                        l5069 3EF4  
                                                        l5333 478A  
                                                        l1965 47BE  
                                                        l5325 470E  
                                                        ?_pad 0515  
                                                        l6047 5158  
                                                        l6039 5148  
                                                        l4703 2E64  
                                                        l4631 2C88  
                                                        l4615 2C34  
                                                        l4623 2C5E  
                                                        l4607 2C08  
                                                        l5503 40EA  
                                                        l5511 4102  
                                                        l4471 2300  
                                                        l4463 22DE  
                                                        l4455 22B4  
                                                        l4439 2240  
                                                        l4391 20E2  
                                                        l4383 2094  
                                                        l4375 2084  
                                                        l4367 2074  
                                                        l4359 2064  
                                                        l4519 4FBE  
                                                        l4551 41CA  
                                                        l4543 4192  
                                                        l4535 4160  
                                                        l4527 413A  
                                                        l4279 5098  
                                                        l4287 51AE  
                                                        l4295 464E  
                                                        l1887 4AAE  
                                                        l5095 3FFA  
                                                        l5087 3FB4  
                                                        l5079 3F5A  
                                                        l1895 3EB2  
                                                        l5327 4734  
                                                        l5335 4794  
                                                        l1975 2C06  
                                                        l6049 515C  
                                                        l5441 525C  
                                                        l4713 2ECE  
                                                        l4721 2F16  
                                                        l4705 2E68  
                                                        l4641 2CBC  
                                                        l4633 2C8A  
                                                        l4625 2C6E  
                                                        l4617 2C44  
                                                        l4609 2C14  
                                                        l4801 2586  
                                                        l5505 40F2  
                                                        l4481 235A  
                                                        l4473 2316  
                                                        l4457 22C2  
                                                        l4449 229A  
                                                        l4465 22E0  
                                                        l4393 20F2  
                                                        l4377 2088  
                                                        l4369 2078  
                                                        l4385 2098  
                                                        l5521 3D4A  
                                                        l5513 3CD0  
                                                        l4561 420E  
                                                        l4553 41D4  
                                                        l4545 41A8  
                                                        l4537 416E  
                                                        l4529 413E  
                                                        l4289 51C2  
                                                        l4297 4660  
                                                        l5097 400A  
                                                        l5089 3FCA  
                                                        l1897 3EBA  
                                                        l1969 47C6  
                                                        l5329 473E  
                                                        l1898 3F00  
                                                        l5451 5270  
                                                        l5443 5260  
                                                        l4731 2F80  
                                                        l4723 2F30  
                                                        l4715 2EDA  
                                                        l4707 2E76  
                                                        l4651 2D02  
                                                        l4635 2C9A  
                                                        l4643 2CC4  
                                                        l4627 2C74  
                                                        l4619 2C54  
                                                        l4811 25D8  
                                                        l4803 2592  
                                                        l4491 23D6  
                                                        l4483 2394  
                                                        l4459 22CA  
                                                        l4467 22EE  
                                                        l4395 2108  
                                                        l4387 209C  
                                                        l4379 208C  
                                                        l5531 3DA4  
                                                        l5515 3CE0  
                                                        l4555 41F2  
                                                        l4547 41B0  
                                                        l4563 4214  
                                                        l4539 417E  
                                                        l4571 4550  
                                                        l4299 466A  
                                                        l5701 5310  
                                                        l5461 5284  
                                                        l5453 5274  
                                                        l5445 5344  
                                                        l5437 5266  
                                                        l4733 2F8E  
                                                        l4725 2F46  
                                                        l4717 2EE8  
                                                        l4709 2EA4  
                                                        l4661 2D2A  
                                                        l4653 2D06  
                                                        l4645 2CD4  
                                                        l4637 2CAA  
                                                        l4629 2C7A  
                                                        l4821 2656  
                                                        l4813 25E8  
                                                        l4805 25A2  
                                                        l4493 23DA  
                                                        l4477 2340  
                                                        l4485 2396  
                                                        l4469 22F2  
                                                        l4397 2114  
                                                        l4389 20C6  
                                                        l5541 3E08  
                                                        l5533 3DA6  
                                                        l5525 3D5E  
                                                        l5517 3CEE  
                                                        l4565 4224  
                                                        l4557 4202  
                                                        l4549 41BC  
                                                        l4581 4584  
                                                        l4573 4554  
                                                        l5703 5306  
                                                        l5711 5332  
                                                        l5463 5288  
                                                        l5455 5348  
                                                        l5447 527A  
                                                        l5439 526A  
                                                        l4735 2F94  
                                                        l4727 2F60  
                                                        l4719 2F12  
                                                        l4671 2D78  
                                                        l4647 2CEA  
                                                        l4639 2CBA  
                                                        l4831 26D0  
                                                        l4823 268C  
                                                        l4815 2604  
                                                        l4807 25AE  
                                                        l4751 2434  
                                                        l6431 42B4  
                                                        l4495 23E8  
                                                        l4487 23A6  
                                                        l4479 234C  
                                                        l4399 2118  
                                                        l5551 3E60  
                                                        l5543 3E26  
                                                        l5535 3DB2  
                                                        l5527 3D66  
                                                        l5519 3D34  
                                                        l4567 4234  
                                                        l4559 4204  
                                                        l4591 45CC  
                                                        l4583 4594  
                                                        l4575 4562  
                                                        l5705 52FC  
                                                        l5801 4B46  
                                                        l5713 5246  
                                                        l5465 534C  
                                                        l5457 528E  
                                                        l5449 527E  
                                                        l4737 2F96  
                                                        l4729 2F7C  
                                                        l4681 2DC2  
                                                        l4673 2D88  
                                                        l4665 2D3E  
                                                        l4649 2CFA  
                                                        l4657 2D1A  
                                                        l4841 2730  
                                                        l4833 26E2  
                                                        l4825 269A  
                                                        l4817 2610  
                                                        l4809 25BE  
                                                        l4761 247A  
                                                        l4753 2444  
                                                        l4745 2418  
                                                        l6441 4342  
                                                        l6433 42C4  
                                                        l6425 4246  
                                                        l4497 23EE  
                                                        l4489 23B6  
                                                        l5553 3E6E  
                                                        l5545 3E28  
                                                        l5537 3DEE  
                                                        l5529 3D72  
                                                        l4593 45EA  
                                                        l4585 45AA  
                                                        l4577 4572  
                                                        l4921 4F58  
                                                        l6601 1C84  
                                                        l6521 17F4  
                                                        l6513 1748  
                                                        l5811 4B72  
                                                        l5803 4B48  
                                                        l5707 5298  
                                                        l5715 524C  
                                                        l5459 5292  
                                                        l4691 2E10  
                                                        l4683 2DCE  
                                                        l4675 2D90  
                                                        l4667 2D58  
                                                        l4659 2D2A  
                                                        l4851 279E  
                                                        l4835 26F0  
                                                        l4827 26B8  
                                                        l4819 262C  
                                                        l4771 24A6  
                                                        l4763 2480  
                                                        l4755 2454  
                                                        l4747 2424  
                                                        l5483 402E  
                                                        l6443 4348  
                                                        l6435 42D2  
                                                        l6427 4276  
                                                        l4499 23F0  
                                                        l5555 3E70  
                                                        l5547 3E2C  
                                                        l5539 3DFA  
                                                        l4595 45FA  
                                                        l4587 45B2  
                                                        l4579 4576  
                                                        l4923 4F68  
                                                        l6611 1D4C  
                                                        l6603 1C8C  
                                                        l6523 1830  
                                                        l6515 174E  
                                                        l6507 16E8  
                                                        l6451 157E  
                                                        l5901 4F90  
                                                        l5821 4BAE  
                                                        l5813 4B7E  
                                                        l5805 4B54  
                                                        l5709 5338  
                                                        l4693 2E26  
                                                        l4685 2DEC  
                                                        l4677 2DA0  
                                                        l4669 2D68  
                                                        l4861 2806  
                                                        l4845 275A  
                                                        l4853 27A2  
                                                        l4837 26F4  
                                                        l4829 26C2  
                                                        l4781 24FC  
                                                        l4773 24B6  
                                                        l4765 2486  
                                                        l4757 2464  
                                                        l4749 2432  
                                                        l4941 43B6  
                                                        l4933 4376  
                                                        l5493 40BA  
                                                        l5485 4096  
                                                        l6437 42E4  
                                                        l6429 4286  
                                                        l5549 3E50  
                                                        l4597 4604  
                                                        l4589 45BE  
                                                        l6621 1D7C  
                                                        l6613 1D5A  
                                                        l6605 1C98  
                                                        l6541 1920  
                                                        l6525 1844  
                                                        l6533 18C0  
                                                        l6517 1782  
                                                        l6509 1702  
                                                        l6461 15C6  
                                                        l6453 158C  
                                                        l6701 296E  
                                                        l5903 4F9E  
                                                        l5831 4BCC  
                                                        l5823 4BB0  
                                                        l5815 4BA8  
                                                        l5807 4B60  
                                                        l4695 2E2C  
                                                        l4687 2DEE  
                                                        l4679 2DB4  
                                                        l4871 2830  
                                                        l4863 2816  
                                                        l4855 27BC  
                                                        l4847 2766  
                                                        l4839 2702  
                                                        l4791 253C  
                                                        l4775 24C6  
                                                        l4767 2494  
                                                        l4759 246A  
                                                        l4951 43E6  
                                                        l4943 43C4  
                                                        l4935 43A0  
                                                        l4927 434C  
                                                        l5495 40C6  
                                                        l5487 40A2  
                                                        l6439 42F2  
                                                        l4599 460A  
                                                        l4919 4F42  
                                                        l6631 1DAE  
                                                        l6623 1D8C  
                                                        l6615 1D6A  
                                                        l6607 1D10  
                                                        l6551 1964  
                                                        l6543 1928  
                                                        l6535 18FC  
                                                        l6527 1878  
                                                        l6519 17C0  
                                                        l6463 15D6  
                                                        l6471 15FE  
                                                        l6455 1590  
                                                        l6447 1568  
                                                        l6711 29D4  
                                                        l5905 4FA0  
                                                        l5841 4C16  
                                                        l5833 4BD8  
                                                        l5825 4BB2  
                                                        l5817 4BAA  
                                                        l5809 4B6C  
                                                        l5753 5202  
                                                        l5761 51CA  
                                                        l4697 2E36  
                                                        l4689 2DFE  
                                                        l4865 2824  
                                                        l4857 27D0  
                                                        l4849 2774  
                                                        l4793 2548  
                                                        l4785 2510  
                                                        l4777 24CC  
                                                        l4769 2496  
                                                        l4961 4410  
                                                        l4953 43F0  
                                                        l4937 43A2  
                                                        l4929 4362  
                                                        l5497 40CE  
                                                        l5489 40AA  
                                                        l4881 47C8  
                                                        l6641 1E56  
                                                        l6633 1DC0  
                                                        l6625 1D90  
                                                        l6617 1D6E  
                                                        l6609 1D30  
                                                        l6561 19AA  
                                                        l6553 1976  
                                                        l6545 192C  
                                                        l6537 190C  
                                                        l6529 1880  
                                                        l6481 1648  
                                                        l6473 1624  
                                                        l6465 15E6  
                                                        l6457 15B4  
                                                        l6449 156E  
                                                        l6721 2A60  
                                                        l6713 2A0A  
                                                        l6705 2976  
                                                        l6801 3592  
                                                        l5851 4C20  
                                                        l5843 4C18  
                                                        l5835 4BDE  
                                                        l5691 52C0  
                                                        l5827 4BB4  
                                                        l5819 4BAC  
                                                        l5683 52AC  
                                                        l5755 5214  
                                                        l5763 51DC  
                                                        l4699 2E44  
                                                        l4867 2826  
                                                        l4859 27EA  
                                                        l4795 2560  
                                                        l4787 251C  
                                                        l4779 24EC  
                                                        l4963 4420  
                                                        l4939 43B2  
                                                        l4875 4D40  
                                                        l4971 4A98  
                                                        l4891 4868  
                                                        l4883 47F6  
                                                        l6651 1EA4  
                                                        l6643 1E5E  
                                                        l6635 1DC4  
                                                        l6627 1D96  
                                                        l6619 1D74  
                                                        l6571 1ABE  
                                                        l6563 1A0E  
                                                        l6547 193E  
                                                        l6555 197E  
                                                        l6539 1918  
                                                        l6491 16AC  
                                                        l6483 165C  
                                                        l6475 1636  
                                                        l6467 15F2  
                                                        l6459 15BE  
                                                        l6731 2AA6  
                                                        l6707 2994  
                                                        l6811 36A4  
                                                        l6803 35A8  
                                                        l5771 4E4E  
                                                        l5861 4872  
                                                        l5853 4C2C  
                                                        l5845 4C1A  
                                                        l5837 4BEA  
                                                        l5693 52D4  
                                                        l5829 4BC0  
                                                        l5685 52A2  
                                                        l5757 51E6  
                                                        l4869 282C  
                                                        l4797 256C  
                                                        l4789 2526  
                                                        l4965 4430  
                                                        l4949 43DC  
                                                        l4877 4D50  
                                                        l6901 50F2  
                                                        l4981 4AF0  
                                                        l4973 4AA6  
                                                        l4893 486E  
                                                        l4885 4806  
                                                        l6661 1F18  
                                                        l6653 1EB2  
                                                        l6637 1DCA  
                                                        l6629 1D9C  
                                                        l6645 1E62  
                                                        l6581 1B7C  
                                                        l6573 1AF2  
                                                        l6565 1A66  
                                                        l6557 1986  
                                                        l6549 194C  
                                                        l6493 16BE  
                                                        l6485 1666  
                                                        l6477 163A  
                                                        l6469 15FA  
                                                        l6741 2AF6  
                                                        l6733 2AAE  
                                                        l6725 2A80  
                                                        l6709 29B2  
                                                        l6717 2A3E  
                                                        l6805 35E8  
                                                        l6821 3266  
                                                        l6813 31FA  
                                                        l5773 4E60  
                                                        l5863 48B8  
                                                        l5695 52E8  
                                                        l5855 4C38  
                                                        l5847 4C1C  
                                                        l5839 4C14  
                                                        l5687 52B6  
                                                        l5791 4B3C  
                                                        l5871 500C  
                                                        l5759 51F8  
                                                        l4799 2578  
                                                        l4967 4440  
                                                        l4959 4404  
                                                        l6903 5104  
                                                        l4975 4ABA  
                                                        l4887 4834  
                                                        l4991 44E4  
                                                        l4983 4452  
                                                        l6663 1F2E  
                                                        l6655 1EE2  
                                                        l6647 1E80  
                                                        l6639 1E22  
                                                        l6591 1C50  
                                                        l6583 1B8C  
                                                        l6575 1B26  
                                                        l6567 1A9A  
                                                        l6559 1996  
                                                        l6495 16C2  
                                                        l6479 1640  
                                                        l6751 2B84  
                                                        l6743 2B2A  
                                                        l6727 2A8C  
                                                        l6719 2A54  
                                                        l6671 2868  
                                                        l6807 3602  
                                                        l6831 3350  
                                                        l6823 329A  
                                                        l6815 320A  
                                                        l5775 4E76  
                                                        l6911 3B0C  
                                                        l5865 48C2  
                                                        l5697 52DE  
                                                        l5857 4C44  
                                                        l5849 4C1E  
                                                        l5689 52CA  
                                                        l5793 4B3E  
                                                        l5873 500E  
                                                        l5881 4A10  
                                                        l5777 50A0  
                                                        l4977 4ACE  
                                                        l4889 4844  
                                                        l4985 4472  
                                                        l6665 1F36  
                                                        l6657 1EF0  
                                                        l6649 1E9C  
                                                        l6593 1C64  
                                                        l6585 1BC0  
                                                        l6577 1B3A  
                                                        l6569 1AA0  
                                                        l6497 16C8  
                                                        l6489 1686  
                                                        l6729 2AA0  
                                                        l6737 2AB6  
                                                        l6681 28B6  
                                                        l6673 2872  
                                                        l6809 3694  
                                                        l6833 3390  
                                                        l6825 32D2  
                                                        l6817 321E  
                                                        l6841 2FA2  
                                                        l6921 3BB6  
                                                        l6913 3B10  
                                                        l6905 4E0C  
                                                        l5859 521E  
                                                        l5699 52F2  
                                                        l5795 4B40  
                                                        l5787 4B06  
                                                        l5867 4FE4  
                                                        l5883 4A1C  
                                                        l5875 49AA  
                                                        l5891 51A6  
                                                        l5779 50B2  
                                                        l4979 4AD2  
                                                        l4987 44B0  
                                                        l4995 44F0  
                                                        l6659 1F08  
                                                        l6587 1C18  
                                                        l6595 1C68  
                                                        l6579 1B6C  
                                                        l6499 16D0  
                                                        l6747 2B5E  
                                                        l6739 2AD4  
                                                        l6683 28D2  
                                                        l6675 2880  
                                                        l6763 2BDC  
                                                        l6771 4CA8  
                                                        l6827 3306  
                                                        l6819 3252  
                                                        l6835 33AA  
                                                        l6851 3042  
                                                        l6843 2FB2  
                                                        l6923 3BEC  
                                                        l6915 3B14  
                                                        l6907 3AD2  
                                                        l6931 4926  
                                                        l5893 4F7A  
                                                        l5797 4B42  
                                                        l5789 4B12  
                                                        l5869 5000  
                                                        l5877 49F8  
                                                        l5885 518A  
                                                        l4997 4502  
                                                        l4989 44D8  
                                                        l6597 1C78  
                                                        l6589 1C1C  
                                                        l6757 2BB4  
                                                        l6749 2B74  
                                                        l6685 28F8  
                                                        l6693 293E  
                                                        l6677 2886  
                                                        l6669 2842  
                                                        l6773 4CC6  
                                                        l6781 5170  
                                                        l6837 343C  
                                                        l6829 333A  
                                                        l6861 3138  
                                                        l6853 307A  
                                                        l6845 2FC6  
                                                        l6925 3CC8  
                                                        l6917 3B4A  
                                                        l6909 3B08  
                                                        l6941 494A  
                                                        l6933 492E  
                                  __end_of_ejecutarModoManual 4E4E  
                                                        l5895 4F80  
                                                        l5799 4B44  
                                                        l5879 4A04  
                                                        l5887 518E  
                                                        l6871 36BA  
                                                        l6599 1C80  
                                                        l6759 2BCE  
                                                        l6695 294C  
                                                        l6687 2902  
                                                        l6679 28AC  
                                                        l6775 4CE4  
                                                        l6791 34AA  
                                                        l6839 344C  
                                                        l6855 30AE  
                                                        l6847 2FFA  
                                                        l6863 3152  
                                                        l6919 3B80  
                                                        l6927 4DCA  
                                                        l6935 4934  
                                                        l5897 4F8C  
                                                        l5889 519A  
                                                        l6881 3782  
                                                        l6873 36CE  
                                                        l6697 2960  
                                                        l6689 2928  
                                                        l6769 4CA0  
                                                        l6793 34BE  
                                                        l6785 3452  
                                                        l6865 31E4  
                                                        l6857 30E2  
                                                        l6849 300E  
                                                        l6937 493C  
                                                        l6929 4920  
                                                        l6945 4956  
                                                        l5899 4F8E  
                                                        l6891 38AA  
                                                        l6883 37B6  
                                                        l6875 3702  
                                                        l6699 2966  
                                                        l6779 5166  
                                                        l6795 34F2  
                                                        l6787 3462  
                                                        l6867 31F4  
                                                        l6859 30F8  
                                                        l6947 498E  
                                                        l6939 4942  
                                                        l6963 4F0A  
                                                        l6893 38BA  
                                                        l6885 37EA  
                                                        l6877 3716  
                                                        l6869 36AA  
                                                        l6797 352A  
                                                        l6789 3476  
                                                        l6965 4F1A  
                                                        l6887 3800  
                                                        l6879 374A  
                                                        l6799 355E  
                                                        l6895 4E90  
                                                        l6967 4F2C  
                                                        l6889 3818  
                                                        l6897 50CA  
                                                        l6969 4F36  
                                                        l6899 50DC  
                                                        l6997 496E  
                                                        STR_1 1550  
                                                        STR_2 1558  
                                                        STR_3 153D  
                                                        STR_4 153D  
                                                        STR_5 153D  
                                                        STR_6 153D  
                                                        STR_7 153D  
                                                        STR_8 155E  
                                                        _LATA 04BE  
                                                        _LATB 04BF  
                                                        _LATC 04C0  
                                                        u4000 24A6  
                                                        u3200 1F72  
                                                        u4001 24A2  
                                                        u3201 1F6E  
                                                        u4010 24B6  
                                                        u3210 1F84  
                                                        u3130 508A  
                                                        u4011 24B2  
                                                        u3211 1F80  
                                                        u3131 5086  
                                                        u4100 275A  
                                                        u4020 24EC  
                                                        u3300 20DE  
                                                        u3220 1F94  
                                                        u3140 5098  
                                                        u4101 2756  
                                                        u4021 24E8  
                                                        u3301 20D8  
                                                        u3221 1F90  
                                                        u3141 5094  
                                                        u4110 2774  
                                                        u4030 24FC  
                                                        u3310 20E0  
                                                        u3230 1FD6  
                                                        u3150 51C2  
                                                        u4111 2770  
                                                        u4031 24F8  
                                                        u3231 1FD2  
                                                        u3151 51BE  
                                                        u4120 27BC  
                                                        u4040 2676  
                                                        u3400 21FA  
                                                        u3320 2108  
                                                        u3240 1FEC  
                                                        u3160 464E  
                                                        u4121 27B8  
                                                        u3401 21F6  
                                                        u3321 2104  
                                                        u3241 1FE8  
                                                        u3161 464A  
                                                        u4130 27EA  
                                                        u4050 26D0  
                                                        u3410 2240  
                                                        u3330 2126  
                                                        u3250 1FFE  
                                                        u3170 4660  
                                                        u4131 27E6  
                                                        u4051 26CC  
                                                        u3411 223C  
                                                        u3331 2122  
                                                        u3251 1FFA  
                                                        u3171 465C  
                                                        u4140 2824  
                                                        u4060 26F0  
                                                        u4300 4430  
                                                        u3500 232C  
                                                        u3420 2276  
                                                        u3340 2146  
                                                        u3260 200E  
                                                        u5100 3E26  
                                                        u3180 4688  
                                                        u4141 2820  
                                                        u4061 26EC  
                                                        u4045 266C  
                                                        u4301 442C  
                                                        u3501 2328  
                                                        u3421 2272  
                                                        u3341 2142  
                                                        u3261 200A  
                                                        u5101 3E22  
                                                        u3181 4684  
                                                        u4070 2702  
                                                        u3510 2340  
                                                        u3430 2286  
                                                        u3350 2154  
                                                        u3270 204A  
                                                        u5110 3E60  
                                                        u5030 3CE0  
                                                        u3190 46BE  
                                                        u4310 4AA6  
                                                        u4150 47F6  
                                                        u4230 4F58  
                                                        u4071 26FE  
                                                        u3511 233C  
                                                        u3431 2282  
                                                        u3351 2150  
                                                        u3271 2046  
                                                        u5111 3E5C  
                                                        u5031 3CDC  
                                                        u3191 46BA  
                                                        u4311 4AA2  
                                                        u4151 47F2  
                                                        u4231 4F54  
                                                        u4080 2730  
                                                        u4240 4362  
                                                        u3520 235A  
                                                        u3440 22B2  
                                                        u3360 2164  
                                                        u3280 2058  
                                                        u5120 3E6E  
                                                        u5040 3CEE  
                                                        u3600 4FBE  
                                                        u4320 4AF0  
                                                        u4160 4834  
                                                        u4400 4F08  
                                                        u4081 272C  
                                                        u4241 435E  
                                                        u3521 2356  
                                                        u3441 22AE  
                                                        u3361 2160  
                                                        u3281 2054  
                                                        u5121 3E6A  
                                                        u5041 3CEA  
                                                        u3601 4FBA  
                                                        u4321 4AEC  
                                                        u4161 4830  
                                                        u4401 4F04  
                                                        u4090 2746  
                                                        u4250 4396  
                                                        u3530 2394  
                                                        u3450 22C2  
                                                        u3370 2196  
                                                        u3290 20C6  
                                                        u5050 3D4A  
                                                        u3610 414C  
                                                        u4170 4868  
                                                        u4330 4492  
                                                        u4410 4C58  
                                                        u4091 2742  
                                                        u3531 2390  
                                                        u3451 22BE  
                                                        u3371 2192  
                                                        u3291 20C2  
                                                        u5051 3D46  
                                                        u3611 4148  
                                                        u4171 4864  
                                                        u4411 4C54  
                                                        u4260 43C4  
                                                        u3540 23A6  
                                                        u3460 22DE  
                                                        u3380 21A4  
                                                        u5060 3DA0  
                                                        u3620 416E  
                                                        u3700 45CC  
                                                        u4340 44B0  
                                                        u4500 3A74  
                                                        u4420 3908  
                                                        u4261 43C0  
                                                        u3541 23A2  
                                                        u3461 22DA  
                                                        u3381 21A0  
                                                        u5061 3D9C  
                                                        u3621 416A  
                                                        u3701 45C8  
                                                        u4341 44AC  
                                                        u4501 3A70  
                                                        u4270 43D8  
                                                        u3550 23B6  
                                                        u3470 22EE  
                                                        u3390 21C2  
                                                        u5070 3DEA  
                                                        u3630 41A8  
                                                        u3710 45EA  
                                                        u4350 44D8  
                                                        u4510 3AB0  
                                                        u4430 3936  
                                                        u4271 43D4  
                                                        u4255 438C  
                                                        u3551 23B2  
                                                        u3471 22EA  
                                                        u3391 21BE  
                                                        u5071 3DE6  
                                                        u3631 41A4  
                                                        u3711 45E6  
                                                        u4351 44D4  
                                                        u4335 4488  
                                                        u4511 3AAC  
                                                        u4431 3932  
                                                        u5400 5214  
                                                        u3800 2D2A  
                                                        u4280 4400  
                                                        u3560 23D6  
                                                        u3480 2300  
                                                        u5080 3E08  
                                                        u3640 41CA  
                                                        u3720 461A  
                                                        u4600 3FE4  
                                                        u4360 4502  
                                                        u4440 3958  
                                                        u4520 4D3E  
                                                        u5401 5210  
                                                        u3801 2D26  
                                                        u4281 43FC  
                                                        u3561 23D2  
                                                        u3481 22FC  
                                                        u5081 3E04  
                                                        u3641 41C6  
                                                        u3721 4616  
                                                        u4601 3FE0  
                                                        u4361 44FE  
                                                        u4441 3954  
                                                        u4425 38FE  
                                                        u4521 4D3A  
                                                        u5410 51F8  
                                                        u3810 2DA0  
                                                        u3730 2C22  
                                                        u4290 4420  
                                                        u3570 23E8  
                                                        u3490 2316  
                                                        u5090 3E18  
                                                        u3650 41F2  
                                                        u4610 3FF4  
                                                        u4530 3E92  
                                                        u5411 51F4  
                                                        u3811 2D9C  
                                                        u3731 2C1E  
                                                        u4291 441C  
                                                        u3571 23E4  
                                                        u3491 2312  
                                                        u5091 3E14  
                                                        u3651 41EE  
                                                        u4611 3FF0  
                                                        u4531 3E8C  
                                                        u5420 51DC  
                                                        u3900 2EBA  
                                                        u3820 2DC2  
                                                        u3740 2C34  
                                                        u6300 42F2  
                                                        u3580 2404  
                                                        u3660 4224  
                                                        u4540 3E94  
                                                        u4380 453C  
                                                        u4460 39C4  
                                                        u5421 51D8  
                                                        u3901 2EB6  
                                                        u3821 2DBE  
                                                        u3741 2C30  
                                                        u6301 42EE  
                                                        u3581 2400  
                                                        u3661 4220  
                                                        u4381 4536  
                                                        u4461 39C0  
                                                        u3910 2ECE  
                                                        u3830 2DEC  
                                                        u3750 2C44  
                                                        u6310 4342  
                                                        u3670 4562  
                                                        u3590 4DC8  
                                                        u4550 3EA6  
                                                        u4390 453E  
                                                        u4470 39E8  
                                                        u3911 2ECA  
                                                        u3831 2DE8  
                                                        u3751 2C40  
                                                        u6311 433E  
                                                        u3671 455E  
                                                        u3591 4DC4  
                                                        u4551 3EA2  
                                                        u4375 4514  
                                                        u4455 396C  
                                                        u7007 3144  
                                                        u3920 2EE8  
                                                        u3840 2E10  
                                                        u3760 2C88  
                                                        u3680 4584  
                                                        u4560 3ED2  
                                                        u4480 3A04  
                                                        u4456 3976  
                                                        u6400 17C0  
                                                        u6320 158C  
                                                        u5440 4E60  
                                                        u3921 2EE4  
                                                        u3841 2E0C  
                                                        u3761 2C84  
                                                        u3681 4580  
                                                        u4561 3ECE  
                                                        u4481 3A00  
                                                        u4457 3986  
                                                        u6401 17BC  
                                                        u6321 1588  
                                                        u7017 339C  
                                                        u5441 4E5C  
                                                        u3930 2F30  
                                                        u3850 2E26  
                                                        u3770 2C9A  
                                                        u5450 50B2  
                                                        u3690 45AA  
                                                        u4570 3EE8  
                                                        u4490 3A58  
                                                        u6410 17F4  
                                                        u6330 15D6  
                                                        u3931 2F2C  
                                                        u3851 2E22  
                                                        u3771 2C96  
                                                        u5451 50AE  
                                                        u3691 45A6  
                                                        u4571 3EE4  
                                                        u4475 39DE  
                                                        u6411 17F0  
                                                        u6331 15D2  
                                                        u7027 35F4  
                                                        u3940 2F60  
                                                        u3860 2E44  
                                                        u3780 2CAA  
                                                        u4580 3FB4  
                                                        u6500 1B26  
                                                        u6420 1830  
                                                        u6340 15E6  
                                                        u3941 2F5C  
                                                        u3861 2E40  
                                                        u3781 2CA6  
                                                        u7037 380A  
                                                        u4581 3FB0  
                                                        u6501 1B22  
                                                        u6421 182C  
                                                        u6341 15E2  
                                                        u3950 2F8E  
                                                        u3870 2E64  
                                                        u3790 2CEA  
                                                        u6270 4276  
                                                        u4590 3FCA  
                                                        u6510 1B6C  
                                                        u6430 18BC  
                                                        u6350 1624  
                                                        u3951 2F8A  
                                                        u3871 2E60  
                                                        u3791 2CE6  
                                                        u6271 4272  
                                                        u4591 3FC6  
                                                        u4495 3A4E  
                                                        u6511 1B68  
                                                        u6431 18B8  
                                                        u6351 1620  
                                                        u3880 2E76  
                                                        u3960 2432  
                                                        u6280 42B4  
                                                        u6600 1E9C  
                                                        u6520 1B7C  
                                                        u6440 18F4  
                                                        u6360 1636  
                                                        u3881 2E72  
                                                        u3961 242E  
                                                        u6281 42B0  
                                                        u6601 1E98  
                                                        u6521 1B78  
                                                        u6441 18F0  
                                                        u6361 1632  
                                                        u3890 2EA4  
                                                        u3970 2444  
                                                        u6290 42D2  
                                                        u6610 1F02  
                                                        u6530 1C18  
                                                        u6450 190C  
                                                        u6370 16AC  
                                                        u3891 2EA0  
                                                        u3971 2440  
                                                        u6291 42CE  
                                                        u6611 1EFC  
                                                        u6531 1C14  
                                                        u6451 1908  
                                                        u6371 16A8  
                                                        u3980 2454  
                                                        u6620 1F04  
                                                        u6540 1C64  
                                                        u6460 193E  
                                                        u6380 16BE  
                                                        u4940 4734  
                                                        u6700 4CE4  
                                                        u3981 2450  
                                                        u6541 1C60  
                                                        u6461 193A  
                                                        u6381 16BA  
                                                        u4941 4730  
                                                        u6701 4CE0  
                                                        u3990 2494  
                                                        u6630 1F18  
                                                        u6550 1D10  
                                                        u6470 194C  
                                                        u6390 1734  
                                                        u4950 47BE  
                                                        u6710 3462  
                                                        u3991 2490  
                                                        u6631 1F14  
                                                        u6551 1D0C  
                                                        u6471 1948  
                                                        u6391 1730  
                                                        u4951 47BA  
                                                        u6711 345E  
                                                        u6560 1D4C  
                                                        u6480 1976  
                                                        u6640 2868  
                                                        u6720 34AA  
                                                        u6800 3306  
                                                        u6561 1D48  
                                                        u6481 1972  
                                                        u6641 2864  
                                                        u6721 34A6  
                                                        u6801 3302  
                                                        u6570 1D5A  
                                                        u6490 1ABE  
                                                        u6650 28AC  
                                                        u6730 34F2  
                                                        u6810 343C  
                                                        u6571 1D56  
                                                        u6491 1ABA  
                                                        u6651 28A8  
                                                        u6731 34EE  
                                                        u6811 3438  
                                                        u6900 3702  
                                                        u6580 1DAE  
                                                        u6660 28F8  
                                                        u6740 355E  
                                                        u6820 344C  
                                                        u6901 36FE  
                                                        u6581 1DAA  
                                                        u6661 28F4  
                                                        u6741 355A  
                                                        u6821 3448  
                                                        u6910 374A  
                                                        u6590 1E80  
                                                        u6670 29B2  
                                                        u6750 3694  
                                                        u6830 2FB2  
                                                        u6911 3746  
                                                        u6591 1E7C  
                                                        u6671 29AE  
                                                        u6751 3690  
                                                        u6831 2FAE  
                                                        u6920 37B6  
                                                        u6680 29D0  
                                                        u6760 36A4  
                                                        u6840 2FFA  
                                                        u6921 37B2  
                                                        u6681 29CC  
                                                        u6761 36A0  
                                                        u6841 2FF6  
                                                        u6930 38AA  
                                                        u6690 2AF2  
                                                        u6770 320A  
                                                        u6850 3042  
                                                        u6931 38A6  
                                                        u6691 2AEE  
                                                        u6771 3206  
                                                        u6851 303E  
                                                        u6940 38BA  
                                                        u6780 3252  
                                                        u6860 30AE  
                                                        u6941 38B6  
                                                        u6781 324E  
                                                        u6861 30AA  
                                                        u6790 329A  
                                                        u6870 31E4  
                                                        u6950 50DC  
                                                        u6791 3296  
                                                        u6871 31E0  
                                                        u6951 50D8  
                                                        u6960 5104  
                                                        u6880 31F4  
                                                        u6961 5100  
                                                        u6881 31F0  
                                                        u6890 36BA  
                                                        u6891 36B6  
                                                        u6987 499A  
                                                        u6997 4E80  
                                                        _WPUA 0401  
                                                        _WPUB 0409  
                                                        _WPUC 0411  
                                                        abs@a 0547  
                                                        _dbuf 0612  
                                                        _labs 4C4A  
                                                        _main 4F0A  
                                                        _dtoa 3E82  
                                                        _set0 3452  
                                                        _set1 31FA  
                                                        _set2 2FA2  
                                                        _set3 36AA  
                                                        _prec 05E1  
                                                        pad@i 051C  
                                                        pad@p 0519  
                                                        fsr1h 04E2  
                                                        fsr2h 04DA  
                                                        indf2 04DF  
                                                        fsr1l 04E1  
                                                        fsr2l 04D9  
                                               ___fpclassifyf 4452  
                                   ?_INT2_SetInterruptHandler 0503  
                                                        prodh 04F4  
                                                        prodl 04F3  
                                                        start 001A  
                                             ___fldiv@new_exp 0514  
                                             _UART1_IsRxReady 0000  
                                             _UART1_IsTxReady 5076  
                                                ___param_bank 0000  
                                                       ??_abs 0549  
                                                       ??_pad 051B  
   PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue 0503  
   PWM2_16BIT_SetSlice1Output1DutyCycleRegister@registerValue 0503  
   PWM3_16BIT_SetSlice1Output1DutyCycleRegister@registerValue 0503  
                                     __end_of_TMR0_Initialize 5016  
                                            __end_of_INT0_ISR 532A  
                                               ___fltol@sign1 0545  
                                             __end_of___aldiv 4246  
                                                       ?_labs 0503  
                                             __end_of___almod 463C  
                                             __end_of___fladd 2418  
                                                       ?_main 0501  
                                                       ?_dtoa 054B  
                                                       ?_set0 05C3  
                                                       ?_set1 05C3  
                                                       ?_set2 05C3  
                                                       ?_set3 056C  
                                             __end_of___fldiv 2FA2  
                                             __end_of___flneg 4F7A  
                                                       STR_11 1562  
                                             __end_of___flmul 2842  
                                             __end_of___flsub 4D86  
                                             __end_of___fltol 4452  
                                                       _U1P1H 02A6  
                                                       _U1P2H 02A8  
                                                       _U1P1L 02A5  
                                                       _U1P3H 02AA  
                                                       _U1P2L 02A7  
                                                       _U1P3L 02A9  
                                                       _IOCAF 0407  
                                                       _IOCBF 040F  
                                                       _IOCCF 0417  
                                                       _IOCAN 0406  
                                                       _IOCAP 0405  
                                                       _IOCBN 040E  
                                                       _IOCCN 0416  
                                                       _IOCBP 040D  
                                                       _IOCCP 0415  
                                                       _U1UIR 02B1  
                                                       _U1RXB 02A1  
                                                       _U1TXB 02A3  
                                                       i2l500 503E  
                                                       i2l503 5328  
                                                       i2l513 5350  
                                                       i2l507 5074  
                                      ?_PWM1_16BIT_Initialize 0501  
                                                       _OSCEN 00B3  
                                                       _UART1 1501  
                                                vfpfcnvrt@fmt 05A1  
                                                       _TMR0H 0319  
                                                       _TMR0L 0318  
                                        _UART1_IsTxReady$1897 0503  
                                                       _TRISA 04C6  
                                                       _TRISB 04C7  
                                              ?_INT0_CallBack 0501  
                                                       _TRISC 04C8  
                                            _executeQueueHead 055C  
                  __end_of_UART1_FramingErrorCallbackRegister 521E  
                        ??_UART1_FramingErrorCallbackRegister 0505  
                         ?_UART1_FramingErrorCallbackRegister 0503  
                          _UART1_FramingErrorCallbackRegister 5202  
            _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler 0000  
            _PWM2_16BIT_Slice1Output1_DefaultInterruptHandler 0000  
            _PWM3_16BIT_Slice1Output1_DefaultInterruptHandler 0000  
                                                 ?_TMR0_Start 0501  
                                                 ?_TMR0_Write 0503  
                                                       _flags 05ED  
                                                       _dummy 0662  
                                         read_prec_or_width@c 050F  
                                         read_prec_or_width@n 0510  
                                                       _fputc 463C  
                                                       _fputs 4D86  
                                                       labs@a 0503  
                                                       pad@fp 0515  
                                                       _width 0608  
                                                       _putch 51AC  
                                                       dtoa@d 054D  
                                                       dtoa@i 0558  
                                                       dtoa@p 0555  
                                                       dtoa@s 0557  
                                                       dtoa@w 0553  
                      __end_of_PWM2_16BIT_LoadBufferRegisters 534C  
                              _PWM2_16BIT_LoadBufferRegisters 5348  
                                    _INT1_SetInterruptHandler 5306  
                                                       pclath 04FA  
                                                       pclatu 04FB  
                                                       tablat 04F5  
                                                       status 04D8  
                                              ?___fpclassifyf 0503  
                                       _PWM2_16BIT_Initialize 4B72  
                                             __initialization 4A28  
                                        _UART1_TransmitEnable 0000  
                                                __end_of_labs 4CA0  
                                                __end_of_main 4F42  
                                                __end_of_dtoa 402C  
                                                __end_of_set0 36AA  
                                                __end_of_set1 3452  
                                                __end_of_set2 31FA  
                                                __end_of_set3 38C0  
                                    ??_ejecutarModoAutomatico 055C  
                                 ?_INTERRUPT_InterruptManager 0501  
                                                ?_UART1_Write 0501  
                                                      ??_labs 0507  
                                                      ??_main 055C  
                                                      ??_dtoa 0551  
                                                      ??_set0 05C7  
                                                      ??_set1 05C7  
                                                      ??_set2 05C7  
                                                      ??_set3 0559  
                                               __activetblptr 0003  
               __end_of_PWM1_16BIT_Period_SetInterruptHandler 52FC  
               __end_of_PWM2_16BIT_Period_SetInterruptHandler 52DE  
               __end_of_PWM3_16BIT_Period_SetInterruptHandler 52C0  
                     ??_PWM1_16BIT_Period_SetInterruptHandler 0505  
                     ??_PWM2_16BIT_Period_SetInterruptHandler 0505  
                     ??_PWM3_16BIT_Period_SetInterruptHandler 0505  
                      ?_PWM1_16BIT_Period_SetInterruptHandler 0503  
                      ?_PWM2_16BIT_Period_SetInterruptHandler 0503  
                      ?_PWM3_16BIT_Period_SetInterruptHandler 0503  
                       _PWM1_16BIT_Period_SetInterruptHandler 52F2  
                       _PWM2_16BIT_Period_SetInterruptHandler 52D4  
                       _PWM3_16BIT_Period_SetInterruptHandler 52B6  
                                  __end_of_read_prec_or_width 47C8  
                                       __end_of_setServoAngle 413A  
                                            _UART1_Initialize 49AA  
            UART1_ParityErrorCallbackRegister@callbackHandler 0503  
           UART1_OverrunErrorCallbackRegister@callbackHandler 0503  
           UART1_FramingErrorCallbackRegister@callbackHandler 0503  
                          _PWM3_16BIT_Period_InterruptHandler 067A  
                                                      ?_fputc 0505  
                                                      _ACTCON 00AC  
                                                      ?_fputs 050E  
                                  __end_of_timeout_initialize 51AC  
                                                      _ANSELA 0400  
                                                      ?_putch 0501  
                                                      _ANSELB 0408  
                                                      _ANSELC 0410  
                                                      _T0CON0 031A  
                                                      _T0CON1 031B  
                                                      _RB4I2C 0287  
                                                      _U1CON0 02AB  
                                                      _U1CON1 02AC  
                                                      _U1CON2 02AD  
                                                      _RB6I2C 0286  
                                                      _U1BRGH 02AF  
                                                      _U1FIFO 02B0  
                                                      _U1BRGL 02AE  
                                                      _RB4PPS 020D  
                                                      _RB6PPS 020F  
                                                      _RC4PPS 0215  
                                                      _RC5PPS 0216  
                                                      _RB7PPS 0210  
                                                      _ODCONA 0402  
                                                      _ODCONB 040A  
                                                      _RC6PPS 0217  
                                                      _ODCONC 0412  
                                                      _RC7PPS 0218  
                                                      i2l1039 5342  
                                                      i2l1078 5330  
                                                      i2l6211 501E  
                                                      i2l6053 5322  
                                                      i2l6213 502C  
                                                      i2l6055 5324  
                                                      i2l6215 503A  
                                                      _INLVLA 0404  
                                                      _INLVLB 040C  
                                                      _INLVLC 0414  
                                                      i2l5571 532A  
                                                      i2l5907 5048  
                                                      i2l5909 505C  
                                                      i2l5785 533E  
                                     __end_of_UART1_IsTxReady 50A0  
                                                      _OSCFRQ 00B1  
                                            __end_of___xxtofl 3E82  
                                               _lastTimerLoad 05D9  
                                           __end_of_ISR_Boton 5344  
                                                      _Timer0 1531  
                                                vfprintf@cfmt 055B  
                                                      ___flge 4246  
                                                      ___fleq 47C8  
                                                   ??___aldiv 050B  
                                                   ??___almod 050B  
                                                   ??___fladd 050B  
                                           __end_of_TMR0_Stop 5338  
                                                      ___wmul 511A  
                                                   ??___fldiv 050B  
                                                   ??___flneg 0507  
                                                   ??___flmul 0524  
                                                   ??___flsub 053D  
                                                   ??___fltol 0541  
                                                      _efgtoa 1568  
                                                      _floorf 38C0  
                                                      _memcpy 4CF0  
                                            ?_TMR0_Initialize 0501  
                                        read_prec_or_width@ap 050B  
                                                      clear_0 4A6E  
                                                      clear_1 4A7A  
                                                      _theta0 05FB  
                                                      _theta1 05F7  
                                                      _theta2 05F3  
                                                      _theta3 05D5  
                                                      isa$std 0001  
                                                      _printf 5166  
                                                      pad@buf 0517  
                                             ??_INT0_CallBack 0501  
                                                      dtoa@fp 054B  
                                           ?_CLOCK_Initialize 0501  
                                                      _strcpy 4ECE  
                                            __end_of_openHand 50F2  
                                            __end_of_openGate 4E90  
                                                      fputc@c 0505  
                                _INT2_DefaultInterruptHandler 0000  
                                                      fputs@c 0512  
                                                      fputs@i 0513  
                                                      fputs@s 050E  
                                          ??_CLOCK_Initialize 0503  
                                             ___fpclassifyf@e 050B  
                                             ___fpclassifyf@u 050D  
                                             ___fpclassifyf@x 0503  
                                                __mediumconst 0000  
                                                      tblptrh 04F7  
                                                      tblptrl 04F6  
                                                      tblptru 04F8  
                  __end_of_UART1_OverrunErrorCallbackRegister 5202  
                        ??_UART1_OverrunErrorCallbackRegister 0505  
                         ?_UART1_OverrunErrorCallbackRegister 0503  
                          _UART1_OverrunErrorCallbackRegister 51E6  
                                            __end_of_vfprintf 4CF0  
                    INT2_SetInterruptHandler@InterruptHandler 0503  
                    INT1_SetInterruptHandler@InterruptHandler 0503  
                    INT0_SetInterruptHandler@InterruptHandler 0503  
       PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler 0503  
PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0503  
PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0503  
       PWM2_16BIT_Period_SetInterruptHandler@InterruptHandler 0503  
PWM2_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0503  
PWM2_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0503  
       PWM3_16BIT_Period_SetInterruptHandler@InterruptHandler 0503  
PWM3_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0503  
PWM3_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0503  
                                                  ___flge@ff1 0560  
                                             ??___fpclassifyf 0507  
                                                  ___flge@ff2 0564  
                                           _UART1_AutoBaudSet 0000  
                                                ___xxtofl@arg 0555  
                                                ___xxtofl@exp 0554  
                                           _SYSTEM_Initialize 5140  
                                                ___xxtofl@val 054B  
                                                  ___fleq@ff1 0503  
                                                  ___fleq@ff2 0507  
                                                  __accesstop 0560  
                                     __end_of__initialization 4A92  
                                                   ?_INT0_ISR 0501  
                                                  ___flneg@f1 0503  
                                          setServoAngle@servo 054B  
                                          ?_SYSTEM_Initialize 0501  
                                      ?_PWM2_16BIT_Initialize 0501  
                                               ___rparam_used 0001  
                                                  ___fltol@f1 053D  
                                               __end_of_UART1 1531  
                                              __pcstackCOMRAM 0501  
                                                __pidataBANK5 523A  
                                                __pidataBANK6 5252  
                                         ??_SYSTEM_Initialize 0507  
                                       _UART1_TransmitDisable 0000  
                                               __end_of_fputc 4706  
                                               __end_of_fputs 4DCA  
                                               __end_of_putch 51CA  
                                       _PWM3_16BIT_Initialize 4B06  
                            __end_of_INT2_SetInterruptHandler 5306  
                                   _UART1_FramingErrorHandler 05E3  
                                                     ??_fputc 0509  
                                   __end_of_SYSTEM_Initialize 5166  
                                                     ??_fputs 0512  
                                                     ??_putch 0504  
                                                  __pbssBANK5 05D5  
                                                  __pbssBANK6 0600  
                                          set1@theta1_desired 05C3  
                                            ?_UART1_IsTxReady 0501  
                                       _INT0_InterruptHandler 05EB  
                                                  ??_INT0_ISR 0501  
                                       _TMR0_OverflowCallback 066C  
                                                     IVTBASEH 045E  
                                                     IVTBASEL 045D  
                                                     IVTBASEU 045F  
                                          _UART1_Deinitialize 0000  
                                            _ejecutarModoUART 4DCA  
                                          _ejecutarModoManual 4E0C  
                                                     ?___flge 0560  
                                                     ?___fleq 0503  
                                                     ?___wmul 0503  
                                                     ?_efgtoa 056C  
                                                     ?_floorf 051C  
                                                     ?_memcpy 0503  
                                     ??_PWM1_16BIT_Initialize 0505  
                                         _modo_funcionamiento 05EF  
                                                     ?_printf 05B2  
                                         ?_ejecutarModoManual 0501  
                                                     ?_strcpy 0503  
                                                     _U1ERRIE 02B3  
                                                     _U1ERRIR 02B2  
                                  ??_INT1_SetInterruptHandler 0505  
                                                     _INT0PPS 023E  
                                                     _U1RXCHK 02A2  
                                                     _U1TXCHK 02A4  
                                                     _U1RXPPS 0272  
                                                   ?___xxtofl 054B  
                                                     _OSCCON1 00AD  
                                                     _OSCCON3 00AF  
                                                     _OSCTUNE 00B0  
                                                     _PWM1CLK 0461  
                                                     _PWM1GIE 0468  
                                                     _PWM2CLK 0470  
                                                     _PWM1CON 0469  
                                                     _PWM2GIE 0477  
                                                     _PWM3CLK 047F  
                                                     _PWM2CON 0478  
                                                     _PWM1GIR 0467  
                                                     _PWM3GIE 0486  
                                                     _PWM3CON 0487  
                                                     _PWM2GIR 0476  
                                                     _PWM1ERS 0460  
                                                     _PWM1LDS 0462  
                                                     _PWM3GIR 0485  
                                                     _PWM2ERS 046F  
                                                     _PWM2LDS 0471  
                                                     _PWM3ERS 047E  
                                                     _PWM3LDS 0480  
                                                ??_TMR0_Start 0503  
                                                     _PWM1PRH 0464  
                                                     _PWM1PRL 0463  
                                                     _PWM2PRH 0473  
                                                     _PWM2PRL 0472  
                                                     _PWM3PRH 0482  
                                                     _PWM3PRL 0481  
                                                     _SLRCONA 0403  
                                                     _SLRCONB 040B  
                                                     _SLRCONC 0413  
                                                ??_TMR0_Write 0505  
   PWM1_16BIT_SetSlice1Output2DutyCycleRegister@registerValue 0503  
   PWM2_16BIT_SetSlice1Output2DutyCycleRegister@registerValue 0503  
   PWM3_16BIT_SetSlice1Output2DutyCycleRegister@registerValue 0503  
                                           _detenerMovimiento 532A  
                                      _ejecutarModoAutomatico 3AD2  
                                          ?_detenerMovimiento 0501  
                                        ??_ejecutarModoManual 055C  
                                   ?_INT0_SetInterruptHandler 0503  
                                                   ?_openHand 0501  
                                                   ?_openGate 0501  
                                                     __Hparam 0000  
                                         ??_detenerMovimiento 0501  
                                                     __Lparam 0000  
                                    __end_of_UART1_Initialize 4A28  
                                           __end_of_closeHand 511A  
                                           __end_of_closeGate 50CA  
                                                     ___aldiv 413A  
                                                     ___almod 4550  
                                                     ___fladd 1F58  
                            ??_PWM2_16BIT_LoadBufferRegisters 0503  
                             ?_PWM2_16BIT_LoadBufferRegisters 0501  
                                                     ___fldiv 2C08  
                                          set3@theta3_desired 056C  
                                                     ___flneg 4F42  
                                                     ___flmul 2418  
                                                     ___flsub 4D40  
                                                     ___fltol 434C  
                                                   ?_vfprintf 05AD  
                                                __psmallconst 1500  
                                          __end_of_TMR0_Start 533E  
                                                  _dummy_exec 0680  
                                          __end_of_TMR0_Write 5252  
                                                     __pcinit 4A28  
                                                     __ramtop 1500  
                                                     _detener 05EE  
                                                     __ptext0 4F0A  
                                                     __ptext1 491A  
                                                     __ptext2 4DCA  
                                                     __ptext3 4E0C  
                                                     __ptext4 3AD2  
                                                     __ptext5 50CA  
                                                     __ptext6 4E4E  
                                                     __ptext7 4E90  
                                                     __ptext8 2FA2  
                                                     __ptext9 31FA  
                                                  _modoActual 060A  
                                                  _goto_servo 4E90  
        __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler 52F2  
        __end_of_PWM2_16BIT_Slice1Output1_SetInterruptHandler 52D4  
        __end_of_PWM3_16BIT_Slice1Output1_SetInterruptHandler 52B6  
              ??_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0505  
              ??_PWM2_16BIT_Slice1Output1_SetInterruptHandler 0505  
              ??_PWM3_16BIT_Slice1Output1_SetInterruptHandler 0505  
               ?_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0503  
               ?_PWM2_16BIT_Slice1Output1_SetInterruptHandler 0503  
               ?_PWM3_16BIT_Slice1Output1_SetInterruptHandler 0503  
                _PWM1_16BIT_Slice1Output1_SetInterruptHandler 52E8  
                _PWM2_16BIT_Slice1Output1_SetInterruptHandler 52CA  
                _PWM3_16BIT_Slice1Output1_SetInterruptHandler 52AC  
                                      ?_PWM3_16BIT_Initialize 0501  
                                       read_prec_or_width@fmt 0509  
                                                  ??___xxtofl 054F  
                                     _timerTMR0ReloadVal16bit 05E5  
                                            ___aldiv@dividend 0503  
                                    ??_PIN_MANAGER_Initialize 0503  
                                   __end_of_detenerMovimiento 5332  
                                                     efgtoa@c 0572  
                                                     efgtoa@d 057E  
                                                     efgtoa@e 0582  
                                                     efgtoa@f 056E  
                                                     efgtoa@g 0595  
                                                     efgtoa@h 058C  
                                                     efgtoa@i 058A  
                                                     efgtoa@l 0590  
                                                     efgtoa@m 0580  
                                                     efgtoa@n 0599  
                                                     efgtoa@p 0575  
                                                     efgtoa@t 0577  
                                                     efgtoa@u 059B  
                                                     efgtoa@w 0584  
                                        end_of_initialization 4A92  
            _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler 0000  
            _PWM2_16BIT_Slice1Output2_DefaultInterruptHandler 0000  
            _PWM3_16BIT_Slice1Output2_DefaultInterruptHandler 0000  
                                                   _U1UIRbits 02B1  
                                                     floorf@e 052A  
                                                     floorf@m 0526  
                                    _INT2_SetInterruptHandler 52FC  
                                                     floorf@u 052C  
                                                     floorf@x 051C  
                                                     memcpy@d 0509  
                                                     memcpy@n 0507  
                                                   _PIR10bits 04BD  
                                                     memcpy@s 050B  
                                                     fputc@fp 0507  
                                                     fputs@fp 0510  
                                          _read_prec_or_width 4706  
                                                  ??_openHand 055B  
                                                  ??_openGate 054E  
                                           __end_of_vfpfcnvrt 2C08  
                                                  efgtoa@mode 057C  
                                                  efgtoa@sign 0594  
                                          _timeout_initialize 518A  
                                            ___aldiv@quotient 050D  
                                                     postdec1 04E5  
                                                     postdec2 04DD  
                                         ?_read_prec_or_width 0509  
                                                   _PWM1S1CFG 046A  
                                                   _PWM1S1P1H 046C  
                                                   _PWM1S1P2H 046E  
                                                   _PWM1S1P1L 046B  
                                                   _PWM1S1P2L 046D  
                                                   _ISR_Boton 533E  
                                                   _PWM2S1CFG 0479  
                                                   _PWM2S1P1H 047B  
                                                     postinc0 04EE  
                                                   _PWM2S1P2H 047D  
                                                     postinc1 04E6  
                                                     postinc2 04DE  
                                                   _PWM2S1P1L 047A  
                                                   _PWM2S1P2L 047C  
                                                   _PWM3S1CFG 0488  
                                                   _PWM3S1P1H 048A  
                                                   _PWM3S1P2H 048C  
                                                   _PWM3S1P1L 0489  
                                                   _PWM3S1P2L 048B  
                                            vfpfcnvrt@convarg 05A7  
                                                   _PWM1PIPOS 0466  
                                                   _PWM2PIPOS 0475  
                                                   _PWM3PIPOS 0484  
                                                  ??_vfprintf 055B  
                      __end_of_PWM3_16BIT_LoadBufferRegisters 5348  
                              _PWM3_16BIT_LoadBufferRegisters 5344  
                                           UART1_Write@txData 0503  
                                                     strcpy@d 0507  
                            _UART1_DefaultParityErrorCallback 0000  
                                         ?_timeout_initialize 0501  
                                       _INT1_InterruptHandler 05E9  
                                                   _TMR0_Stop 5332  
                       __end_of_TMR0_OverflowCallbackRegister 52A2  
                               _TMR0_OverflowCallbackRegister 5298  
                                                 ___fladd@grs 0512  
                                               ___xxtofl@sign 0553  
                                         setServoAngle@angulo 0547  
                TMR0_OverflowCallbackRegister@CallbackHandler 0503  
                                        ??_read_prec_or_width 050D  
                                                 ___fldiv@grs 0516  
                                                 ___fldiv@rem 050F  
                                     ??_PWM2_16BIT_Initialize 0505  
                                                 ___flmul@grs 0529  
                                        ??_timeout_initialize 0505  
                                _TMR0_DefaultOverflowCallback 0000  
                                                  ?_ISR_Boton 0501  
                                              __end_of_Timer0 153D  
                                __end_of_INTERRUPT_Initialize 4FB0  
                                              __end_of___flge 434C  
                                              __end_of___fleq 4872  
                        __end_of_INT0_DefaultInterruptHandler 5352  
                                _INT0_DefaultInterruptHandler 5350  
                                                 vfpfcnvrt@ap 05A3  
                                                 vfpfcnvrt@cp 05AC  
                                                 vfpfcnvrt@fp 059F  
                                              __end_of___wmul 5140  
                                              __end_of_efgtoa 1F58  
                                                  ?_TMR0_Stop 0501  
                                              __end_of_floorf 3AD2  
                                              __end_of_memcpy 4D40  
                                                  floorf@F521 0600  
                                                 ?_goto_servo 05C9  
                                              __end_of_printf 518A  
                                       __end_of_INT0_CallBack 5076  
                                              __end_of_strcpy 4F0A  
                                         start_initialization 4A28  
                                    __end_of_ejecutarModoUART 4E0C  
                                                 __end_of_abs 4FE4  
                                                 __end_of_pad 4B06  
                                                 putch@txData 0504  
                                                  ivt0x8_base 0008  
                                       __end_of___fpclassifyf 4550  
                                                 vfprintf@fmt 05AF  
                                                    ??___flge 0568  
                                                    ??___fleq 050B  
                                    goto_servo@theta0_desired 05C9  
                                                    ??___wmul 0507  
                                                    ??_efgtoa 0559  
                                    goto_servo@theta1_desired 05CD  
                                                 __pdataBANK5 05F3  
                                                 __pdataBANK6 0680  
                                                    ??_floorf 0520  
                                                    ??_memcpy 0509  
                                    goto_servo@theta2_desired 05D1  
                               ?_INT0_DefaultInterruptHandler 0501  
                                                    ??_printf 055C  
                                                    ??_strcpy 0506  
                               __end_of_PWM1_16BIT_Initialize 4C4A  
                                                _dummyHandler 0000  
                                                   ___fladd@a 0507  
                                                   ___fladd@b 0503  
                                                   ___fldiv@a 0507  
                                                   ___fldiv@b 0503  
                                                   ___flmul@a 0520  
                                                   ___flmul@b 051C  
                                                 __pbssCOMRAM 055C  
                                                   ___flsub@a 0539  
                                                   ___flsub@b 0535  
                            __end_of_INT0_SetInterruptHandler 531A  
                                               __pcstackBANK5 0560  
                                               __pcstackBANK6 068A  
                                     ?_ejecutarModoAutomatico 0501  
                                               _setServoAngle 402C  
                              ?_TMR0_OverflowCallbackRegister 0503  
                                       _INT2_InterruptHandler 05E7  
                                                   __pnvBANK6 066C  
                                                 _efgtoa$2680 0579  
                                      _PIN_MANAGER_Initialize 4872  
                                                   _dtoa$2649 0551  
                                           ?_UART1_Initialize 0501  
                                                 ??_ISR_Boton 0501  
                                                    ?___aldiv 0503  
                                                    ?___almod 0503  
                                                    ?___fladd 0503  
                                                    ?___fldiv 0503  
                                                    ?___flneg 0503  
                                                    ?___flmul 051C  
                                                    ?___flsub 0535  
                                                    ?___fltol 053D  
                                          ??_UART1_Initialize 0505  
                                                   _closeHand 50F2  
                                                   _closeGate 50A0  
                                     ??_PWM3_16BIT_Initialize 0505  
                                            _uart1RxLastError 0610  
                                               ??_UART1_Write 0503  
                                ??_INTERRUPT_InterruptManager 0501  
                                            ___almod@dividend 0503  
                                                 ??_TMR0_Stop 0503  
                                   _absoluteTimeofLastTimeout 05DD  
                                                 __smallconst 1500  
                                  ??_INT2_SetInterruptHandler 0505  
                              __end_of_ejecutarModoAutomatico 3CCE  
                                              ?_setServoAngle 0547  
                                                   _isRunning 05F0  
                                                 _U1ERRIRbits 02B2  
                                        _INTERRUPT_Initialize 4F7A  
                   _PWM1_16BIT_Period_DefaultInterruptHandler 0000  
                   _PWM2_16BIT_Period_DefaultInterruptHandler 0000  
                   _PWM3_16BIT_Period_DefaultInterruptHandler 0000  
                                             ___aldiv@divisor 0507  
                                            _CLOCK_Initialize 521E  
                                           ??_TMR0_Initialize 0505  
                                             ___aldiv@counter 050B  
                                                    _INT0_ISR 5322  
                                              ___wmul@product 0507  
                                                    _LATCbits 04C0  
                                   ?_INT1_SetInterruptHandler 0503  
                          _PWM2_16BIT_Period_InterruptHandler 0674  
                                                    _PIE1bits 04A9  
                                                    _PIE3bits 04AB  
                                                    _PIE4bits 04AC  
                                                    _PIE5bits 04AD  
                                                    _PIE7bits 04AF  
                                                    _PIR1bits 04B4  
                                                    _PIR3bits 04B6  
                                                    _PIR4bits 04B7  
                                                    _PIR5bits 04B8  
                                                    i2u547_40 505C  
                                                    i2u547_41 5058  
                                                    _PIR6bits 04B9  
                                                    i2u548_48 5062  
                                                    i2u548_49 5074  
                                                    _PIR7bits 04BA  
                                                    i2u596_40 502C  
                                                    i2u596_41 5028  
                                                    i2u597_40 503A  
                                                    i2u597_41 5036  
                                                    _PWM1CPRE 0465  
                                                    _PWM2CPRE 0474  
                                                    _PWM3CPRE 0483  
        __end_of_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 5298  
        __end_of_PWM2_16BIT_SetSlice1Output1DutyCycleRegister 5284  
        __end_of_PWM3_16BIT_SetSlice1Output1DutyCycleRegister 5270  
              ??_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 0505  
              ??_PWM2_16BIT_SetSlice1Output1DutyCycleRegister 0505  
              ??_PWM3_16BIT_SetSlice1Output1DutyCycleRegister 0505  
               ?_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 0503  
               ?_PWM2_16BIT_SetSlice1Output1DutyCycleRegister 0503  
               ?_PWM3_16BIT_SetSlice1Output1DutyCycleRegister 0503  
                _PWM3_16BIT_SetSlice1Output1DutyCycleRegister 5266  
                _PWM2_16BIT_SetSlice1Output1DutyCycleRegister 527A  
                _PWM1_16BIT_SetSlice1Output1DutyCycleRegister 528E  
                      __end_of_PWM1_16BIT_LoadBufferRegisters 5350  
                              _PWM1_16BIT_LoadBufferRegisters 534C  
                                                  ?_closeHand 0501  
                                                  ?_closeGate 0501  
                                                   _vfpfcnvrt 2842  
                                           _evaluarModoActual 491A  
                                           ___wmul@multiplier 0503  
        __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler 52E8  
        __end_of_PWM2_16BIT_Slice1Output2_SetInterruptHandler 52CA  
        __end_of_PWM3_16BIT_Slice1Output2_SetInterruptHandler 52AC  
              ??_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0505  
              ??_PWM2_16BIT_Slice1Output2_SetInterruptHandler 0505  
              ??_PWM3_16BIT_Slice1Output2_SetInterruptHandler 0505  
               ?_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0503  
               ?_PWM2_16BIT_Slice1Output2_SetInterruptHandler 0503  
               ?_PWM3_16BIT_Slice1Output2_SetInterruptHandler 0503  
                _PWM1_16BIT_Slice1Output2_SetInterruptHandler 52DE  
                _PWM2_16BIT_Slice1Output2_SetInterruptHandler 52C0  
                _PWM3_16BIT_Slice1Output2_SetInterruptHandler 52A2  
                                          ?_evaluarModoActual 0501  
                              ??_INT0_DefaultInterruptHandler 0501  
                                         __end_of_UART1_Write 5322  
                                          set0@theta0_desired 05C3  
                            ??_PWM3_16BIT_LoadBufferRegisters 0503  
                             ?_PWM3_16BIT_LoadBufferRegisters 0501  
                                                  vfpfcnvrt@c 05AB  
                                                 _INTCON0bits 04D6  
                   _PWM3_16BIT_Slice1Output1_InterruptHandler 067E  
                   _PWM2_16BIT_Slice1Output1_InterruptHandler 0678  
                   _PWM1_16BIT_Slice1Output1_InterruptHandler 0672  
                                         ??_evaluarModoActual 068A  
                                                   copy_data0 4A3C  
                                                   copy_data1 4A5C  
                                       ?_INTERRUPT_Initialize 0501  
                                    _INT0_SetInterruptHandler 5310  
                               __end_of_PWM2_16BIT_Initialize 4BDE  
                                                    __Hrparam 0000  
                                                   memcpy@tmp 050D  
                                                  vfprintf@ap 05B0  
                                                    __Lrparam 0000  
                                                  vfprintf@fp 05AD  
                                   __end_of_evaluarModoActual 49AA  
                                                  ?_vfpfcnvrt 059F  
                                                ??_goto_servo 055C  
                                           ??_UART1_IsTxReady 0503  
                                          ___fpclassifyf@F465 0604  
                                             ??_setServoAngle 054B  
                           _UART1_DefaultFramingErrorCallback 0000  
                                                    ___xxtofl 3CCE  
                                                  _T0CON0bits 031A  
                                                    __pivt0x8 0008  
                                           ?_ejecutarModoUART 0501  
                                                    __ptext10 3452  
                                                    __ptext11 5166  
                                                    __ptext20 38C0  
                                                    __ptext12 4CA0  
                                                    __ptext21 4452  
                                                    __ptext13 2842  
                                                    __ptext30 5076  
                                                    __ptext22 4F42  
                                                    __ptext14 4706  
                                                    __ptext31 4550  
                                                    __ptext23 47C8  
                                                    __ptext15 511A  
                                                    __ptext40 50A0  
                                                    __ptext32 413A  
                                                    __ptext24 3E82  
                                                    __ptext16 1568  
                                                    __ptext41 402C  
                                                    __ptext33 50F2  
                                                    __ptext25 4A98  
                                                    __ptext17 4ECE  
                                                    __ptext50 5348  
                                                    __ptext42 434C  
                                                    __ptext34 36AA  
                                                    __ptext26 4D86  
                                                    __ptext18 4CF0  
                                                    __ptext51 5284  
                                                    __ptext43 2418  
                                                    __ptext35 4FB0  
                                                    __ptext27 463C  
                                                    __ptext19 4C4A  
                                                    __ptext60 51CA  
                                                    __ptext52 528E  
                                                    __ptext44 2C08  
                                                    __ptext36 3CCE  
                                                    __ptext28 51AC  
                                                    __ptext61 51E6  
                                                    __ptext53 534C  
                                                    __ptext45 525C  
                                                    __ptext37 4D40  
                                                    __ptext29 531A  
                                                    __ptext70 52C0  
                                                    __ptext62 5202  
                                                    __ptext54 5140  
                                                    __ptext46 5266  
                                                    __ptext38 1F58  
                                                    __ptext71 52CA  
                                                    __ptext63 4FE4  
                                                    __ptext55 518A  
                                                    __ptext47 5344  
                                                    __ptext39 4246  
                                                    __ptext80 5306  
                                                    __ptext72 52D4  
                                                    __ptext64 5298  
                                                    __ptext56 5246  
                                                    __ptext48 5270  
                                                    __ptext81 5310  
                                                    __ptext73 4BDE  
                                                    __ptext65 4B06  
                                                    __ptext57 5332  
                                                    __ptext49 527A  
                                                    __ptext82 521E  
                                                    __ptext74 52DE  
                                                    __ptext66 52A2  
                                                    __ptext58 5338  
                                                    __ptext83 5016  
                                                    __ptext75 52E8  
                                                    __ptext67 52AC  
                                                    __ptext59 49AA  
                                                    __ptext84 5322  
                                                    __ptext76 52F2  
                                                    __ptext68 52B6  
                                                    __ptext85 5048  
                                                    __ptext77 4872  
                                                    __ptext69 4B72  
                                                    __ptext86 5350  
                                                    __ptext78 4F7A  
                                                    __ptext87 533E  
                                                    __ptext79 52FC  
                                                    __ptext88 532A  
                                                  _U1CON0bits 02AB  
                                                  _U1CON1bits 02AC  
                                             ___almod@divisor 0507  
                                          ??_ejecutarModoUART 055C  
                                                  _U1FIFObits 02B0  
                                             ___almod@counter 050B  
                                                  strcpy@dest 0503  
                                                    _listHead 05F1  
                                                    _openHand 50CA  
                                                    _openGate 4E4E  
                                          set2@theta2_desired 05C3  
                                          __end_of_goto_servo 4ECE  
                                                    efgtoa@fp 056C  
                                                    efgtoa@ne 0573  
                                                    efgtoa@pp 057B  
                                                    efgtoa@ou 0586  
                                   _UART1_OverrunErrorHandler 060E  
                                                    isa$xinst 0000  
                          _PWM1_16BIT_Period_InterruptHandler 066E  
                                                    _vfprintf 4CA0  
                          __end_of_INTERRUPT_InterruptManager 5048  
                                  _INTERRUPT_InterruptManager 5016  
                                                 ??_closeHand 055B  
                                                 ??_closeGate 054E  
                                                   printf@fmt 05B2  
                                                 _UART1_Write 531A  
                                _INT1_DefaultInterruptHandler 0000  
                                                 _PWM1GIEbits 0468  
                                                 _PWM1CONbits 0469  
                                                 _PWM2GIEbits 0477  
                                                    memcpy@d1 0503  
                                                    memcpy@s1 0505  
                                                 _PWM2CONbits 0478  
                                                 _PWM1GIRbits 0467  
                                                 _PWM3GIEbits 0486  
                                                 _PWM3CONbits 0487  
                                                 _PWM2GIRbits 0476  
                                                 _PWM3GIRbits 0485  
                                      ??_INTERRUPT_Initialize 0505  
        __end_of_PWM1_16BIT_SetSlice1Output2DutyCycleRegister 528E  
        __end_of_PWM2_16BIT_SetSlice1Output2DutyCycleRegister 527A  
        __end_of_PWM3_16BIT_SetSlice1Output2DutyCycleRegister 5266  
              ??_PWM1_16BIT_SetSlice1Output2DutyCycleRegister 0505  
              ??_PWM2_16BIT_SetSlice1Output2DutyCycleRegister 0505  
              ??_PWM3_16BIT_SetSlice1Output2DutyCycleRegister 0505  
               ?_PWM1_16BIT_SetSlice1Output2DutyCycleRegister 0503  
               ?_PWM2_16BIT_SetSlice1Output2DutyCycleRegister 0503  
               ?_PWM3_16BIT_SetSlice1Output2DutyCycleRegister 0503  
                _PWM3_16BIT_SetSlice1Output2DutyCycleRegister 525C  
                _PWM2_16BIT_SetSlice1Output2DutyCycleRegister 5270  
                _PWM1_16BIT_SetSlice1Output2DutyCycleRegister 5284  
                                                    intlevel2 0000  
                                     ?_PIN_MANAGER_Initialize 0501  
                                                   strcpy@src 0505  
                             ??_TMR0_OverflowCallbackRegister 0505  
                                                 efgtoa@nmode 057D  
                                                    printf@ap 05C1  
                                                  _UART1_Read 0000  
                   _PWM3_16BIT_Slice1Output2_InterruptHandler 067C  
                   _PWM2_16BIT_Slice1Output2_InterruptHandler 0676  
                   _PWM1_16BIT_Slice1Output2_InterruptHandler 0670  
                                                 ??_vfpfcnvrt 05A5  
                                    __end_of_CLOCK_Initialize 523A  
                               __end_of_PWM3_16BIT_Initialize 4B72  
                                             _TMR0_Initialize 4FE4  
                                       _PWM1_16BIT_Initialize 4BDE  
                            __end_of_INT1_SetInterruptHandler 5310  
                           _UART1_DefaultOverrunErrorCallback 0000  
                                                ___aldiv@sign 050C  
                                                  _TMR0_Tasks 0000  
                                                  _TMR0_Start 5338  
                                                  _TMR0_Write 5246  
                                               ___fladd@signs 050F  
                              __end_of_PIN_MANAGER_Initialize 491A  
                                                 _timeout_isr 0000  
                                                ___almod@sign 050C  
                                                ___fladd@aexp 0510  
                                                ___fladd@bexp 0511  
                   __end_of_UART1_ParityErrorCallbackRegister 51E6  
                         ??_UART1_ParityErrorCallbackRegister 0505  
                          ?_UART1_ParityErrorCallbackRegister 0503  
                           _UART1_ParityErrorCallbackRegister 51CA  
                                         _UART1_AutoBaudQuery 0000  
